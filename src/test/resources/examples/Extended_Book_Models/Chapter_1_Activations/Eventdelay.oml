function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Eventdelay');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[332.093506,-210.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[184.000000,-44.000000]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevout='1';
params.etimes=struct('time',{{'1.0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EventGenerate_1');
blk = instantiate_block('system/ActivationOperations/EventDelay');
blk = set_block_origin(blk,[194.000000,-180.000000]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.delay='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventDelay_1');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[214.000000,-98.000000]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventUnion_1');
blk = instantiate_block('system/SignalViewers/EventScope');
blk = set_block_origin(blk,[365.127197,-260.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventScope_1');
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '1', 'input'}, [234.000000,-210.000000], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag0, '2', 'output'},{block_tag3, '2', 'input'}, [332.093506,-67.000000;244.000000,-67.000000], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[198.804108,-217.141907]);
blk = set_block_size(blk,[110.000000,28.000000]);
params=struct();
  params.txt='Eventdelay.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag5] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

Eventdelay = subsystem_1();
Eventdelay = set_model_workspace (Eventdelay, {''});
Eventdelay = set_initial_time (Eventdelay, '0');
Eventdelay = set_final_time (Eventdelay, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
Eventdelay = set_solver_parameters( Eventdelay, tol);
Eventdelay = evaluate_model (Eventdelay);
scsm = Eventdelay;
