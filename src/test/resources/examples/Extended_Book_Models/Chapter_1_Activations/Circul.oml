function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'road');
scsm = set_diagram_context(scsm, {['travtimemin=50;',char(10),'travtimemax=100;',char(10)]});
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[650.674074,-376.013862]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[429.572003,-355.048909]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[393.572003,-313.048909]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventInput_1');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_origin(blk,[747.674074,-416.013862]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventOutput_1');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[409.571850,-432.872848]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Uniform''';
params.A='travtimemin';
params.B='travtimemax';
params.seed='211*rand()';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/Buffers/EventDelayChannel');
blk = set_block_origin(blk,[526.155394,-457.872848]);
blk = set_block_size(blk,[100.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.Times='[]';
params.initial_values='[]';
params.N='1000';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'EventDelayChannel_1');
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag0, '1', 'input'}, [576.155394,-468.438168;650.674004,-468.438554], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag5, '2', 'input'}, [601.155394,-376.013867], false);
scsm=add_event_link(scsm,{block_tag1, '2', 'output'},{block_tag5, '1', 'input'}, [551.155394,-355.048909], false);
scsm=add_event_link(scsm,{block_tag0, '2', 'output'},{block_tag3, '1', 'input'}, [757.674074,-376.013862], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [403.572003,-355.048909], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Arrival Event');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[51.264082,-292.524001]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventVariableDelay_1');
blk = instantiate_block('system/SignalGenerators/ContinuousRandom');
blk = set_block_origin(blk,[-113.805923,-282.524001]);
blk = set_block_size(blk,[110.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distrib=struct('uniform','0','normal','0','log_normal','0','beta','0','gamma','0','chi','0','exp','1','F','0','T','0','pearson','0','inv_gamma','0','inv_beta','0');;
params.seed='21148*rand()';
params.Uniform_param=struct('A',{{}},'B',{{}});
params.Normal_param=struct('mean',{{}},'variance',{{}});
params.LNormal_param=struct('meanL',{{}},'varianceL',{{}});
params.Beta_param=struct('alpha',{{}},'beta',{{}});
params.Gamma_param=struct('k',{{}},'theta',{{}});
params.Chi_param=struct('K',{{}});
params.Exp_param=struct('lambda',{{'lam'}});
params.F_param=struct('d1',{{}},'d2',{{}});
params.T_param=struct('t',{{}});
params.Pearson_param=struct('mean',{{}},'variance',{{}},'skewness',{{}},'kurtosis',{{}});
params.Inv_gamma_param=struct('alpha',{{}},'beta',{{}});
params.Inv_beta_param=struct('alpha',{{}},'beta',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'ContinuousRandom_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[81.264082,-204.449016]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ActivationSplit_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[81.264082,-323.756507]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[51.264106,-364.988992]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventUnion_1');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[19.478507,-324.193126]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_origin(blk,[99.253433,-358.028972]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'EventOutput_1');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '2', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [-58.805941,-204.449009], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag2, '1', 'input'}, [71.264082,-392.309011;183.973770,-392.309011;183.973770,-204.449005], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag4, '1', 'input'}, [29.478507,-338.240444;61.264097,-338.240802], false);
scsm=add_event_link(scsm,{block_tag3, '2', 'output'},{block_tag6, '1', 'input'}, [109.253065,-323.755992], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_5 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'SuperBlock');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-181.499990,-115.499978]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventUnion_2_1');
blk = instantiate_block('system/MathOperations/Abs');
blk = set_block_origin(blk,[-208.351553,125.024527]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.zcross='1';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Abs_1');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[-320.981962,125.022863]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-1';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Bias_1');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[-94.753011,121.024527]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'IfThenElse_1_1');
blk = instantiate_block('system/ActivationOperations/EventDelay');
blk = set_block_origin(blk,[-85.753011,-2.559182]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.delay='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventDelay_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-337.788046,54.043052]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[-156.857251,30.043052]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'IfThenElse_1');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[-171.857251,-63.812803]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'EventVariableDelay_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-308.884445,10.812598]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='serv_time';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-120.090292,-116.885354]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'EventUnion_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-141.857299,-78.130681]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-180.828183,-116.112343]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'EventUnion_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-380.246989,44.043511]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Input_1');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_ident (blk,'car out');
blk = set_block_origin(blk,[-110.090292,-168.692677]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'car out');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[-291.227437,-66.199166]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'EventInput_3');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'car in');
blk = set_block_origin(blk,[-74.753011,197.880410]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'car in');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [-218.351553,145.028057], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '2', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag2, '1', 'input'}, [-337.788143,145.022966], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag7, '1', 'input'}, [-226.884445,-33.812835], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag9, '2', 'input'}, [-49.752210,-33.037074;-90.090175,-33.037074], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag13, '1', 'input'}, [-100.090292,-138.692677], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag11, '2', 'input'}, [-150.828180,-78.130680], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag9, '1', 'input'}, [-110.090238,-78.130678], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag11, '1', 'input'}, [-170.828179,-76.199166], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag6, '1', 'input'}, [-160.828183,-131.898352;-321.035329,-131.898359;-321.035329,99.371940;-126.858871,99.371940], false);
out_1 = scsm;
end

function [out_1] = subsystem_4 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Traffic Light 2');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-398.320186,-98.048559]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-398.320186,-146.640536]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_2_1');
blk = instantiate_block('system/Routing/Relay');
blk = set_block_origin(blk,[-105.185569,-10.464746]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.z0='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Relay_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-164.928036,-152.986253]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[-73.402151,-152.986253]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='0';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'DiscreteDelay_1');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[-287.871334,-127.985567]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='3';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'SelectInput_1');
blk = instantiate_super_block();
scsm0 = subsystem_5();
blk = fill_super_block(blk,scsm0);
blk = set_block_origin(blk,[-222.161068,-8.464746]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag6] = add_block(scsm, blk, 'SuperBlock');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-168.812054,62.625456]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-97.067751,-122.986253]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-35.185786,-36.515337]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-208.951824,-28.862004]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-207.161068,62.625234]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-277.871334,-21.864015]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'cars waiting');
blk = set_block_origin(blk,[-3.679814,-46.646246]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'cars waiting');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'arrival');
blk = set_block_origin(blk,[-317.249523,88.064757]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'arrival');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'green light');
blk = set_block_origin(blk,[-178.812054,88.064757]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'green light');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'red light');
blk = set_block_origin(blk,[-70.185747,88.064757]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='3';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'red light');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_ident (blk,'departure');
blk = set_block_origin(blk,[-218.951824,-191.503816]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'departure');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag5, '1', 'input'}, [-328.808618,-78.049004;-328.808618,-94.652004], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '2', 'input'}, [-329.410618,-126.640871;-329.410618,-107.986004], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag3, '2', 'input'}, [-3.252618,-122.985508;-3.252618,-166.723004;-186.265618,-166.723004;-186.265618,-137.986036], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag2, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag13, '1', 'input'}, [-35.185781,-36.645756], false);
scsm=add_event_link(scsm,{block_tag7, '3', 'output'},{block_tag2, '2', 'input'}, [-90.185569,62.625456], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag10, '1', 'input'}, [-192.161618,-28.862004], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag5, '2', 'input'}, [-257.871618,-28.862004], false);
scsm=add_event_link(scsm,{block_tag16, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag12, '1', 'input'}, [-307.247682,-21.864012], false);
scsm=add_event_link(scsm,{block_tag11, '2', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag5, '3', 'input'}, [-237.871618,62.625029], false);
scsm=add_event_link(scsm,{block_tag7, '2', 'output'},{block_tag11, '1', 'input'}, [-207.161068,62.625215], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag6, '1', 'input'}, [-277.871618,48.023996;-177.161068,48.023996], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag9, '1', 'input'}, [-97.067758,-36.516473], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_7 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'SuperBlock');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-181.499990,-115.499978]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventUnion_2_1');
blk = instantiate_block('system/MathOperations/Abs');
blk = set_block_origin(blk,[-208.351553,125.024527]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.zcross='1';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Abs_1');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[-320.981962,125.022863]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-1';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Bias_1');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[-94.753011,121.024527]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'IfThenElse_1_1');
blk = instantiate_block('system/ActivationOperations/EventDelay');
blk = set_block_origin(blk,[-85.753011,-2.559182]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.delay='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventDelay_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-337.788046,54.043052]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[-156.857251,30.043052]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'IfThenElse_1');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[-171.857251,-63.812803]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'EventVariableDelay_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-308.884445,10.812598]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='serv_time';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-120.090292,-116.885354]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'EventUnion_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-141.857299,-78.130681]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-180.828183,-116.112343]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'EventUnion_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-380.246989,44.043511]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Input_1');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_ident (blk,'car out');
blk = set_block_origin(blk,[-110.090292,-168.692677]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'car out');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[-291.227437,-66.199166]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'EventInput_3');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'car in');
blk = set_block_origin(blk,[-74.753011,197.880410]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'car in');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [-218.351553,145.028057], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '2', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag2, '1', 'input'}, [-337.788143,145.022966], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag7, '1', 'input'}, [-226.884445,-33.812835], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag9, '2', 'input'}, [-49.752210,-33.037074;-90.090175,-33.037074], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag13, '1', 'input'}, [-100.090292,-138.692677], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag11, '2', 'input'}, [-150.828180,-78.130680], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag9, '1', 'input'}, [-110.090238,-78.130678], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag11, '1', 'input'}, [-170.828179,-76.199166], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag6, '1', 'input'}, [-160.828183,-131.898352;-321.035329,-131.898359;-321.035329,99.371940;-126.858871,99.371940], false);
out_1 = scsm;
end

function [out_1] = subsystem_6 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Traffic Light 1');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-398.320186,-98.048559]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-398.320186,-146.640536]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_2_1');
blk = instantiate_block('system/Routing/Relay');
blk = set_block_origin(blk,[-105.185569,-10.463876]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.z0='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Relay_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-159.307903,-153.378328]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[-67.782017,-153.378090]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='0';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'DiscreteDelay_1');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[-287.871334,-127.985567]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='3';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'SelectInput_1');
blk = instantiate_super_block();
scsm0 = subsystem_7();
blk = fill_super_block(blk,scsm0);
blk = set_block_origin(blk,[-222.161068,-8.464746]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag6] = add_block(scsm, blk, 'SuperBlock');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-168.812054,62.625456]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-91.447618,-123.378004]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-35.185786,-36.515337]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-208.951824,-28.862004]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-207.161068,62.625234]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-277.871334,-21.864015]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'cars waiting');
blk = set_block_origin(blk,[-3.679814,-46.646246]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'cars waiting');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'arrival');
blk = set_block_origin(blk,[-317.249523,88.064757]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'arrival');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'green light');
blk = set_block_origin(blk,[-178.812054,88.015272]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'green light');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'red light');
blk = set_block_origin(blk,[-70.185747,89.503816]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='3';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'red light');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_ident (blk,'departure');
blk = set_block_origin(blk,[-218.951824,-191.503816]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'departure');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag5, '1', 'input'}, [-328.808618,-78.049004;-328.808618,-94.652004], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '2', 'input'}, [-329.410618,-126.640871;-329.410618,-107.986004], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [-193.589618,-107.986004;-193.589618,-108.378004], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag3, '2', 'input'}, [-3.252618,-123.377791;-3.252618,-166.723004;-186.265618,-166.723004;-186.265618,-138.378004], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag2, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag13, '1', 'input'}, [-35.185781,-36.645756], false);
scsm=add_event_link(scsm,{block_tag7, '3', 'output'},{block_tag2, '2', 'input'}, [-90.185569,62.625456], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag10, '1', 'input'}, [-192.161618,-28.862004], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag5, '2', 'input'}, [-257.871618,-28.862004], false);
scsm=add_event_link(scsm,{block_tag16, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag12, '1', 'input'}, [-307.247682,-21.864012], false);
scsm=add_event_link(scsm,{block_tag11, '2', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag5, '3', 'input'}, [-237.871618,62.625029], false);
scsm=add_event_link(scsm,{block_tag7, '2', 'output'},{block_tag11, '1', 'input'}, [-207.161068,62.625215], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag6, '1', 'input'}, [-277.871618,48.023996;-177.161068,48.023996], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag9, '1', 'input'}, [-91.447625,-36.516369], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Circul');
scsm = set_diagram_context(scsm, {['%% lambda is coefficient of exponential law governing random',char(10),'%%  arrival of cars',char(10),'lam=1/3;',char(10),char(10),'%% serv_time is a constant for delay',char(10),'serv_time=1.2;',char(10),char(10),'%% per is period for green lights (both green lights activate every per)',char(10),'per=200;',char(10),char(10),'%% dper the offset of the second traffic light''s first activation',char(10),'dper=100;',char(10),char(10),char(10),char(10),char(10),char(10),char(10)]});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'road');
blk = set_block_origin(blk,[162.664776,-533.438904]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.623529,0.843137,1.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag0] = add_block(scsm, blk, 'road');
blk = instantiate_block('system/ActivationOperations/EventClock');
blk = set_block_origin(blk,[179.664637,-322.534110]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.period='per';
params.init='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EventClock_4_1');
blk = instantiate_block('system/ActivationOperations/EventClock');
blk = set_block_origin(blk,[243.664418,-354.599611]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.period='per';
params.init='per/2';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventClock_4_1_1');
blk = instantiate_block('system/ActivationOperations/EventClock');
blk = set_block_origin(blk,[491.257674,-322.534110]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.period='per';
params.init='dper';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventClock_4_1_2');
blk = instantiate_block('system/ActivationOperations/EventClock');
blk = set_block_origin(blk,[555.257674,-354.599611]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.period='per';
params.init='per/2+dper';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventClock_4_1_3');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Arrival Event');
blk = set_block_origin(blk,[120.664448,-373.439202]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag5] = add_block(scsm, blk, 'Arrival Event');
blk = instantiate_super_block();
scsm0 = subsystem_4();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Traffic Light 2');
blk = set_block_origin(blk,[420.257813,-468.092590]);
blk = set_block_size(blk,[192.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag6] = add_block(scsm, blk, 'Traffic Light 2');
blk = instantiate_super_block();
scsm0 = subsystem_6();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Traffic Light 1');
blk = set_block_origin(blk,[108.664776,-468.092590]);
blk = set_block_size(blk,[192.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag7] = add_block(scsm, blk, 'Traffic Light 1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_origin(blk,[664.743531,-567.803650]);
blk = set_block_size(blk,[108.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.913725,0.941176,0.858824,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[500,500]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='0';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''Traffic''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''CW1''','''CW2'''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/ActivationOperations/InitialEvent');
blk = set_block_origin(blk,[110.664448,-297.074092]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
[scsm, block_tag9] = add_block(scsm, blk, 'InitialEvent');
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag8, '1', 'input'}, [350.177429,-444.092697;350.177429,-531.803710], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag7, '3', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag6, '3', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag8, '2', 'input'}, [635.733643,-444.092590;635.733643,-555.803650], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag6, '1', 'input'}, [204.664776,-571.438843;401.704041,-571.438843;401.704041,-385.288361;452.257813,-385.288361], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[464.782654,-531.684753]);
blk = set_block_size(blk,[84.000000,28.000000]);
params=struct();
  params.txt='Circul.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag10] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

Circul = subsystem_1();
Circul = set_model_workspace (Circul, {['tf=800;',char(10)]});
Circul = set_initial_time (Circul, '0');
Circul = set_final_time (Circul, 'tf');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0'};
Circul = set_solver_parameters( Circul, tol);
Circul = evaluate_model (Circul);
scsm = Circul;
