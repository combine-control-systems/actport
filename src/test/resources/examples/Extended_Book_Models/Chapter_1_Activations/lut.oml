function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'PulseGenerator');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[65.997804,-243.000000]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Uniform''';
params.A='0';
params.B='exp(-ta*lambda)';
params.seed='2113243';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[5.000000,-383.663086]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='mu';
params.B='sigma';
params.seed='2113';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Random_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[349.000000,-268.002592]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Product');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[131.088285,-322.750639]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1/lambda';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[233.000000,-472.663116]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[0;0]';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[367.769196,-448.471649]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[423.000000,-268.002592]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='.1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'EventVariableDelay');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[443.272564,-428.471649]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[366.579111,-122.787659]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[376.500000,-152.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'fork');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[101.997804,-152.119639]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'fork_1');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_origin(blk,[443.000000,-308.002592]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'EventOutput');
blk = instantiate_block('system/MathOperations/MathFunc');
blk = set_block_origin(blk,[204.003338,-243.002592]);
blk = set_block_size(blk,[64.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''log''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'MathFunc_2');
blk = instantiate_block('system/MathOperations/MathFunc');
blk = set_block_origin(blk,[138.003338,-383.663086]);
blk = set_block_size(blk,[64.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''exp''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MathFunc');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[223.000000,-411.334806]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='[1;0]';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'SampleClock_1');
blk = instantiate_block('system/ActivationOperations/InitialEvent');
blk = set_block_origin(blk,[137.176571,-262.750639]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
[scsm, block_tag15] = add_block(scsm, blk, 'SampleClock');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '2', 'input'}, [249.481000,-302.750639;249.481000,-253.002592], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '2', 'input'}, [331.000000,-452.663116;331.000000,-433.471649], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag9, '1', 'input'}, [376.579111,-152.000000], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag6, '1', 'input'}, [453.000000,-152.000000], false);
scsm=add_event_link(scsm,{block_tag9, '2', 'output'},{block_tag10, '1', 'input'}, [101.997804,-152.000000], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag1, '1', 'input'}, [41.000000,-152.119639], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag12, '1', 'input'}, [147.997804,-222.999932], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag5, '1', 'input'}, [327.000000,-363.663086;327.000000,-403.471649], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '1', 'input'}, [167.088285,-272.750639], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'lut');
scsm = set_diagram_context(scsm, {[char(10),'s=200;',char(10),'c=0.2;',char(10),'a=0.03*fa;',char(10),'k1=1;',char(10),'k2=0.002;',char(10),'k3=0;',char(10),'k4=1;',char(10),'k5=2.5;',char(10),'k6=5;',char(10),'b1=2;',char(10),'b2=0.594;',char(10),'b3=10;',char(10),'b4=0.1;',char(10),'p1=100;',char(10),'p2=100;',char(10),'p3=0.3;',char(10),'mu=-1.2;',char(10),'sigma=0.1;',char(10),'lambda=fa;',char(10),'ta=1/16;',char(10)]});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'PulseGenerator');
blk = set_block_origin(blk,[652.193115,-909.840881]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag0] = add_block(scsm, blk, 'PulseGenerator');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[783.382446,-956.111023]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/Dynamical/JumpStateSpace');
blk = set_block_origin(blk,[885.000000,-941.111023]);
blk = set_block_size(blk,[120.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='zeros(3,3)';
params.B='eye(3,3)';
params.C='eye(3,3)';
params.D='zeros(3,3)';
params.x0='zeros(1,3)';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'JumpStateSpace');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[614.324220,-805.967102]);
blk = set_block_size(blk,[444.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''(u1>0)*(p1/(1+exp(-p2*(u1-p3)))-k6*u3)+(1-(u1>0))*(p1/(1+exp(p2*p3))-k6*u3)''';
params.zc='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'MathExpression');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[658.000264,-738.649658]);
blk = set_block_size(blk,[288.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''(b1-b2/(1+exp(-b3*(u1-b4))))*(k3*a+k4*u1-k5*u2)''';
params.zc='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'MathExpression_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[704.000259,-708.649518]);
blk = set_block_size(blk,[192.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''s*(-u1*(u1-c)*(u1-1)-k1*u2+k2*a)''';
params.zc='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MathExpression_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1068.324220,-726.523193]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'fork_2');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[623.147827,-741.649658]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-11'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1068.324220,-857.846863]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'fork_4');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[591.972229,-808.900966]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-2','-1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[1085.013423,-893.846863]);
blk = set_block_size(blk,[6.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'-1','-2','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/Hybrid/LastInput');
blk = set_block_origin(blk,[662.193115,-987.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'LastInput');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1068.324220,-911.111023]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'fork_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[677.193115,-831.216675]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1068.324220,-793.967102]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[1111.013423,-893.846863]);
blk = set_block_size(blk,[60.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''',''''''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[-0.4,1.4]','[0,0.16]','[0,16]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag5, '1', 'input'}, [1068.322535,-696.648701], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag4, '1', 'input'}, [956.000264,-726.523193], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag7, '1', 'input'}, [694.000259,-696.650287], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag9, '2', 'input'}, [604.324220,-793.934034;608.972229,-793.934034], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag1, '2', 'input'}, [748.972229,-967.000000;748.972229,-941.111023], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '2', 'output'},{block_tag11, '1', 'input'}, [1068.324220,-998.243000;632.006000,-998.243000;632.006000,-967.000000], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag9, '1', 'input'}, [608.972229,-711.649658], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag13, '1', 'input'}, [677.193115,-928.766000;616.674988,-928.766000;616.674988,-831.217030], false);
scsm=add_event_link(scsm,{block_tag13, '2', 'output'},{block_tag2, '1', 'input'}, [945.000000,-831.216675], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [750.947000,-889.840881;750.947000,-911.111023], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag2, '1', 'input'}, [575.668701,-778.900966;575.668701,-852.965000;846.972229,-852.965000;846.972229,-896.111023], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag15, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '3', 'output'},{block_tag15, '3', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[809.660400,-991.107544]);
blk = set_block_size(blk,[66.000000,28.000000]);
params=struct();
  params.txt='lut.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag16] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

lut = subsystem_1();
lut = set_model_workspace (lut, {['fa=16;',char(10)]});
lut = set_initial_time (lut, '0');
lut = set_final_time (lut, 'fa');
tol = {'1e-6', '1e-6', '1e-10', '0' , '0', 'lsodar', '0.0001'};
lut = set_solver_parameters( lut, tol);
lut = evaluate_model (lut);
scsm = lut;
