function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Cooling system');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[318.670799,-556.322722]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventVariableDelay_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[114.722710,-561.164183]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[162.772381,-531.164183]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='CPer';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[328.440074,-456.304171]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventUnion_2_1');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[318.711620,-597.612459]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'EventUnion_2_2');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[308.864207,-677.832339]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'IfThenElse');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[399.046194,-546.533672]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Constant_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[399.045985,-607.255627]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='0';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Constant_1_2');
blk = instantiate_block('system/Routing/Relay');
blk = set_block_origin(blk,[554.196483,-597.084902]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.858824,0.760784,0.835294,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.z0='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Relay_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[348.440074,-475.013289]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[455.832497,-587.255553]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[59.479238,-364.050840]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[59.479271,-479.687651]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[245.864207,-657.832339]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[634.196483,-587.084902]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'on');
blk = set_block_origin(blk,[348.368724,-401.762270]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'on');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'restart');
blk = set_block_origin(blk,[49.479238,-354.050840]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'restart');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'turn off');
blk = set_block_origin(blk,[589.196596,-502.189052]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='3';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'turn off');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[225.930138,-556.164183]);
blk = set_block_size(blk,[48.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'SelectInput');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[464.838844,-573.362490]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'SelectInput_1');
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [289.177622,-687.832339;289.177622,-424.711435;338.440622,-424.711435], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag5, '2', 'output'},{block_tag7, '1', 'input'}, [390.838867,-687.832339;390.838867,-557.255627], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag19, '1', 'input'}, [454.838844,-526.533633], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag19, '2', 'input'}, [455.832346,-564.362490], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag8, '1', 'input'}, [544.196483,-555.362490], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [338.711622,-610.412435;338.864622,-610.412435], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag6, '1', 'input'}, [419.045608,-475.013397], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag0, '1', 'input'}, [303.740622,-526.164435;303.740622,-526.323435], false);
scsm=add_event_link(scsm,{block_tag9, '3', 'output'},{block_tag2, '1', 'input'}, [182.772381,-475.013429], false);
scsm=add_event_link(scsm,{block_tag9, '2', 'output'},{block_tag0, '1', 'input'}, [348.440074,-475.013435;348.670799,-475.013435], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag8, '2', 'input'}, [455.832497,-587.084902], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag16, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag12, '1', 'input'}, [59.479271,-364.050840], false);
scsm=add_event_link(scsm,{block_tag11, '2', 'output'},{block_tag8, '1', 'input'}, [59.479238,-364.266986;569.196610,-364.266577], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '2', 'input'}, [348.670622,-571.967435;348.711622,-571.967435], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag4, '1', 'input'}, [59.479622,-572.102435;328.711622,-572.102435], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag1, '1', 'input'}, [134.722710,-479.687651], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '2', 'input'}, [358.368622,-421.834435;358.439622,-421.834435], false);
scsm=add_event_link(scsm,{block_tag17, '1', 'output'},{block_tag8, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag18, '2', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Plant');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-341.514051,28.886952]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/ActivationOperations/EdgeTrigger');
blk = set_block_origin(blk,[-210.076838,59.363331]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.edge='''>0 to <=0''';
params.showport='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EdgeTrigger_2_1');
blk = instantiate_block('system/ActivationOperations/EdgeTrigger');
blk = set_block_origin(blk,[-107.276972,13.419996]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.edge='''<=0 to >0''';
params.showport='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EdgeTrigger_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-327.273010,-105.624100]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Constant_2_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-253.159330,-135.623791]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='deltaT';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-327.273010,-35.858505]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'EventUnion');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[-97.276972,-130.557873]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'EventVariableDelay_1');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Cooling system');
blk = set_block_origin(blk,[-137.721821,-267.363331]);
blk = set_block_size(blk,[120.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag7] = add_block(scsm, blk, 'Cooling system');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-87.276972,-48.536854]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='3';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'EventUnion_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-255.795445,58.886952]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-228.076688,4.082601]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-63.249379,-186.071170]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-67.276972,-19.136399]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-77.721821,-185.940987]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-272.345692,58.886952]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'Temp');
blk = set_block_origin(blk,[-455.834500,63.886713]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Temp');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'Threshold');
blk = set_block_origin(blk,[-414.353688,33.886601]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Threshold');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[15.834500,-253.363331]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'restart');
blk = set_block_origin(blk,[-47.061373,-163.505028]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'restart');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'turn off');
blk = set_block_origin(blk,[-5.482913,-163.505028]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'turn off');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[-188.989619,-130.623899]);
blk = set_block_size(blk,[48.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'SelectInput');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag20, '2', 'input'}, [-198.989619,-115.623801], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag6, '1', 'input'}, [-130.989619,-100.590832;-107.276972,-100.590832], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag2, '1', 'input'}, [-255.795709,33.420269], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag1, '1', 'input'}, [-255.795688,79.363601], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag10, '1', 'input'}, [-228.076838,49.363139], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag10, '2', 'output'},{block_tag8, '1', 'input'}, [-80.610306,4.082601], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag5, '2', 'input'}, [-297.272669,4.082334], false);
scsm=add_event_link(scsm,{block_tag18, '1', 'output'},{block_tag11, '1', 'input'}, [-63.249641,-173.505575], false);
scsm=add_event_link(scsm,{block_tag11, '2', 'output'},{block_tag8, '3', 'input'}, [-14.581640,-186.071324;-14.581640,-18.928944;-53.943639,-18.928944], false);
scsm=add_event_link(scsm,{block_tag11, '3', 'output'},{block_tag13, '1', 'input'}, [-63.249379,-185.940979], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag4, '1', 'input'}, [-233.159330,-19.136399], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag8, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '2', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag5, '1', 'input'}, [-371.580640,-185.941143;-371.580640,3.691998;-317.272637,3.691998], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag7, '1', 'input'}, [-67.276972,-161.499989;-117.721821,-161.499989], false);
scsm=add_event_link(scsm,{block_tag19, '1', 'output'},{block_tag7, '3', 'input'}, [4.517087,-196.499989;-37.721821,-196.499989], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag7, '1', 'input'}, [-272.345692,-243.363331], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Cooling');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[-97.650765,61.713417]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevout='1';
params.etimes=struct('time',{{'4'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventGenerate_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-163.625019,-45.636616]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='23';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[73.878639,-30.636616]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='-q';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Gain_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[159.132533,-55.636552]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[247.822891,-55.636552]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='32';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Integral_1');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-63.965387,-112.568267]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='.1';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'SampleClock_1');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-53.965387,-172.568267]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='0.5';
params.B='0.5';
params.seed='21148';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[324.638336,-25.636552]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Split');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Plant');
blk = set_block_origin(blk,[-81.650765,-40.636616]);
blk = set_block_size(blk,[96.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag8] = add_block(scsm, blk, 'Plant');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[49.669147,-10.636616]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[352.220428,-111.486565]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[-1,2]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '2', 'input'}, [114.822000,-152.569450;114.822000,-40.636600], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag8, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag8, '1', 'input'}, [324.638336,45.294655;-103.689423,45.294655;-103.689423,4.363384], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag10, '1', 'input'}, [324.638000,-81.486600], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag10, '2', 'input'}, [49.669147,-101.486565], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[149.218948,-111.743347]);
blk = set_block_size(blk,[96.000000,28.000000]);
params=struct();
  params.txt='Cooling.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag11] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

Cooling = subsystem_1();
Cooling = set_model_workspace (Cooling, {['deltaT=3;',char(10),'CPer=2;',char(10),'q=1;',char(10)]});
Cooling = set_initial_time (Cooling, '0');
Cooling = set_final_time (Cooling, '300');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
Cooling = set_solver_parameters( Cooling, tol);
Cooling = evaluate_model (Cooling);
scsm = Cooling;
