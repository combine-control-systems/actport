function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Depart event');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[394.948811,-290.555003]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'IfThenElse');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[429.948760,-350.394994]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EventUnion');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[419.733459,-447.105006]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventVariableDelay');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[400.404999,-489.774994]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventUnion_1');
blk = instantiate_block('system/ActivationOperations/IfThenElse');
blk = set_block_origin(blk,[390.445280,-585.340698]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,2);
params=struct();
params.externalActivation='1';
params.nmod='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'IfThenElse_1');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[296.375037,-280.554980]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-1';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Bias');
blk = instantiate_block('system/SignalGenerators/ContinuousRandom');
blk = set_block_origin(blk,[261.624995,-441.104997]);
blk = set_block_size(blk,[120.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distrib=struct('uniform','0','normal','0','log_normal','0','beta','0','gamma','0','chi','0','exp','1','F','0','T','0','pearson','0','inv_gamma','0','inv_beta','0');;
params.seed='248*rand()';
params.Uniform_param=struct('A',{{}},'B',{{}});
params.Normal_param=struct('mean',{{}},'variance',{{}});
params.LNormal_param=struct('meanL',{{}},'varianceL',{{}});
params.Beta_param=struct('alpha',{{}},'beta',{{}});
params.Gamma_param=struct('k',{{}},'theta',{{}});
params.Chi_param=struct('K',{{}});
params.Exp_param=struct('lambda',{{'mu'}});
params.F_param=struct('d1',{{}},'d2',{{}});
params.T_param=struct('t',{{}});
params.Pearson_param=struct('mean',{{}},'variance',{{}},'skewness',{{}},'kurtosis',{{}});
params.Inv_gamma_param=struct('alpha',{{}},'beta',{{}});
params.Inv_beta_param=struct('alpha',{{}},'beta',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ContinuousRandom');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[449.777039,-368.750000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[414.948795,-202.331249]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[387.846558,-454.977000]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'EventInput_1');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_origin(blk,[468.539795,-504.186279]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'EventOutput');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[449.695007,-463.440002]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'ActivationSplit_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[339.082947,-565.340698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[377.268982,-555.340698]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Split');
scsm=add_event_link(scsm,{block_tag0, '2', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag0, '1', 'input'}, [384.948811,-260.554995], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag7, '1', 'input'}, [449.948760,-368.750000], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag1, '2', 'input'}, [405.445263,-612.035000;508.275000,-612.035000;508.275000,-315.577154;459.948760,-315.577143], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag11, '1', 'input'}, [449.695007,-457.105006], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'output'},{block_tag2, '1', 'input'}, [449.733452,-368.750000], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '1', 'input'}, [420.405000,-507.625000;420.445263,-507.625000], false);
scsm=add_event_link(scsm,{block_tag7, '2', 'output'},{block_tag6, '1', 'input'}, [321.624995,-368.750000], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag3, '1', 'input'}, [410.405000,-464.977000], false);
scsm=add_event_link(scsm,{block_tag11, '2', 'output'},{block_tag10, '1', 'input'}, [478.540000,-463.440000], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag3, '2', 'input'}, [430.405000,-463.440000], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '2', 'output'},{block_tag5, '1', 'input'}, [377.269000,-468.771000;246.563920,-468.771000;246.563951,-260.554980], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Arrive event');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[187.800018,-394.080005]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventVariableDelay');
blk = instantiate_block('system/SignalGenerators/ContinuousRandom');
blk = set_block_origin(blk,[-32.269988,-394.079972]);
blk = set_block_size(blk,[120.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distrib=struct('uniform','0','normal','0','log_normal','0','beta','0','gamma','0','chi','0','exp','1','F','0','T','0','pearson','0','inv_gamma','0','inv_beta','0');;
params.seed='21000*rand()';
params.Uniform_param=struct('A',{{}},'B',{{}});
params.Normal_param=struct('mean',{{}},'variance',{{}});
params.LNormal_param=struct('meanL',{{}},'varianceL',{{}});
params.Beta_param=struct('alpha',{{}},'beta',{{}});
params.Gamma_param=struct('k',{{}},'theta',{{}});
params.Chi_param=struct('K',{{}});
params.Exp_param=struct('lambda',{{'lam'}});
params.F_param=struct('d1',{{}},'d2',{{}});
params.T_param=struct('t',{{}});
params.Pearson_param=struct('mean',{{}},'variance',{{}},'skewness',{{}},'kurtosis',{{}});
params.Inv_gamma_param=struct('alpha',{{}},'beta',{{}});
params.Inv_beta_param=struct('alpha',{{}},'beta',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'ContinuousRandom');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[187.923065,-466.544987]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventUnion');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[217.800018,-306.005005]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'ActivationSplit_1');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[164.315521,-417.776764]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'activation_in_port');
blk = instantiate_block('system/Ports/EventOutput');
blk = set_block_origin(blk,[234.789368,-459.584961]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'EventOutput');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[217.800018,-428.222866]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ActivationSplit');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '2', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag1, '1', 'input'}, [27.729999,-306.004996], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '1', 'input'}, [207.923041,-493.865000;264.865000,-493.865000;264.865000,-306.005000], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag2, '1', 'input'}, [197.923041,-427.777030], false);
scsm=add_event_link(scsm,{block_tag6, '2', 'output'},{block_tag5, '1', 'input'}, [244.789251,-428.222370], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '2', 'input'}, [217.923045,-428.222890], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Queue');
scsm = set_diagram_context(scsm, {['lam=.3;',char(10),'mu=.35;',char(10),'z0=3;',char(10)]});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Depart event');
blk = set_block_origin(blk,[283.839004,-418.797489]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag0] = add_block(scsm, blk, 'Depart event');
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[303.902745,-281.302338]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevout='1';
params.etimes=struct('time',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EventGenerate');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[345.902489,-312.038450]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[214.844284,-537.239563]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,3);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='3';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'EventSelectInput');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Arrive event');
blk = set_block_origin(blk,[158.773423,-418.797489]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
blk = set_atomic_property(blk,0);
[scsm, block_tag4] = add_block(scsm, blk, 'Arrive event');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[224.844284,-457.116000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ActivationSplit_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[92.968979,-486.410522]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[92.968979,-537.240282]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[336.077673,-562.240226]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[433.615930,-562.240226]);
blk = set_block_size(blk,[24.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='z0';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'DiscreteDelay');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[411.268005,-532.240226]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[411.268005,-398.797489]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Split_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[264.844093,-312.038450]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'ActivationSplit_2');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[462.004944,-418.797489]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[0,35]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Scope');
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '2', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '2', 'input'}, [345.903610,-363.466990;293.839004,-363.466741], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [178.773409,-457.116000], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '2', 'input'}, [303.838858,-438.116000;244.844000,-438.116000], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '1', 'input'}, [173.907000,-466.411000;173.907000,-503.906000], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag8, '2', 'input'}, [499.463000,-532.240226;499.463000,-575.977000;316.450000,-575.977000;316.450000,-547.240042], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag5, '2', 'output'},{block_tag0, '1', 'input'}, [224.843966,-346.184763;313.839004,-346.184635], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag3, '3', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag4, '1', 'input'}, [178.773384,-312.038450], false);
scsm=add_event_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[151.787460,-538.961975]);
blk = set_block_size(blk,[90.000000,28.000000]);
params=struct();
  params.txt='Queue.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag14] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

Queue = subsystem_1();
Queue = set_model_workspace (Queue, {['tf=300000;',char(10)]});
Queue = set_initial_time (Queue, '0');
Queue = set_final_time (Queue, 'tf');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0'};
Queue = set_solver_parameters( Queue, tol);
Queue = evaluate_model (Queue);
scsm = Queue;
