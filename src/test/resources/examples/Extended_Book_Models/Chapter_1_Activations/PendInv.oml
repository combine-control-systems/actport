function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'PendInv');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[605.769702,-463.986110]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[646.119484,-229.743682]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='.15';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[640.418689,-493.986110]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='[0;0;pi/100;0]';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Integral');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_ident (blk,'Inverted Pendulum');
blk = set_block_origin(blk,[297.490000,-325.647705]);
blk = set_block_size(blk,[348.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.work='getcurrentenv()';
params.exx='[''[0, M+m, 0, m*l*cos(u1(3))/2 ; 1, 0, 0, 0;'',char(10),''0, m*l*cos(u1(3))/2,0, J+m*l^2/4 ; 0, 0, 1, 0 ]'',char(10),''\'',char(10),''[m*l*u1(4)^2*sin(u1(3))/2+u2;u1(2);m*g*l*sin(u1(3))/2;u1(4)]'']';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Inverted Pendulum');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[502.731355,-480.167023]);
blk = set_block_size(blk,[59.758879,32.361825]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.extractor=struct('index',{{'1','3'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Extractor_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[565.769702,-427.511812]);
blk = set_block_size(blk,[80.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,270.000000);
blk = set_block_bg_color(blk,[0.933333,0.886275,0.921569,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='K';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MatrixGain');
blk = instantiate_block('system/Hybrid/SampleHold');
blk = set_block_origin(blk,[374.417847,-395.993011]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.externalActivation='1';
params.alwaysActive='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'SampleHold');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[350.518372,-375.993011]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/ActivationOperations/EventVariableDelay');
blk = set_block_origin(blk,[173.518387,-333.375961]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.initfir='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'EventVariableDelay');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[676.119484,-239.743682]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[109.518394,-323.375961]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='0.02';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[273.413721,-480.076941]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.839216,0.886275,0.733333,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''',''''''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[-5,5]','[-.2,.2]','[-.1,.1]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'output'},{block_tag3, '1', 'input'}, [605.769490,-517.705276;253.417862,-517.705276;253.417862,-271.647705], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '3', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag11, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag11, '2', 'input'}, [492.731354,-456.077390], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag6, '1', 'input'}, [467.971092,-352.511812;467.971204,-375.993011], false);
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [701.417847,-289.647705;701.417847,-463.986110], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag11, '1', 'input'}, [350.518372,-440.076941], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag3, '2', 'input'}, [267.518372,-375.993011;267.518372,-307.647705], false);
scsm=add_event_link(scsm,{block_tag9, '2', 'output'},{block_tag8, '1', 'input'}, [203.518387,-239.760369], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [676.122555,-338.992981;567.382490,-338.992981;567.382490,-402.512276], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag6, '1', 'input'}, [394.417847,-343.375961], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[394.975403,-505.196503]);
blk = set_block_size(blk,[96.000000,28.000000]);
params=struct();
  params.txt='PendInv.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag12] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

PendInv = subsystem_1();
PendInv = set_model_workspace (PendInv, {['M=10;',char(10),'m=1;',char(10),'l=0.5;',char(10),'J=m*l^2/12;',char(10),'g=9.81;',char(10),'K=[0.35,1.4,128,14];',char(10),char(10)]});
PendInv = set_initial_time (PendInv, '0');
PendInv = set_final_time (PendInv, '10');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0'};
PendInv = set_solver_parameters( PendInv, tol);
PendInv = evaluate_model (PendInv);
scsm = PendInv;
