function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Projectile');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[1022.549683,-845.743213]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='[V0;z0;Theta0]';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Integral');
blk = instantiate_block('system/MathOperations/MathExpressions');
blk = set_block_ident (blk,'f(X)');
blk = set_block_origin(blk,[864.139404,-830.743213]);
blk = set_block_size(blk,[87.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.work='getcurrentenv()';
params.nexx='3';
params.Exp=struct('exx',{{'''u4/m/2*u1*u1*Sref*u5-g*sin(u3)''','''-u1*sin(u3)''','''-1/u1*g*cos(u3)'''}});
params.zc='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'f(X)');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'a_sensor');
blk = set_block_origin(blk,[1069.333834,-751.282043]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'a_sensor');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'ax');
blk = set_block_origin(blk,[872.382080,-772.940491]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='Sensor';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'ax');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'Actual state');
blk = set_block_origin(blk,[1098.307100,-835.743213]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Actual state');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[797.554443,-810.743213]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'Rho');
blk = set_block_origin(blk,[452.065125,-840.908374]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='RhoExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Rho');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[976.056641,-855.743213]);
blk = set_block_size(blk,[24.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[829.487976,-621.834900]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_ident (blk,'Measurement noise');
blk = set_block_origin(blk,[911.565063,-714.282043]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='0';
params.B='sqrt(R)';
params.seed='21148';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Measurement noise');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_ident (blk,'Noise');
blk = set_block_origin(blk,[821.487976,-914.282043]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='0';
params.B='diag(sqrt(Q))';
params.seed='21148';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Noise');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[1008.065125,-759.282043]);
blk = set_block_size(blk,[24.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/LookupTables/LookupTable');
blk = set_block_origin(blk,[724.054443,-883.693878]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='M';
params.yy='CX';
params.Method='''Linear''';
params.typ='''double''';
params.EventGen='1';
params.externalActivation='0';
params.Leftside='''Zero''';
params.Rightside='''Zero''';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'LookupTable');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[655.845642,-922.594177]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''/''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Product');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[539.845642,-880.693878]);
blk = set_block_size(blk,[96.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='soundSpeedExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'MathExpression_2');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[452.065125,-930.594177]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='1';
params.extractor=struct('index',{{'1'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Extractor');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[791.054443,-840.743213]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'3','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Mux_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[522.065125,-822.908374]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[706.204620,-898.594177]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1073.933350,-825.743213]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[432.312836,-822.908374]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[432.312836,-910.594177]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[841.487976,-657.291443]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[931.565063,-657.291443]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'mach number');
blk = set_block_origin(blk,[728.204620,-949.693878]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''Mach number'''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'mach number');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag3, '1', 'input'}, [825.699463,-810.743213;825.699463,-760.940491], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag7, '2', 'input'}, [953.565063,-894.282043;953.565063,-840.743213], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag11, '2', 'input'}, [986.065125,-760.940491;986.065125,-750.282043], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag11, '1', 'input'}, [998.065125,-694.282043], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag14, '1', 'input'}, [522.065125,-862.693878], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag16, '2', 'input'}, [566.335815,-822.908374;566.335815,-810.743213], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag13, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag24, '1', 'input'}, [706.204620,-929.693878], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag12, '1', 'input'}, [706.204620,-863.693878], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag16, '3', 'input'}, [774.054443,-830.743213], false);
scsm=add_explicit_link(scsm,{block_tag19, '2', 'output'},{block_tag21, '1', 'input'}, [1073.933350,-975.291443;432.312836,-975.291443], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag16, '1', 'input'}, [432.312836,-790.743213], false);
scsm=add_explicit_link(scsm,{block_tag21, '2', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag22, '2', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag22, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag23, '2', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag23, '1', 'output'},{block_tag11, '1', 'input'}, [1020.065125,-657.291443], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'KalmanEstimator');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[-3345.764465,-931.020325]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'state_estimated');
blk = set_block_origin(blk,[-3348.145353,-1226.590942]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'state_estimated');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'X(V,z,Theta)');
blk = set_block_origin(blk,[-3283.081970,-1095.562866]);
blk = set_block_size(blk,[36.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='[V0_hat;z0_hat;Theta0_hat]';
params.reinit='1';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'X(V,z,Theta)');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-3532.031799,-1140.552149]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'3','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-3335.764465,-973.217901]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'a_estimated');
blk = set_block_origin(blk,[-3392.658752,-1007.217901]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'a_estimated');
blk = instantiate_block('system/MathOperations/MathExpressions');
blk = set_block_ident (blk,'f(X)');
blk = set_block_origin(blk,[-3490.587219,-1070.589484]);
blk = set_block_size(blk,[87.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.work='getcurrentenv()';
params.nexx='3';
params.Exp=struct('exx',{{'''u4/m/2*u1*u1*Sref*u5-g*sin(u3)''','''-u1*sin(u3)''','''-1/u1*g*cos(u3)'''}});
params.zc='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'f(X)');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'h(x)');
blk = set_block_origin(blk,[-3492.420715,-1007.217901]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='Sensor';
params.zc='0';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'h(x)');
blk = instantiate_block('system/Hybrid/LastInput');
blk = set_block_origin(blk,[-3347.615906,-1118.296377]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'LastInput_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3510.031799,-1050.589484]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'New_state');
blk = set_block_origin(blk,[-3401.448944,-1108.296377]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'New_state');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[-3795.927307,-1136.090881]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='RhoExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'MathExpression');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3816.889893,-1118.090881]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[-3685.064819,-1195.090881]);
blk = set_block_size(blk,[96.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='soundSpeedExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MathExpression_2');
blk = instantiate_block('system/LookupTables/LookupTable');
blk = set_block_origin(blk,[-3594.064819,-1267.090881]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='M';
params.yy='CX';
params.Method='''Linear''';
params.typ='''double''';
params.EventGen='1';
params.externalActivation='0';
params.Leftside='''Zero''';
params.Rightside='''Zero''';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'LookupTable');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3725.927307,-1118.090881]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-3650.064819,-1271.090881]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''/''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Product');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[-3754.752380,-1279.090881]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='1';
params.extractor=struct('index',{{'1'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Extractor');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3816.889893,-1259.090881]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-3265.081970,-1020.090881]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3391.829102,-1286.590942]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Block');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag20, '1', 'input'}, [-3229.829102,-1065.562866;-3229.829102,-1286.590942], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag4, '2', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag19, '1', 'input'}, [-3265.081970,-973.217901], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag2, '2', 'input'}, [-3297.615906,-1080.562866], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag7, '1', 'input'}, [-3510.031799,-995.217901], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '2', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag3, '1', 'input'}, [-3816.829102,-1118.090881;-3816.829102,-1090.552149], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag16, '1', 'input'}, [-3567.829102,-1177.090881;-3567.829102,-1205.590942;-3660.064819,-1205.590942], false);
scsm=add_explicit_link(scsm,{block_tag15, '2', 'output'},{block_tag13, '1', 'input'}, [-3725.927307,-1177.090881], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '2', 'input'}, [-3725.927307,-1110.552149], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag16, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag19, '2', 'output'},{block_tag8, '1', 'input'}, [-3327.615906,-1020.090881], false);
scsm=add_event_link(scsm,{block_tag19, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag3, '3', 'input'}, [-3544.064819,-1130.552149], false);
scsm=add_explicit_link(scsm,{block_tag20, '2', 'output'},{block_tag1, '1', 'input'}, [-3391.829102,-1214.590942], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag18, '1', 'input'}, [-3816.889893,-1286.590942], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_4');
blk = set_block_origin(blk,[-3591.341553,-1387.161499]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='';
blk = set_block_parameters (blk, params);
[scsm, block_tag21] = add_block(scsm, blk, 'Annotation_4');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[-3541.811890,-1196.373840]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='Mach number';
blk = set_block_parameters (blk, params);
[scsm, block_tag22] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

function [out_1] = subsystem_5 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'intermediate_values');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[-4330.259354,-1729.703821]);
blk = set_block_size(blk,[96.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='soundSpeedExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'MathExpression_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[-4431.332626,-1709.197864]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='RhoExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'MathExpression');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[-4443.441269,-1751.888880]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='dRho_dzExp';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'MathExpression_1');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[-4438.055710,-1804.885584]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='1';
params.extractor=struct('index',{{'1'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Extractor');
blk = instantiate_block('system/LookupTables/LookupTable');
blk = set_block_ident (blk,'CX(M)');
blk = set_block_origin(blk,[-4104.001450,-1792.885584]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='M';
params.yy='CX';
params.Method='''Linear''';
params.typ='''double''';
params.EventGen='1';
params.externalActivation='0';
params.Leftside='''Zero''';
params.Rightside='''Zero''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'CX(M)');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4456.862442,-1691.197864]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4456.862442,-1733.914917]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-3874.493698,-1704.420923]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,6);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='6';
params.inports=struct('size',{{'3','1','1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mux_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4340.259354,-1691.197864]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/LookupTables/LookupTable');
blk = set_block_ident (blk,'dCX/dM');
blk = set_block_origin(blk,[-4102.932510,-1853.189697]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='M';
params.yy='dCXdM';
params.Method='''Linear''';
params.typ='''double''';
params.EventGen='1';
params.externalActivation='0';
params.Leftside='''Zero''';
params.Rightside='''Zero''';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'dCX/dM');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4134.846176,-1772.885584]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_11');
blk = instantiate_block('system/MathOperations/RoundProduct');
blk = set_block_origin(blk,[-4010.178543,-1843.189697]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.overflow='''Nothing''';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'RoundProduct_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4340.259354,-1711.703821]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4320.437485,-1733.888880]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block_8');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4303.565598,-1784.885584]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Block_9');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4041.493637,-1833.189697]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Block_13');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4224.259354,-1741.847046]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Block_14');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4224.259354,-1760.885584]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_16');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-4456.862442,-1684.875354]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'dM/dz');
blk = set_block_origin(blk,[-4190.178543,-1925.437988]);
blk = set_block_size(blk,[180.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.work='getcurrentenv()';
params.exx='''-u3*A0/2/u4/u4/sqrt(u1*Rho0)*u2''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'dM/dz');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-4194.791733,-1796.885584]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''/''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Product');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-3934.710983,-1818.913452]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''/''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Product_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3964.941162,-1741.847046]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Block_15');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[-3839.401169,-1684.420923]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-4498.862442,-1694.875354]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'SoundSpeed');
blk = set_block_origin(blk,[-3949.336899,-1747.190796]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''Sound Speed'''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'SoundSpeed');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '1', 'input'}, [-4456.862442,-1733.888880], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag3, '1', 'input'}, [-4456.862442,-1784.885584], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '4', 'input'}, [-4038.493637,-1772.885584;-4038.493637,-1679.420923], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag7, '1', 'input'}, [-4456.862442,-1649.420923], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag7, '2', 'input'}, [-4340.259354,-1659.420923], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag7, '3', 'input'}, [-4204.929611,-1733.888880;-4204.929611,-1669.420923], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag7, '5', 'input'}, [-3980.178543,-1689.420923], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag7, '6', 'input'}, [-3888.710983,-1699.420923], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag9, '1', 'input'}, [-4134.846176,-1833.189697], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag11, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '2', 'output'},{block_tag19, '1', 'input'}, [-4340.259354,-1893.937988], false);
scsm=add_explicit_link(scsm,{block_tag13, '2', 'output'},{block_tag19, '2', 'input'}, [-4320.437485,-1902.937988], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag20, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag19, '3', 'input'}, [-4303.565598,-1911.937988], false);
scsm=add_explicit_link(scsm,{block_tag15, '2', 'output'},{block_tag21, '2', 'input'}, [-4041.493637,-1806.913452], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '2', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag19, '4', 'input'}, [-4224.259354,-1920.937988], false);
scsm=add_explicit_link(scsm,{block_tag22, '2', 'output'},{block_tag25, '1', 'input'}, [-3964.941162,-1727.190796], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag21, '1', 'input'}, [-3964.941162,-1782.913452], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[-3980.424576,-1825.831543]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='dCX/dz';
blk = set_block_parameters (blk, params);
[scsm, block_tag26] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

function [out_1] = subsystem_4 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'RiccatiEquation');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_ident (blk,'P_plus');
blk = set_block_origin(blk,[-3496.060349,-1842.410889]);
blk = set_block_size(blk,[120.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='''(eye(3)-u3*u1)*u2 ''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'P_plus');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-3325.661209,-1532.612366]);
blk = set_block_size(blk,[24.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Sum_1_1');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_ident (blk,'K');
blk = set_block_origin(blk,[-3569.169601,-1635.498535]);
blk = set_block_size(blk,[168.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.work='getcurrentenv()';
params.exx='''u2*u1''''*inv(u1*u2*u1''''+R)''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'K');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3597.666306,-1629.960266]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Block_10');
blk = instantiate_block('system/MatrixOperations/MatrixReshape');
blk = set_block_origin(blk,[-3674.156784,-1647.960266]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.outsize='[1,3]';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'MatrixReshape_1');
blk = instantiate_block('system/MathOperations/MathExpressions');
blk = set_block_ident (blk,'H');
blk = set_block_origin(blk,[-3786.063278,-1649.960266]);
blk = set_block_size(blk,[87.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.work='getcurrentenv()';
params.nexx='3';
params.Exp=struct('exx',{{'''1/m*u4*u1*Sref*(u6+1/2*u1*u8)''','''1/2/m*u1*u1*Sref*(u4*u7+u6*u5)''','''0'''}});
params.zc='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'H');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'P');
blk = set_block_origin(blk,[-3278.217026,-1755.477383]);
blk = set_block_size(blk,[36.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='[P0]';
params.reinit='1';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'P');
blk = instantiate_block('system/MatrixOperations/MatrixReshape');
blk = set_block_origin(blk,[-3674.156784,-1719.477417]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.outsize='[3,3]';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'MatrixReshape');
blk = instantiate_block('system/MathOperations/MathExpressions');
blk = set_block_ident (blk,'A');
blk = set_block_origin(blk,[-3786.063278,-1721.477417]);
blk = set_block_size(blk,[87.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.work='getcurrentenv()';
params.nexx='9';
params.Exp=struct('exx',{{'''u4/m*u1*Sref*(u6+u1*u8/2)''','''-sin(u3)''','''1/(u1*u1)*g*cos(u3)''','''1/2/m*u1*u1*Sref*(u4*u7+u6*u5)''','''0''','''0''','''-g*cos(u3)''','''-u1*cos(u3)''','''1/u1*g*sin(u3)'''}});
params.zc='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'A');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3801.440353,-1701.477417]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/MathOperations/RoundProduct');
blk = set_block_origin(blk,[-3374.242905,-1549.148062]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.overflow='''Nothing''';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'RoundProduct');
blk = instantiate_block('system/Hybrid/LastInput');
blk = set_block_origin(blk,[-3343.267075,-1771.470669]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'LastInput_2_1');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_ident (blk,'dP/dt');
blk = set_block_origin(blk,[-3510.829086,-1728.477417]);
blk = set_block_size(blk,[144.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.work='getcurrentenv()';
params.exx='''u1*u2+u2*u1''''+Q''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'dP/dt');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_origin(blk,[-3270.217026,-1589.100674]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'EventInput');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'estimation error');
blk = set_block_origin(blk,[-3458.956514,-1549.148062]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'estimation error');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'new_state');
blk = set_block_origin(blk,[-3271.571396,-1526.612366]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'new_state');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'estimated_state');
blk = set_block_origin(blk,[-3948.860367,-1713.477417]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'estimated_state');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3578.672775,-1719.477417]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3578.672775,-1818.410889]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-3260.217026,-1668.577785]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_super_block();
scsm0 = subsystem_5();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'intermediate_values');
blk = set_block_origin(blk,[-3860.898117,-1721.477417]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag20] = add_block(scsm, blk, 'intermediate_values');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3906.866074,-1701.477417]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-3364.242905,-1611.498535]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Block');
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag1, '2', 'input'}, [-3335.661209,-1539.148062], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [-3597.666306,-1599.498535], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'output'},{block_tag0, '1', 'input'}, [-3597.666306,-1802.410889], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [-3801.440353,-1629.960266], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag6, '2', 'input'}, [-3293.267075,-1740.477383], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag11, '1', 'input'}, [-3353.267075,-1818.410889], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag18, '1', 'input'}, [-3220.306152,-1725.477383;-3220.306152,-1859.268311;-3578.672775,-1859.268311], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag12, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag2, '2', 'input'}, [-3579.169601,-1719.477417], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag19, '2', 'output'},{block_tag11, '1', 'input'}, [-3323.267075,-1668.577785], false);
scsm=add_event_link(scsm,{block_tag19, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '2', 'output'},{block_tag1, '1', 'input'}, [-3906.866074,-1505.612366], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '2', 'output'},{block_tag0, '3', 'input'}, [-3364.242905,-1661.940308;-3551.946045,-1661.940308;-3551.946045,-1834.410889], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag10, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_4');
blk = set_block_origin(blk,[-3328.927719,-1677.179043]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='';
blk = set_block_parameters (blk, params);
[scsm, block_tag23] = add_block(scsm, blk, 'Annotation_4');
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Hybrid_Extended_Kalman_Filter');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Projectile');
blk = set_block_origin(blk,[167.820038,-595.087646]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.772549,0.364706,0.031373,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag0] = add_block(scsm, blk, 'Projectile');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[389.445300,-361.079285]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='dt';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'KalmanEstimator');
blk = set_block_origin(blk,[359.445300,-514.587646]);
blk = set_block_size(blk,[120.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.690196,0.941176,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag2] = add_block(scsm, blk, 'KalmanEstimator');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[516.865784,-669.294189]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[594.000488,-527.587646]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[595.000488,-596.743896]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Mux_2');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[522.482034,-532.587646]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Demux_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[584.325439,-674.294189]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mux_2_1');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_origin(blk,[622.430908,-662.294189]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','0','Acceleration','0','Force','0','Energy','0','Power','0','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','1','Rotational_Speed','0','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''m/s''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''Watt''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''degrees''';
params.PI_Rotational_Speed='''rad/sec''';
params.PO_Rotational_Speed='''rad/sec''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'UnitConversion_1');
blk = instantiate_super_block();
scsm0 = subsystem_4();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'RiccatiEquation');
blk = set_block_origin(blk,[315.347656,-616.757446]);
blk = set_block_size(blk,[132.000000,48.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag9] = add_block(scsm, blk, 'RiccatiEquation');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[499.445300,-422.587646]);
blk = set_block_size(blk,[36.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[503.253662,-502.587646]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[419.445300,-405.902710]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[339.347656,-405.902710]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[572.641479,-392.587646]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'state_comparison');
blk = set_block_origin(blk,[730.635208,-596.743896]);
blk = set_block_size(blk,[108.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''Speed''','''Altitude''','''Angle of attack'''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,10]','[NaN,10]','[NaN,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'state_comparison');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'EstimationError');
blk = set_block_origin(blk,[605.356201,-412.587646]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'45'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'EstimationError');
scsm=add_event_link(scsm,{block_tag1, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'output'},{block_tag3, '1', 'input'}, [277.988708,-583.087646;277.988708,-639.294189], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag5, '1', 'input'}, [559.595215,-502.587646;559.595215,-551.743896], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'output'},{block_tag5, '2', 'input'}, [585.000488,-639.294189], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '3', 'output'},{block_tag7, '1', 'input'}, [549.065552,-522.587646;549.065552,-629.294189], false);
scsm=add_explicit_link(scsm,{block_tag3, '3', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '2', 'input'}, [570.987976,-619.294189;570.987976,-512.587646], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag15, '1', 'input'}, [706.988708,-497.587646;706.988708,-546.743896], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag9, '1', 'input'}, [503.253662,-580.757446], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag2, '1', 'input'}, [305.347656,-490.587646], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag15, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag15, '3', 'input'}, [716.430908,-586.743896], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag10, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '3', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag10, '1', 'input'}, [278.988708,-559.087646;278.988708,-377.587646], false);
scsm=add_event_link(scsm,{block_tag13, '2', 'output'},{block_tag0, '1', 'input'}, [215.820038,-405.902710], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag9, '1', 'input'}, [339.347656,-558.757446], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag9, '2', 'input'}, [572.641479,-436.617889;514.117798,-436.617889;514.117798,-604.757446], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[261.428894,-662.733154]);
blk = set_block_size(blk,[228.000000,28.000000]);
params=struct();
  params.txt='Hybrid_Extended_Kalman_Filter.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag17] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

Hybrid_Extended_Kalman_Filter = subsystem_1();
Hybrid_Extended_Kalman_Filter = set_model_workspace (Hybrid_Extended_Kalman_Filter, {['dt=0.01;',char(10),'g=9.81;',char(10),char(10),'V0=490;',char(10),'z0=0;',char(10),'Theta0=pi/6;',char(10),'V0_hat=510;',char(10),'z0_hat=0.1;',char(10),'Theta0_hat=pi/6.1;',char(10),char(10),'Sref=0.001;',char(10),'m=10;',char(10),'A0=331;',char(10),'Rho0=1.1922;',char(10),'T0=273;',char(10),'Q=diag([0.5,0.1,0.0001]);',char(10),'R=0.25;',char(10),'P0=diag([10,0.01,0.001]);',char(10),char(10),'%%-----------------',char(10),char(10),'M=[0.000,0.400,0.500,0.600,0.700,0.800,0.825,0.850,0.875,0.900,0.925,0.950,0.975,1.000,1.025,1.050,1.075,1.100,1.150,1.200,1.300,1.400,1.500,1.600,1.800,2.000,2.200,2.400];',char(10),'CX=[0.230,0.229,0.200,0.171,0.164,0.144,0.141,0.137,0.137,0.142,0.154,0.177,0.236,0.306,0.334,0.341,0.345,0.347,0.348,0.348,0.343,0.336,0.328,0.321,0.304,0.292,0.282,0.270];',char(10),'CX=-CX;',char(10),'n=length(M);',char(10),'dCXdM=zeros(1,n);',char(10),'dCXdM(1)=(CX(2)-CX(1))/(M(2)-M(1));',char(10),'dCXdM(n)=(CX(n)-CX(n-1))/(M(n)-M(n-1));',char(10),'for i = 2:n-1',char(10),'  dCXdM(i)=(CX(i+1)-CX(i-1))/(M(i+1)-M(i-1));',char(10),'end',char(10),char(10),'RhoExp=''(Rho0+0.00651*abs(u2)/T0)^4.256'';',char(10),'dRho_dzExp=''0.0277*(Rho0/T0)^4.256*(T0+0.00651*abs(u2))^3.256'';',char(10),'soundSpeedExp=''A0*sqrt(u1/Rho0)'';',char(10),'Sensor=''1/2/m*u4*u1*u1*Sref*u5'';',char(10)]});
Hybrid_Extended_Kalman_Filter = set_initial_time (Hybrid_Extended_Kalman_Filter, '0');
Hybrid_Extended_Kalman_Filter = set_final_time (Hybrid_Extended_Kalman_Filter, '45');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', 'dt'};
Hybrid_Extended_Kalman_Filter = set_solver_parameters( Hybrid_Extended_Kalman_Filter, tol);
Hybrid_Extended_Kalman_Filter = evaluate_model (Hybrid_Extended_Kalman_Filter);
scsm = Hybrid_Extended_Kalman_Filter;
