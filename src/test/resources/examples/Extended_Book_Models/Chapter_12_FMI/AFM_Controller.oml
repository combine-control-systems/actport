function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'AFM_Controller');
scsm = set_diagram_context(scsm, {['A=[-0.3,3,1;0,0,2;0,0,0];',char(10),'B=[1;2;3];',char(10),'C=[1,1,2;0,2,3];',char(10),'D=0;',char(10),'x0=[-2;1;2];',char(10),'K=[0.1834511,-0.0635571;0.0556004,0.5931633;0.0409687,0.0975615];',char(10),'L=[-0.0041585,-0.1489701,-0.4993004];',char(10)]});
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-893.354111,293.715106]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='0.04';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-899.354111,230.214892]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.854902,0.898039,0.945098,0.996078]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='zeros(3,1)';
params.B='[0.1;0.1;0.1]';
params.seed='2113248';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-771.483475,220.214892]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-433.244583,247.063118]);
blk = set_block_size(blk,[17.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-693.793289,262.063118]);
blk = set_block_size(blk,[15.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-205.048660,197.294334]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Sum_2');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-656.993789,358.318067]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='L';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'MatrixGain_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-389.583775,262.062498]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[-340.012883,272.062498]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,0.996078]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A-K*C';
params.B='[B,K]';
params.C='eye(size(A))';
params.D='zeros(size([B,K]))';
params.x0='zeros(size(x0))';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'ContStateSpace');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-217.630831,292.062498]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Split_6');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-723.470489,341.754366]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Split_7');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_origin(blk,[-126.402786,207.294334]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.913725,0.941176,0.858824,0.996078]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[-652.544525,272.063118]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A';
params.B='B';
params.C='eye(size(A))';
params.D='zeros(size(B))';
params.x0='x0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'ContStateSpace_1_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-525.789154,274.063118]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='C';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MatrixGain');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-539.528503,292.063118]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Split');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag4, '2', 'input'}, [-703.793289,265.214892], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag3, '2', 'input'}, [-467.747742,235.215590;-467.747742,262.063456], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag6, '1', 'input'}, [-217.631014,382.318363], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [-217.630831,242.294334], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag10, '1', 'input'}, [-723.470489,382.318386], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag7, '1', 'input'}, [-408.887451,341.754366;-408.887451,307.062237], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag4, '1', 'input'}, [-723.470489,307.063224], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag5, '2', 'input'}, [-539.528503,212.294334], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[-596.384491,193.328644]);
blk = set_block_size(blk,[136.000000,28.000000]);
params=struct();
  params.txt='AFM_Controller.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag15] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

AFM_Controller = subsystem_1();
AFM_Controller = set_model_workspace (AFM_Controller, {''});
AFM_Controller = set_initial_time (AFM_Controller, '0');
AFM_Controller = set_final_time (AFM_Controller, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
AFM_Controller = set_solver_parameters( AFM_Controller, tol);
AFM_Controller = evaluate_model (AFM_Controller);
scsm = AFM_Controller;
