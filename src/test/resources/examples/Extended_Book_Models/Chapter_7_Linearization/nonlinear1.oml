function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'nonlinear1');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[240.832520,-214.104950]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.in_ports=struct('sgn',{{'''+''','''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'x');
blk = set_block_origin(blk,[413.721771,-208.104950]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='-1';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'x');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-184.104950]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[211.000000,-356.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='2';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Gain');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-112.827691]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Split_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[307.543030,-380.587983]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'y');
blk = set_block_origin(blk,[413.721771,-374.587983]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='1';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'y');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-350.587983]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Split_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-270.087983]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split_3');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[307.543030,-132.827691]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='2';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Power_2_1');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[307.543030,-290.087983]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='2';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Power_2_2');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[548.845276,-220.493149]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.854902,0.898039,0.945098,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[-2,-0.6]','[-2,1]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalImporters/Sensor');
blk = set_block_origin(blk,[106.854248,-153.407119]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.607843,0.733333,0.349020,0.996078]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ivalue='0';
params.outtyp='''double''';
params.sens_nb='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Sensor_1');
blk = instantiate_block('system/SignalExporters/Actuator');
blk = set_block_origin(blk,[558.002908,-147.728725]);
blk = set_block_size(blk,[79.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.713725,0.866667,0.905882,0.996078]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ivalue='0';
params.intyp='''double''';
params.actu_nb='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Actuator_2');
blk = instantiate_block('system/SignalExporters/Actuator');
blk = set_block_origin(blk,[558.002908,-317.897281]);
blk = set_block_size(blk,[79.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.713725,0.866667,0.905882,0.996078]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ivalue='0';
params.intyp='''double''';
params.actu_nb='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Actuator_3');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[186.854248,-196.549766]);
blk = set_block_size(blk,[20.581940,24.889632]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Sum_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'input');
blk = set_block_origin(blk,[116.854248,-210.327358]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'input');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-127.728725]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[508.765014,-297.897281]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_1');
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag0, '1', 'input'}, [218.626541,-112.827691;218.626541,-164.104950], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag3, '1', 'input'}, [508.765014,-80.022644;96.142731,-80.022644;96.142731,-336.000000], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag5, '1', 'input'}, [297.543030,-336.000000], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag5, '2', 'input'}, [508.765014,-400.440338;284.277893,-400.440338;284.277893,-365.587983], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag0, '3', 'input'}, [217.646667,-270.087983;217.646667,-204.104950], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag11, '1', 'input'}, [508.765014,-190.493149], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag11, '2', 'input'}, [508.765014,-210.493149], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag15, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[284.078812,-404.954742]);
blk = set_block_size(blk,[112.000000,28.000000]);
params=struct();
  params.txt='nonlinear1.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag19] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

nonlinear1 = subsystem_1();
nonlinear1 = set_model_workspace (nonlinear1, {''});
nonlinear1 = set_initial_time (nonlinear1, '0');
nonlinear1 = set_final_time (nonlinear1, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0'};
nonlinear1 = set_solver_parameters( nonlinear1, tol);
nonlinear1 = evaluate_model (nonlinear1);
scsm = nonlinear1;
