function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'pendulum');
scsm = set_diagram_context(scsm, {['m=1;',char(10),'M=4;',char(10),'l=.7;',char(10),'g=9.8;',char(10),'J=m*l^2/12;',char(10)]});
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[886.138640,-803.739478]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='z0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Integral_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'u');
blk = set_block_origin(blk,[425.481886,-853.684027]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'u');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'z');
blk = set_block_origin(blk,[957.216586,-789.739478]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'z');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'Î¸');
blk = set_block_origin(blk,[957.216586,-846.218610]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Î¸');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[759.426557,-840.084027]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[944.979187,-836.218610]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Split_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[863.660767,-835.933392]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[808.822790,-803.739478]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Integral_1_1');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[808.822790,-859.933392]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Integral_1_2');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[885.582182,-860.218610]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='th0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Integral_1_3');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[936.568970,-779.739478]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[856.390930,-779.739478]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_ident (blk,'pendulum model');
blk = set_block_origin(blk,[486.604536,-852.084027]);
blk = set_block_size(blk,[252.000000,84.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.980392,0.792157,0.639216,1.000000]);
blk = set_block_nin (blk,5);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='5';
params.work='getcurrentenv()';
params.exx='[''[      M+m,                 m*l*cos(u3-phi)/2 ;'',char(10),'' m*l*cos(u3-phi)/2,             (J+m*l^2/4)   ] \'',char(10),''[m*l*u4^2*sin(u3-phi)/2+u5-(M+m)*g*sin(phi)  ;'',char(10),''   m*g*l*sin(u3)                              ]'']';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'pendulum model');
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '1', 'input'}, [788.997009,-795.084027;788.997009,-779.739478], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag8, '1', 'input'}, [790.805237,-825.084027;790.805237,-835.933392], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag12, '3', 'input'}, [944.979187,-879.345947;403.375793,-879.345947;403.375793,-810.084027], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag12, '4', 'input'}, [863.660767,-871.236694;411.722382,-871.236694;411.722382,-826.884027], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag9, '1', 'input'}, [863.660767,-836.218610], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag12, '5', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag12, '1', 'input'}, [936.568970,-899.118042;387.239044,-899.118042;387.239044,-776.484027], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag12, '2', 'input'}, [856.390930,-889.118042;395.585632,-889.118042;395.585632,-793.284027], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[910.565979,-835.606812]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='Î¸';
blk = set_block_parameters (blk, params);
[scsm, block_tag13] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[830.587830,-835.747253]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='Ï';
blk = set_block_parameters (blk, params);
[scsm, block_tag14] = add_block(scsm, blk, 'Annotation_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[833.923340,-776.535645]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='v';
blk = set_block_parameters (blk, params);
[scsm, block_tag15] = add_block(scsm, blk, 'Annotation_2');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_3');
blk = set_block_origin(blk,[911.127869,-779.830383]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='z';
blk = set_block_parameters (blk, params);
[scsm, block_tag16] = add_block(scsm, blk, 'Annotation_3');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_3_1');
blk = set_block_origin(blk,[428.673157,-753.649902]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='z';
blk = set_block_parameters (blk, params);
[scsm, block_tag17] = add_block(scsm, blk, 'Annotation_3_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_4');
blk = set_block_origin(blk,[428.116699,-788.705627]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='Î¸';
blk = set_block_parameters (blk, params);
[scsm, block_tag18] = add_block(scsm, blk, 'Annotation_4');
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'inv_pendulum');
scsm = set_diagram_context(scsm, {['if exist(''_syslin'')',char(10),'  A=_syslin.A;',char(10),'  B=_syslin.B;',char(10),'  C=_syslin.C;',char(10),'  D=_syslin.D;',char(10),'  U=_syslin.u0;',char(10),'  n=size(A,1);',char(10),'  Kc=-place(A,B,-1*ones(1,n));',char(10),'  Kf=-place(A'',C'',-2*ones(1,n));',char(10),'  Kf=Kf'';',char(10),'  At=A+B*Kc+Kf*C+Kf*D*Kc;',char(10),'  Bt=-Kf;',char(10),'  Ct=Kc;',char(10),'else',char(10),'  At=[];',char(10),'  Bt=zeros(0,2);',char(10),'  Ct=zeros(1,0);',char(10),'  U=0;',char(10),'end',char(10)]});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'pendulum');
blk = set_block_origin(blk,[560.035907,-703.587646]);
blk = set_block_size(blk,[84.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,0.996078]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,1);
[scsm, block_tag0] = add_block(scsm, blk, 'pendulum');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'Force');
blk = set_block_origin(blk,[460.307855,-670.690247]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.858824,0.760784,0.835294,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='U';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Force');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[510.102625,-703.690247]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.858824,0.760784,0.835294,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[721.955597,-700.587646]);
blk = set_block_size(blk,[6.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[537.505463,-673.690247]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[684.895477,-688.587646]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_ident (blk,'controller');
blk = set_block_origin(blk,[557.035907,-765.453369]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='At';
params.B='Bt';
params.C='Ct';
params.D='[]';
params.x0='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'controller');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[671.934051,-658.587646]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[711.338348,-630.865479]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.921569,0.866667,0.764706,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''',''''''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,10]','[NaN,10]','[NaN,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag6, '1', 'input'}, [745.580139,-676.587646;745.580139,-745.453369], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '2', 'input'}, [496.348022,-745.453369;496.348022,-688.690247], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag8, '1', 'input'}, [537.398010,-673.690247;537.398010,-597.532145], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag0, '1', 'input'}, [550.035907,-673.690247], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag8, '3', 'input'}, [684.895477,-624.198812], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag3, '1', 'input'}, [671.934051,-664.587646], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag8, '2', 'input'}, [671.934051,-610.865479], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[688.417083,-617.237671]);
blk = set_block_size(blk,[30.000000,28.000000]);
params=struct();
  params.txt='z';
blk = set_block_parameters (blk, params);
[scsm, block_tag9] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[689.016632,-640.742554]);
blk = set_block_size(blk,[32.000000,28.000000]);
params=struct();
  params.txt='Î¸';
blk = set_block_parameters (blk, params);
[scsm, block_tag10] = add_block(scsm, blk, 'Annotation_2');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[537.440247,-776.400146]);
blk = set_block_size(blk,[130.000000,28.000000]);
params=struct();
  params.txt='inv_pendulum.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag11] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

inv_pendulum = subsystem_1();
inv_pendulum = set_model_workspace (inv_pendulum, {['tf=30;',char(10),'phi=0.1;',char(10),'z0=-0.1;',char(10),'th0=.02;',char(10)]});
inv_pendulum = set_initial_time (inv_pendulum, '0');
inv_pendulum = set_final_time (inv_pendulum, 'tf');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0'};
inv_pendulum = set_solver_parameters( inv_pendulum, tol);
inv_pendulum = evaluate_model (inv_pendulum);
scsm = inv_pendulum;
