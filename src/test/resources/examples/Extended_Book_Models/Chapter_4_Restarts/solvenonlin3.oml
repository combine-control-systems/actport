function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'solvenonlin3');
scsm = set_diagram_context(scsm, {['if __counter__==1',char(10),'  n=length(p0);N=2*n;',char(10),'  G=[eye(n,n),eye(n,n)];G=G(:,1:N);',char(10),'  P=[eye(n,n),eye(n,n)];P=P(:,1:N);',char(10),'  wi=ones(1,N)*1e32;',char(10),'  TT=[G;P;wi];',char(10),'  p=p0;',char(10),'else',char(9),char(10),'  TT=GetFromBase(''_TT'',[]);',char(10),'  p=GetFromBase(''_p'',[]);',char(10),'  gp=GetFromBase(''_gp'',[]);',char(10),'  if norm(gp)<1e-5',char(10),'    printf(''succesfull convergence, p=%g, g(p)=%g'',p,gp);',char(10),'    return',char(10),'  end',char(10),'  [p,TT]=nsolve(p,gp,TT);',char(10),'  if __counter__>100',char(10),'    error(''Max nb. of iterations reached.'');',char(10),'  end',char(10),'end',char(10),'AddToBase(''_p'',p);',char(10),'AddToBase(''_TT'',TT);']});
blk = instantiate_block('system/ActivationOperations/End');
blk = set_block_origin(blk,[212.979965,-23.751483]);
blk = set_block_size(blk,[48.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.job='''Restart''';
params.bmessage='''''';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'End');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-145.947491,53.740625]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='p';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_ident (blk,'g(p)=x-d');
blk = set_block_origin(blk,[190.550995,-71.168385]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'g(p)=x-d');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_ident (blk,'p = Î¸ ');
blk = set_block_origin(blk,[-76.119202,80.667213]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'p = Î¸ ');
blk = instantiate_block('system/SignalExporters/ToBase');
blk = set_block_origin(blk,[182.259186,7.511637]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.varname='''_gp''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ToBase');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'position');
blk = set_block_origin(blk,[60.530693,-25.524087]);
blk = set_block_size(blk,[24.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'position');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'velocity');
blk = set_block_origin(blk,[0.851601,-19.524087]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='[0;0]';
params.reinit='1';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'velocity');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[96.351601,-19.524087]);
blk = set_block_size(blk,[6.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[-139.469307,-81.050652]);
blk = set_block_size(blk,[180.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-a*(sqrt(u1''''*u1)^(b-1))*u1 + [0;-g]''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'MatrixExpression_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[50.530693,4.475913]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Split_1');
blk = instantiate_block('system/ActivationOperations/ZeroCrossDown');
blk = set_block_origin(blk,[218.979965,74.000458]);
blk = set_block_size(blk,[36.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'ZeroCrossDown_1');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[-123.195518,-19.524087]);
blk = set_block_size(blk,[108.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''[cos(u1);sin(u1)]*V''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'MatrixExpression');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-84.832684,40.479467]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/ActivationOperations/InitialEvent');
blk = set_block_origin(blk,[-5.148399,48.475913]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
[scsm, block_tag13] = add_block(scsm, blk, 'InitialEvent');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[116.068939,-1.524087]);
blk = set_block_size(blk,[36.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-d';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Bias');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_ident (blk,'UnitConversion');
blk = set_block_origin(blk,[50.229935,72.667213]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','0','Acceleration','0','Force','0','Energy','0','Power','0','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','1','Rotational_Speed','0','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''m/s''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''Watt''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''degrees''';
params.PI_Rotational_Speed='''rad/sec''';
params.PO_Rotational_Speed='''rad/sec''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'UnitConversion');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[172.259186,25.511637]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[236.979965,53.814880]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'ActivationSplit');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag12, '1', 'input'}, [-84.832684,65.740625], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag6, '1', 'input'}, [-149.469307,16.475913], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag10, '1', 'input'}, [161.521790,-7.524087;161.521790,92.000458], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'input'},{block_tag12, '2', 'output'}, [-133.195518,40.479467], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag15, '1', 'input'}, [154.533157,40.479467;154.533157,92.667213], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag16, '1', 'input'}, [172.259186,16.475913], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'input'},{block_tag16, '2', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag2, '1', 'input'}, [172.259186,-59.168385], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'input'},{block_tag17, '2', 'output'}, [], false);
scsm=add_event_link(scsm,{block_tag17, '1', 'output'},{block_tag4, '1', 'input'}, [236.979965,53.511637], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[103.639358,44.463264]);
blk = set_block_size(blk,[30.000000,28.000000]);
params=struct();
  params.txt='x';
blk = set_block_parameters (blk, params);
[scsm, block_tag18] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[104.652803,-4.143541]);
blk = set_block_size(blk,[30.000000,28.000000]);
params=struct();
  params.txt='y';
blk = set_block_parameters (blk, params);
[scsm, block_tag19] = add_block(scsm, blk, 'Annotation_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[207.796265,74.151268]);
blk = set_block_size(blk,[44.000000,28.000000]);
params=struct();
  params.txt='y=0';
blk = set_block_parameters (blk, params);
[scsm, block_tag20] = add_block(scsm, blk, 'Annotation_2');
out_1 = scsm;
end

solvenonlin3 = subsystem_1();
solvenonlin3 = set_model_workspace (solvenonlin3, {['folder=fileparts(bdeGetCurrentModelFilePath);',char(10),'cd(folder);',char(10),'a=.1;',char(10),'b=2.5;',char(10),'g=9.8;',char(10),'V=1000;',char(10),'d=9;',char(10),'p0=pi/3;']});
solvenonlin3 = set_initial_time (solvenonlin3, '0');
solvenonlin3 = set_final_time (solvenonlin3, '100');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
solvenonlin3 = set_solver_parameters( solvenonlin3, tol);
solvenonlin3 = evaluate_model (solvenonlin3);
scsm = solvenonlin3;
