function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Animation');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[185.513733,-47.807137]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='(pi/3)*[0:5]''';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Bias');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[174.109909,53.671280]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.576471,0.807843,0.862745,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[0:0.1:2*pi]''';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[245.520020,85.671280]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Block_9');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[277.513733,-19.266037]);
blk = set_block_size(blk,[228.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='[''-R*[-cos(u2)*sin(u3)-cos(u1)*cos(u3)*sin(u2),'',char(10),''cos(u2)*cos(u1)*cos(u3)-sin(u2)*sin(u3),'',char(10),''cos(u3)*sin(u1)]/2'']';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'MatrixExpression_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[260.484833,105.671280]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[277.104828,55.671280]);
blk = set_block_size(blk,[228.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='[''-R*[-cos(u2)*sin(u3)-cos(u1)*cos(u3)*sin(u2),'',char(10),''cos(u2)*cos(u1)*cos(u3)-sin(u2)*sin(u3),'',char(10),''cos(u3)*sin(u1)]'']';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MatrixExpression');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[360.926514,120.194290]);
blk = set_block_size(blk,[108.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='''[u1,u2,R*sin(u3)]''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'MatrixExpression_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[356.390305,-49.860535]);
blk = set_block_size(blk,[156.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.576471,0.807843,0.862745,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[-1,0,0;0,-1,0;1,0,0;0,1,0]*20';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/MatrixOperations/MatrixExpression');
blk = set_block_origin(blk,[360.926514,172.185933]);
blk = set_block_size(blk,[108.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='''[u1,u2,0;u3(1:6,1:3)]''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'MatrixExpression_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[521.284851,114.972488]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block_11');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[539.919373,-4.266037]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[570.612793,-55.860535]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='J';
params.overflow='''Nothing''';
params.mulmethod='''u1*Gain''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'MatrixGain_1_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[540.657959,70.671280]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[570.612793,7.733963]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='J';
params.overflow='''Nothing''';
params.mulmethod='''u1*Gain''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MatrixGain_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[570.612793,82.671280]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='J';
params.overflow='''Nothing''';
params.mulmethod='''u1*Gain''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'MatrixGain');
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[498.429016,145.778397]);
blk = set_block_size(blk,[24.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.949020,0.949020,0.949020,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='zeros(7,3)';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'DiscreteDelay');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[546.443115,163.778397]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Block_13');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[570.612793,145.778397]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='J';
params.overflow='''Nothing''';
params.mulmethod='''u1*Gain''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'MatrixGain_2');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[541.790344,234.795018]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='.05';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[571.790344,224.795018]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/SignalViewers/Anim2D');
blk = set_block_ident (blk,'Anim2D');
blk = set_block_origin(blk,[659.979126,78.171280]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.945098,0.854902,0.854902,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.types='[1;2;1;1]';
params.sz='[-8,-4,16,8]*3';
params.clrs='[1,1,1;0 0 1;1 0 0;0 1 0]';
params.zoom='40';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Anim2D');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'ps');
blk = set_block_origin(blk,[153.369293,-39.807137]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='3';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'ps');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'ph');
blk = set_block_origin(blk,[153.961548,83.571701]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'ph');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'th');
blk = set_block_origin(blk,[189.069550,108.311958]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'th');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'x');
blk = set_block_origin(blk,[245.804932,155.618744]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='4';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'x');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'y');
blk = set_block_origin(blk,[216.411942,128.194290]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='5';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'y');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'xc');
blk = set_block_origin(blk,[303.097870,203.246510]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='6';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'xc');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'yc');
blk = set_block_origin(blk,[284.292572,170.313283]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='7';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'yc');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[260.484833,106.646973]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[510.081299,224.795018]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[571.790344,224.795018]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Block_1');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'input'},{block_tag2, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'input'},{block_tag2, '2', 'output'}, [245.520020,10.733963], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag10, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag28, '1', 'output'}, [260.484833,30.733963], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'input'},{block_tag4, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag12, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag9, '1', 'input'}, [521.284851,138.194290], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag16, '1', 'input'}, [546.443115,190.185933], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag8, '3', 'input'}, [339.261353,163.778397;339.261353,178.185933], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'input'},{block_tag29, '1', 'output'}, [414.926514,224.795018], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag12, '1', 'input'}, [521.284851,115.671280], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag10, '1', 'input'}, [521.284851,40.733963], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'input'},{block_tag16, '2', 'output'}, [], false);
scsm=add_event_link(scsm,{block_tag18, '1', 'output'},{block_tag30, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag2, '1', 'input'}, [183.961548,85.671280], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag4, '1', 'input'}, [219.069550,105.671280], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag6, '1', 'input'}, [275.804932,150.194290], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag8, '1', 'input'}, [333.097870,202.185933], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag8, '2', 'input'}, [330.570892,180.313283;330.570892,190.185933], false);
scsm=add_explicit_link(scsm,{block_tag6, '3', 'input'},{block_tag28, '2', 'output'}, [260.484833,126.194290], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'input'},{block_tag4, '2', 'output'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'input'},{block_tag29, '2', 'output'}, [510.081299,191.778397], false);
scsm=add_event_link(scsm,{block_tag29, '1', 'input'},{block_tag19, '2', 'output'}, [], false);
scsm=add_event_link(scsm,{block_tag20, '1', 'input'},{block_tag30, '2', 'output'}, [674.979126,224.795018], false);
scsm=add_event_link(scsm,{block_tag30, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag20, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag20, '1', 'input'}, [649.979126,-37.860535], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag20, '2', 'input'}, [645.295959,163.778397;645.295959,115.671280], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag20, '4', 'input'}, [645.295959,25.733963;645.295959,85.671280], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Wheel');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/CustomBlocks/MoCustomBlock');
blk = set_block_origin(blk,[80.332603,171.295018]);
blk = set_block_size(blk,[96.000000,120.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.972549,0.694118,0.466667,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,8);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='0';
params.inports=struct('name',{{}},'value',{{}});
params.nout='8';
params.outports=struct('name',{{'''x''','''y''','''th''','''ph''','''ps''','''xc''','''yc''','''E'''}});
params.nparams='7';
params.params=struct('name',{{'''R''','''m''','''th0''','''ph0''','''psd0''','''phd0''','''c'''}},'value',{{'R','m','th0','ph0','psd0','phd0','c'}},'typ',{{'''Fixed''','''Fixed''','''Fixed''','''Fixed''','''Fixed''','''Fixed''','''Fixed'''}});
params.codename='''wheel2''';
params.code='[''model wheel2'',char(10),''  //parameters '',char(10),''  parameter Real R = 1;'',char(10),''  parameter Real m = 1;'',char(10),''  parameter Real Ir = m*R*R/4;'',char(10),''  parameter Real In = m*R*R/2;'',char(10),''  parameter Real g = 9.81;'',char(10),''  parameter Real xd0 = 0;'',char(10),''  parameter Real yd0 = 0;'',char(10),''  parameter Real thd0 = 0;'',char(10),''  parameter Real phd0 = 0;'',char(10),''  parameter Real psd0 = 30;'',char(10),''  parameter Real x0 = 0;'',char(10),''  parameter Real y0 = 0;'',char(10),''  parameter Real th0 = Modelica.Math.asin(1.0)*2*(1/2+1/20);'',char(10),''  parameter Real ph0 = 1;'',char(10),''  parameter Real ps0 = 0;'',char(10),''  parameter Real c = 0;'',char(10),''  //outut variables '',char(10),''  Real x (start = x0), xd, xc;'',char(10),''  Real y (start = y0), yd, yc;'',char(10),''  Real th (start = th0, fixed = true), thd (start = thd0);'',char(10),''  Real ph (start = ph0, fixed = true), phd (start = phd0);'',char(10),''  Real ps (start = ps0, fixed = true), psd (start = psd0);'',char(10),''  Real E;'',char(10),''  Real l1, l2;'',char(10),''equation'',char(10),''  der(x) = xd;'',char(10),''  der(y) = yd;'',char(10),''  der(th) = thd;'',char(10),''  der(ph) = phd;'',char(10),''  der(ps) = psd;'',char(10),''  xd-R*(sin(th)*sin(ph)*thd-cos(th)*cos(ph)*phd-cos(ph)*psd) = 0;'',char(10),''  yd+R*(sin(th)*cos(ph)*thd+cos(th)*sin(ph)*phd+sin(ph)*psd) = 0;'',char(10),''  m*der(xd) = l1;'',char(10),''  m*der(yd) = l2;'',char(10),''  (m*R*R*cos(th)*cos(th)+Ir)*der(thd) = (m*R*R*thd*thd+(Ir-In)*phd*phd)*sin(th)*cos(th)-'',char(10),''    In*phd*psd*sin(th)-m*g*R*cos(th)+R*(-l1*sin(th)*sin(ph)+l2*sin(th)*cos(ph));'',char(10),''  (In*cos(th)*cos(th)+Ir*sin(th)*sin(th))*der(phd) + In*cos(th)*der(psd) ='',char(10),''    -2*(Ir-In)*thd*phd*sin(th)*cos(th)+In*thd*psd*sin(th)+R*(l1*cos(th)*cos(ph)+l2*cos(th)*sin(ph));'',char(10),''  In*cos(th)*der(phd)+In*der(psd) = In*thd*phd*sin(th)+R*(l1*cos(ph)+l2*sin(ph))-c*m*g*sign(psd);'',char(10),''  xc = x+R*cos(th)*sin(ph);'',char(10),''  yc = y-R*cos(th)*cos(ph);'',char(10),''  E = 0.5*m*(xd*xd+yd*yd+R*R*cos(th)*cos(th)*thd*thd)+0.5*(Ir*(thd*thd+phd*phd*sin(th)*sin(th))+'',char(10),''    In*(psd+phd*cos(th))^2)+m*g*R*sin(th);'',char(10),''end wheel2;'',char(10)]';
params.nlibs='0';
params.libs=struct('path',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'MoCustomBlock');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'x');
blk = set_block_origin(blk,[199.575226,306.088109]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'x');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'y');
blk = set_block_origin(blk,[248.348495,291.276555]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'y');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'th');
blk = set_block_origin(blk,[299.275238,275.776860]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='3';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'th');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'ph');
blk = set_block_origin(blk,[244.350769,245.785389]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='4';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ph');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'ps');
blk = set_block_origin(blk,[230.858459,213.795018]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='5';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ps');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'xc');
blk = set_block_origin(blk,[252.346222,181.304967]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='6';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'xc');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'yc');
blk = set_block_origin(blk,[232.857269,162.307240]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='7';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'yc');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'E');
blk = set_block_origin(blk,[208.870911,148.306660]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='8';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'E');
blk = instantiate_block('system/MathOperations/Modulo');
blk = set_block_origin(blk,[321.867523,243.285934]);
blk = set_block_size(blk,[48.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.op='''Modulo''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Modulo');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[289.275238,276.282261]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[270.407013,229.289337]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='pi';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/MathOperations/Abs');
blk = set_block_origin(blk,[389.335938,243.285934]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.zcross='1';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Abs');
blk = instantiate_block('system/ActivationOperations/MessageBox');
blk = set_block_origin(blk,[291.885162,129.929474]);
blk = set_block_size(blk,[70.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,2);
params=struct();
params.caption='''Wheel''';
params.ntxt='1';
params.texts=struct('text',{{'''Wheel on ground: restart?'''}});
params.sync='1';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MessageBox');
blk = instantiate_block('system/ActivationOperations/End');
blk = set_block_origin(blk,[340.367401,85.929474]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.job='''Stop''';
params.bmessage='''''';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'End');
blk = instantiate_block('system/ActivationOperations/End');
blk = set_block_origin(blk,[273.407013,85.929474]);
blk = set_block_size(blk,[48.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.job='''Restart''';
params.bmessage='''''';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'End_1');
blk = instantiate_block('system/ActivationOperations/ZeroCrossDown');
blk = set_block_origin(blk,[306.885162,187.312866]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'ZeroCrossDown');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[453.338196,187.312866]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-0.01';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Bias');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [189.575226,283.795018], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'output'},{block_tag2, '1', 'input'}, [215.816986,268.795018;215.816986,301.276555], false);
scsm=add_explicit_link(scsm,{block_tag0, '3', 'output'},{block_tag10, '1', 'input'}, [224.312164,253.795018;224.312164,276.282261], false);
scsm=add_explicit_link(scsm,{block_tag0, '4', 'output'},{block_tag4, '1', 'input'}, [227.810165,238.795018;227.810165,255.785389], false);
scsm=add_explicit_link(scsm,{block_tag0, '5', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '6', 'output'},{block_tag6, '1', 'input'}, [211.319534,208.795018;211.319534,191.304967], false);
scsm=add_explicit_link(scsm,{block_tag0, '7', 'output'},{block_tag7, '1', 'input'}, [203.823792,193.795018;203.823792,172.307240], false);
scsm=add_explicit_link(scsm,{block_tag0, '8', 'output'},{block_tag8, '1', 'input'}, [193.829483,178.795018;193.829483,158.306660], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'input'},{block_tag10, '2', 'output'}, [289.275238,261.285934], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag9, '2', 'input'}, [308.137268,241.289337;308.137268,249.285934], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '2', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag17, '1', 'input'}, [503.338196,255.285934], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag16, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'wheelsim');
scsm = set_diagram_context(scsm, {['a=1;c=3;',char(10),'d=sqrt(a*a+c*c);',char(10),'J=[0,a/d;',char(10),'   1,0;',char(10),'   0,c/d];',char(10),'   ',char(10)]});
blk = instantiate_block('system/SignalViewers/ScopeXY');
blk = set_block_ident (blk,'ScopeXY');
blk = set_block_origin(blk,[318.424957,219.157544]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xInterval='[NaN,NaN]';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.curvesStyle='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ScopeXY');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[239.476349,283.795018]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Energy');
blk = set_block_origin(blk,[179.945251,103.278074]);
blk = set_block_size(blk,[36.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[800,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Energy');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[255.645302,215.858403]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[270.694916,202.795018]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Block_10');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Animation');
blk = set_block_origin(blk,[287.319824,83.799646]);
blk = set_block_size(blk,[72.000000,108.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,7);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag5] = add_block(scsm, blk, 'Animation');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[280.694916,205.610722]);
blk = set_block_size(blk,[6.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Mux_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[224.344528,241.610722]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[292.424957,247.795018]);
blk = set_block_size(blk,[6.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Wheel');
blk = set_block_origin(blk,[70.614807,182.545018]);
blk = set_block_size(blk,[60.000000,108.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,8);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.R.rank=0;
params.R.value='R';
params.R.prompt='Radius of the wheel';
params.R.evaluate = 1;
params.R.enable=1;
params.R.visible=1;
params.R.parameter_style= { 'entry', {}};
params.R.callback= '';
params.R.tabname= 'Parameters';
params.R.tooltip= '';
params.R.buttonimage= '';
params.R.buttontext= '';
params.R.buttontooltip= '';
params.R.type= 'scalar';
params.R.dimensions= '[]';
params.R.unit= '';
params.c.rank=1;
params.c.value='0.01';
params.c.prompt='Rolling resistance coeff.';
params.c.evaluate = 1;
params.c.enable=1;
params.c.visible=1;
params.c.parameter_style= { 'entry', {}};
params.c.callback= '';
params.c.tabname= 'Parameters';
params.c.tooltip= '';
params.c.buttonimage= '';
params.c.buttontext= '';
params.c.buttontooltip= '';
params.c.type= 'scalar';
params.c.dimensions= '[]';
params.c.unit= '';
params.m.rank=2;
params.m.value='1';
params.m.prompt='Mass of the wheel (disk)';
params.m.evaluate = 1;
params.m.enable=1;
params.m.visible=1;
params.m.parameter_style= { 'entry', {}};
params.m.callback= '';
params.m.tabname= 'Parameters';
params.m.tooltip= '';
params.m.buttonimage= '';
params.m.buttontext= '';
params.m.buttontooltip= '';
params.m.type= 'scalar';
params.m.dimensions= '[]';
params.m.unit= '';
params.ph0.rank=3;
params.ph0.value='0.5';
params.ph0.prompt='Initial orientation';
params.ph0.evaluate = 1;
params.ph0.enable=1;
params.ph0.visible=1;
params.ph0.parameter_style= { 'entry', {}};
params.ph0.callback= '';
params.ph0.tabname= 'Parameters';
params.ph0.tooltip= '';
params.ph0.buttonimage= '';
params.ph0.buttontext= '';
params.ph0.buttontooltip= '';
params.ph0.type= 'scalar';
params.ph0.dimensions= '[]';
params.ph0.unit= '';
params.phd0.rank=4;
params.phd0.value='0.5';
params.phd0.prompt='Initial angular velocity of th orientation';
params.phd0.evaluate = 1;
params.phd0.enable=1;
params.phd0.visible=1;
params.phd0.parameter_style= { 'entry', {}};
params.phd0.callback= '';
params.phd0.tabname= 'Parameters';
params.phd0.tooltip= '';
params.phd0.buttonimage= '';
params.phd0.buttontext= '';
params.phd0.buttontooltip= '';
params.phd0.type= 'scalar';
params.phd0.dimensions= '[]';
params.phd0.unit= '';
params.psd0.rank=5;
params.psd0.value='-4';
params.psd0.prompt='Initial angular velocity of wheel';
params.psd0.evaluate = 1;
params.psd0.enable=1;
params.psd0.visible=1;
params.psd0.parameter_style= { 'entry', {}};
params.psd0.callback= '';
params.psd0.tabname= 'Parameters';
params.psd0.tooltip= '';
params.psd0.buttonimage= '';
params.psd0.buttontext= '';
params.psd0.buttontooltip= '';
params.psd0.type= 'scalar';
params.psd0.dimensions= '[]';
params.psd0.unit= '';
params.th0.rank=6;
params.th0.value='pi/2-pi/10';
params.th0.prompt='Initial lean angle';
params.th0.evaluate = 1;
params.th0.enable=1;
params.th0.visible=1;
params.th0.parameter_style= { 'entry', {}};
params.th0.callback= '';
params.th0.tabname= 'Parameters';
params.th0.tooltip= '';
params.th0.buttonimage= '';
params.th0.buttontext= '';
params.th0.buttontooltip= '';
params.th0.type= 'scalar';
params.th0.dimensions= '[]';
params.th0.unit= '';
blk = set_block_mask(blk,params,'Dynamique model of a wheel rolling on the ground');
blk = set_atomic_property(blk,0);
[scsm, block_tag9] = add_block(scsm, blk, 'Wheel');
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag7, '1', 'input'}, [224.344528,270.295018], false);
scsm=add_explicit_link(scsm,{block_tag9, '3', 'output'},{block_tag5, '1', 'input'}, [208.402618,256.795018;208.402618,184.085360], false);
scsm=add_explicit_link(scsm,{block_tag9, '4', 'output'},{block_tag5, '2', 'input'}, [191.920883,243.295018;191.920883,168.656788], false);
scsm=add_explicit_link(scsm,{block_tag9, '5', 'output'},{block_tag5, '3', 'input'}, [179.363373,229.795018;179.363373,153.228217], false);
scsm=add_explicit_link(scsm,{block_tag9, '7', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '4', 'input'},{block_tag1, '2', 'output'}, [239.476349,137.799646], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '8', 'output'},{block_tag2, '1', 'input'}, [169.945251,189.295018], false);
scsm=add_explicit_link(scsm,{block_tag5, '6', 'input'},{block_tag3, '2', 'output'}, [255.645302,106.942503], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag9, '6', 'output'}, [255.645302,216.295018], false);
scsm=add_explicit_link(scsm,{block_tag5, '7', 'input'},{block_tag4, '2', 'output'}, [270.694916,91.513931], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag6, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'input'},{block_tag7, '2', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag5, '5', 'input'}, [224.344528,122.371074], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag0, '2', 'input'}, [296.694916,229.157544], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag8, '2', 'input'}, [255.645302,259.795018], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
out_1 = scsm;
end

wheelsim = subsystem_1();
wheelsim = set_model_workspace (wheelsim, {'R=1;'});
wheelsim = set_initial_time (wheelsim, '0');
wheelsim = set_final_time (wheelsim, '30');
tol = {'0.0000001', '0.0000001', '-1', '0' , '1', 'cpodes1', '-1'};
wheelsim = set_solver_parameters( wheelsim, tol);
wheelsim = evaluate_model (wheelsim);
scsm = wheelsim;
