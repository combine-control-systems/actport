function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'DC Motor');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Ports/ImplicitInput');
blk = set_block_origin(blk,[171.616211,-374.151917]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ImplicitInput');
blk = instantiate_block('system/Ports/ImplicitOutput');
blk = set_block_origin(blk,[502.143891,-438.823365]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'ImplicitOutput');
blk = instantiate_block('system/Ports/ImplicitInput');
blk = set_block_origin(blk,[170.534179,-491.545899]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ImplicitInput_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Resistor');
blk = set_block_origin(blk,[217.602967,-389.151917]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_R='1';
params.mo_T_ref='';
params.mo_alpha='';
params.mo_useHeatPort='0';
params.mo_T='';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
params.mo_LossPower=struct('fixed',{{'0'}},'start',{{''}});
params.mo_T_heatPort=struct('fixed',{{'0'}},'start',{{''}});
params.mo_R_actual=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Resistor_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Inductor');
blk = set_block_origin(blk,[299.960785,-389.151917]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_L='0.0001';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Inductor_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/EMF');
blk = set_block_origin(blk,[329.960785,-453.823365]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_useSupport='0';
params.mo_k='1';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
params.mo_phi=struct('fixed',{{'0'}},'start',{{''}});
params.mo_w=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'EMF');
blk = instantiate_block('Modelica 3.2.1/Mechanics/Rotational/Components/Inertia');
blk = set_block_origin(blk,[397.276398,-453.823365]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_J='1';
params.mo_phi=struct('fixed',{{'0'}},'start',{{'0'}});
params.mo_w=struct('fixed',{{'0'}},'start',{{'0'}});
params.mo_a=struct('fixed',{{'0'}},'start',{{''}});
params.mo_stateSelect=struct('choice1','1','choice2','0','choice3','0','choice4','0','choice5','0');;
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Inertia_1');
scsm=add_implicit_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [354.960785,-364.151917], false);
scsm=add_implicit_link(scsm,{block_tag5, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag6, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag2, '1', 'output'},{block_tag5, '1', 'output'}, [354.960785,-481.545899], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'DC Motor  ');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Resistor');
blk = set_block_origin(blk,[197.644791,-382.212921]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_R='1';
params.mo_T_ref='';
params.mo_alpha='';
params.mo_useHeatPort='0';
params.mo_T='';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
params.mo_LossPower=struct('fixed',{{'0'}},'start',{{''}});
params.mo_T_heatPort=struct('fixed',{{'0'}},'start',{{''}});
params.mo_R_actual=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Resistor_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Inductor');
blk = set_block_origin(blk,[280.002609,-382.212921]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_L='0.0001';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Inductor_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/EMF');
blk = set_block_origin(blk,[310.002609,-446.884369]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_useSupport='0';
params.mo_k='1';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
params.mo_phi=struct('fixed',{{'0'}},'start',{{''}});
params.mo_w=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EMF');
blk = instantiate_block('Modelica 3.2.1/Mechanics/Rotational/Components/Inertia');
blk = set_block_origin(blk,[377.318222,-446.884369]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_J='1';
params.mo_phi=struct('fixed',{{'0'}},'start',{{'0'}});
params.mo_w=struct('fixed',{{'0'}},'start',{{'0'}});
params.mo_a=struct('fixed',{{'0'}},'start',{{''}});
params.mo_stateSelect=struct('choice1','1','choice2','0','choice3','0','choice4','0','choice5','0');;
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Inertia_1');
blk = instantiate_block('system/Ports/ImplicitInput');
blk = set_block_origin(blk,[151.658035,-367.212921]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ImplicitInput');
blk = instantiate_block('system/Ports/ImplicitInput');
blk = set_block_origin(blk,[150.576004,-484.606903]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ImplicitInput_1');
blk = instantiate_block('system/Ports/ImplicitOutput');
blk = set_block_origin(blk,[482.185715,-431.884369]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ImplicitOutput');
scsm=add_implicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [335.002609,-357.212921], false);
scsm=add_implicit_link(scsm,{block_tag2, '2', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag4, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag3, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag5, '1', 'output'},{block_tag2, '1', 'output'}, [335.002609,-474.606903], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'motor');
scsm = set_diagram_context(scsm, {['A=[-0.3,3,1;0,0,2;0,0,0];',char(10),'B=[1;2;3];',char(10),'C=[1,1,2;0,2,3];',char(10),'D=0;',char(10),'x0=[-2;1;2];',char(10),'K=[0.1834511,-0.0635571;0.0556004,0.5931633;0.0409687,0.0975615];',char(10),'L=[-0.0041585,-0.1489701,-0.4993004];',char(10)]});
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'DC Motor');
blk = set_block_origin(blk,[89.588362,-314.408692]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag0] = add_block(scsm, blk, 'DC Motor');
blk = instantiate_block('system/Links/ImplicitSplit');
blk = set_block_origin(blk,[174.709412,-296.408692]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ImplicitSplit');
blk = set_block_origin(blk,[8.094292,-334.505219]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ImplicitSplit');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'DC Motor  ');
blk = set_block_origin(blk,[194.381409,-448.493329]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag3] = add_block(scsm, blk, 'DC Motor  ');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[353.425026,-316.408692]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.854902,0.898039,0.945098,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_V');
blk = set_block_origin(blk,[-27.714026,-449.493329]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.854902,0.898039,0.945098,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Scope_V');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Sources/StepVoltage');
blk = set_block_origin(blk,[-49.073614,-321.408692]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,90.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_V='1';
params.mo_offset='0';
params.mo_startTime='0';
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
params.mo_i=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'StepVoltage_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Ground');
blk = set_block_origin(blk,[-16.905708,-398.351013]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
[scsm, block_tag7] = add_block(scsm, blk, 'Ground_2');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Basic/Ground');
blk = set_block_origin(blk,[87.623597,-535.938416]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
[scsm, block_tag8] = add_block(scsm, blk, 'Ground_2_1');
blk = instantiate_block('Modelica 3.2.1/Mechanics/Rotational/Sensors/AngleSensor');
blk = set_block_origin(blk,[189.250771,-293.103180]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_phi=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'AngleSensor_1');
blk = instantiate_block('Modelica 3.2.1/Mechanics/Rotational/Sensors/SpeedSensor');
blk = set_block_origin(blk,[189.250771,-365.104187]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_w=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'SpeedSensor_1');
blk = instantiate_block('system/Interfaces/FromModelica');
blk = set_block_origin(blk,[311.416321,-291.408692]);
blk = set_block_size(blk,[10.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'FromModelica');
blk = instantiate_block('system/Interfaces/FromModelica');
blk = set_block_origin(blk,[311.416321,-311.408692]);
blk = set_block_size(blk,[10.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'FromModelica_1');
blk = instantiate_block('system/SignalGenerators/SquareWaveGenerator');
blk = set_block_origin(blk,[430.684388,-448.243329]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.FV='1';
params.SV='0';
params.period='1';
params.dutyCycle='50';
params.offset='0';
params.datatype='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'SquareWaveGenerator');
blk = instantiate_block('system/Interfaces/ToModelica');
blk = set_block_origin(blk,[373.331116,-433.243329]);
blk = set_block_size(blk,[10.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,180.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.value='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'ToModelica');
blk = instantiate_block('Modelica 3.2.1/Mechanics/Rotational/Sources/Torque');
blk = set_block_origin(blk,[279.380921,-459.493329]);
blk = set_block_size(blk,[50.000000,55.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_useSupport='0';
params.mo_tau=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Torque_1');
blk = instantiate_block('Modelica 3.2.1/Electrical/Analog/Sensors/VoltageSensor');
blk = set_block_origin(blk,[87.623597,-454.493329]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,90.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mo_v=struct('fixed',{{'0'}},'start',{{''}});
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'VoltageSensor_1');
blk = instantiate_block('system/Links/ImplicitSplit');
blk = set_block_origin(blk,[112.623597,-471.306549]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Interfaces/FromModelica');
blk = set_block_origin(blk,[50.704785,-434.493329]);
blk = set_block_size(blk,[10.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,180.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'FromModelica_2');
scsm=add_implicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag1, '2', 'output'},{block_tag10, '1', 'input'}, [174.709412,-340.104187], false);
scsm=add_implicit_link(scsm,{block_tag1, '1', 'output'},{block_tag9, '1', 'input'}, [174.709412,-268.103180], false);
scsm=add_implicit_link(scsm,{block_tag2, '1', 'input'},{block_tag7, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag0, '1', 'input'},{block_tag6, '1', 'input'}, [45.712234,-287.408692;45.712234,-256.678955;-24.073614,-256.678955], false);
scsm=add_implicit_link(scsm,{block_tag2, '2', 'output'},{block_tag6, '1', 'output'}, [-24.073614,-334.505219], false);
scsm=add_implicit_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '2', 'input'}, [46.129517,-334.505219;46.129517,-305.408692], false);
scsm=add_implicit_link(scsm,{block_tag16, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag9, '1', 'output'},{block_tag11, '1', 'input'}, [280.773796,-268.103180;280.773796,-286.408692], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag10, '1', 'output'},{block_tag12, '1', 'input'}, [280.773796,-340.104187;280.773796,-306.408692], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag14, '1', 'output'},{block_tag15, '1', 'input'}, [339.380921,-428.243329], false);
scsm=add_implicit_link(scsm,{block_tag16, '1', 'input'},{block_tag3, '1', 'input'}, [112.623596,-388.635651;153.502498,-388.635651;153.502498,-421.493329], false);
scsm=add_implicit_link(scsm,{block_tag17, '2', 'output'},{block_tag3, '2', 'input'}, [180.006137,-471.306549;180.006137,-439.493329], false);
scsm=add_implicit_link(scsm,{block_tag17, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_implicit_link(scsm,{block_tag3, '1', 'output'},{block_tag15, '1', 'output'}, [242.381419,-429.493329], false);
scsm=add_implicit_link(scsm,{block_tag16, '2', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[210.160507,-478.191284]);
blk = set_block_size(blk,[84.000000,28.000000]);
params=struct();
  params.txt='motor.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag19] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

motor = subsystem_1();
motor = set_model_workspace (motor, {''});
motor = set_initial_time (motor, '0');
motor = set_final_time (motor, '30');
tol = {'0.000001', '0.000001', '1e-10', '0' , '0', 'cvode1', '0'};
motor = set_solver_parameters( motor, tol);
motor = evaluate_model (motor);
scsm = motor;
