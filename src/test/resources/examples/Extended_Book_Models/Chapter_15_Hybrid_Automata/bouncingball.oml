function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'bouncingball');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-244.739716,29.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.854902,0.898039,0.945098,0.996078]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-9.8';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/Dynamical/JumpStateSpace');
blk = set_block_origin(blk,[-152.500023,22.000000]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='[0,1;0,0]';
params.B='[0;1]';
params.C='[1,0;0,1]';
params.D='[0;0]';
params.x0='10';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'JumpStateSpace');
blk = instantiate_block('system/ActivationOperations/ZeroCrossDown');
blk = set_block_origin(blk,[-130.500023,82.333855]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ZeroCrossDown');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_ident (blk,'Height');
blk = set_block_origin(blk,[14.752209,22.000000]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='1';
params.extractor=struct('index',{{'1'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Height');
blk = instantiate_block('system/Hybrid/LastInput');
blk = set_block_origin(blk,[-63.632757,-57.339973]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'LastInput');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-167.632757,-61.339973]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='[1,0;0,-0.7]';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MatrixGain');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_origin(blk,[121.512598,20.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.913725,0.941176,0.858824,0.996078]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='0';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-5.290945,40.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[101.509972,40.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag1, '2', 'input'}, [-191.250000,-37.339973;-191.250000,31.000000], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag4, '1', 'input'}, [-5.290945,-37.339973], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag2, '1', 'input'}, [101.509972,102.333855], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[-75.664394,-64.258736]);
blk = set_block_size(blk,[124.000000,28.000000]);
params=struct();
  params.txt='bouncingball.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag9] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

bouncingball = subsystem_1();
bouncingball = set_model_workspace (bouncingball, {''});
bouncingball = set_initial_time (bouncingball, '0');
bouncingball = set_final_time (bouncingball, '10');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
bouncingball = set_solver_parameters( bouncingball, tol);
bouncingball = evaluate_model (bouncingball);
scsm = bouncingball;
