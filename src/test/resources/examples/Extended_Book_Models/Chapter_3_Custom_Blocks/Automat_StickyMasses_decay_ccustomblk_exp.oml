function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Automat_StickyMasses_decay_ccustomblk_exp');
scsm = set_diagram_context(scsm, {['m1=1;',char(10),'m2=1;',char(10),'k1=1;',char(10),'k2=2;',char(10),'a1=1;',char(10),'a2=2;',char(10),'x01=0;',char(10),'v01=0;',char(10),'x02=3;',char(10),'v02=0;',char(10),char(10),'k3=(k1+k2);',char(10),'a3=(k1*a1+k2*a2)/(a1+a2);',char(10),'m3=m1+m2;',char(10),'e=10;',char(10),'Nmode=2;',char(10),'Minitial=1;',char(10)]});
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[662.511353,-746.331543]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.inports=struct('size',{{'1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[662.511353,-879.331543]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.inports=struct('size',{{'1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[547.511353,-826.331543]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'4','4','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Mux_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[753.650269,-652.243164]);
blk = set_block_size(blk,[84.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u2''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'MathExpression');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[729.650269,-692.331543]);
blk = set_block_size(blk,[108.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-k1*(u1-a1)/m1''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'MathExpression_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[753.650269,-735.831543]);
blk = set_block_size(blk,[84.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u4''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MathExpression_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[729.650269,-777.331543]);
blk = set_block_size(blk,[108.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-k2*(u3-a2)/m2''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'MathExpression_3');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[765.650269,-838.831543]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u1''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'MathExpression_3_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[765.650269,-883.831543]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u2''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'MathExpression_3_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[765.650269,-932.062461]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u1-u3''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'MathExpression_3_2_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[654.511353,-1170.163943]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.inports=struct('size',{{'1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Mux_3');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[631.511353,-1339.163943]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.inports=struct('size',{{'1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Mux_1_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[539.511353,-1250.163943]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'4','4','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Mux_2_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[778.074219,-1129.676527]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u2''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'MathExpression_1_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[730.074219,-1164.331543]);
blk = set_block_size(blk,[108.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-k3*(u1-a3)/m3''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'MathExpression_2_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[766.074219,-1209.331543]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-u3''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'MathExpression_3_3');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[766.074219,-1298.636702]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''u1''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'MathExpression_3_1_1');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[664.772156,-1431.982422]);
blk = set_block_size(blk,[180.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-k1*a1+k2*a2+(k1-k2)*u1-u3''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'MathExpression_3_2_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[694.074219,-1349.329443]);
blk = set_block_size(blk,[144.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''(m1*u2+m2*u4)/(m1+m2)''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'MathExpression_3_2_1_2');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[766.074219,-1256.534668]);
blk = set_block_size(blk,[72.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-u4''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'MathExpression_3_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-680.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'fork_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-723.906394]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'fork_10');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-765.245668]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'fork_11');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-871.854492]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'fork_13');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-920.090599]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'fork_14');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[717.384796,-871.831543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'fork_16');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.946730,-1027.356633]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'fork_17');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1197.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'fork_18');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1152.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'fork_19');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1117.681396]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'fork_20');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1244.591329]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'fork_21');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[710.952637,-1390.748047]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='e';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag31] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1286.636702]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag32] = add_block(scsm, blk, 'fork_23');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.860925,-1331.329443]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag33] = add_block(scsm, blk, 'fork_24');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[922.511353,-1057.356633]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,4);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='4';
params.outports=struct('size',{{'1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag34] = add_block(scsm, blk, 'Demux_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[1127.511353,-955.331543]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag35] = add_block(scsm, blk, 'Mux_2_2');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[1127.511353,-1029.331543]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag36] = add_block(scsm, blk, 'Mux_2_2_1');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[1017.468994,-960.331543]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='1.5';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag37] = add_block(scsm, blk, 'Switch2_3');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[1017.468994,-1034.331543]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='1.5';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag38] = add_block(scsm, blk, 'Switch2_3_1');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[1017.468994,-1102.331543]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='1.5';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag39] = add_block(scsm, blk, 'Switch2_3_1_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[1210.536255,-927.331543]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''','''''',''''''}},'reverseColor',{{'0','0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear''','''linear'''}},'yInterval',{{'[1,2]','[-0.5,3]','[-1.5,1.5]','[0,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''','''''',''''''}},'color',{{'0','0','0','0'}},'marker',{{'0','0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag40] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/CustomBlocks/CCustomBlock');
blk = set_block_ident (blk,'CCustomBlock_stickyballs');
blk = set_block_origin(blk,[619.006775,-1037.356633]);
blk = set_block_size(blk,[70.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('inrow',{{'9','9'}},'incol',{{'1','1'}},'it',{{'''double''','''double'''}},'depu',{{'0','0'}},'name',{{'''''',''''''}});
params.nevin='0';
params.nout='2';
params.outports=struct('outrow',{{'1','4'}},'outcol',{{'1','1'}},'ot',{{'''double''','''double'''}},'name',{{'''''',''''''}});
params.nevout='0';
params.evoutports=struct('fir',{{}});
params.xx='[x01;0;x02;0]';
params.xd='[0;0;0;0]';
params.z='[]';
params.noz='0';
params.ozparams=struct('oztyp',{{}},'ozvalue',{{}},'name',{{}});
params.rpar='[]';
params.ipar='[Nmode;Minitial]';
params.nopar='2';
params.oparparams=struct('opartyp',{{'''int32''','''int32'''}},'oparvalue',{{'2','1'}},'name',{{'''''',''''''}});
params.inlined='1';
params.code=['[''#include "vss_block4.h"'',char(10),char(10),''typedef struct {'',char(10),''',char(9),'int cMode, pMode;'',char(10),''}automat_t;'',char(10),char(10),''#define WD      ((automat_t *) GetWorkPtrs(block))'',char(10),''#define _cMode  (WD->cMode)'',char(10),''#define _pMode  (WD->pMode)'',char(10),char(10),char(10),char(10),''VSS_EXPORT void CBlockFunction(vss_block *block,int flag)'',char(10),''{'',char(10),''',char(9),'double * y0, *y1, *ui;'',char(10),''',char(9),'double* g=GetGPtrs(block);'',char(10),''',char(9),'double* x=GetState(block);'',char(10),''',char(9),'double* xd=GetDerState(block);'',char(10),''',char(9),' '',char(10),''',char(9),'double* evout= GetNevOutPtrs(block);'',char(10),''',char(9),'int* ipar=GetIparPtrs(block);'',char(10),''',char(9),'double* rpar=GetRparPtrs(block);'',char(10),''',char(9),'int* jroot=GetJrootPtrs(block);'',char(10),''',char(9),'int ng=GetNg(block);'',char(10),''',char(9),'int NX=GetNstate(block);'',char(10),''',char(9),'int* tmodev, NMode, Minitial,j,k;'',char(10),''',char(9),'double time=GetVssTime(block);'',char(10),char(10),''',char(9),'NMode=ipar[0];'',char(10),''',char(9),'Minitial=ipar[1];'',char(10),char(10),''',char(9),'switch(flag)'',char(10),''',char(9),'{'',char(10),''',char(9),'case VssFlag_Initialize:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'{'',char(10),''',char(9),char(9),char(9),'if ((GetWorkPtrs(block)=(automat_t*) vss_malloc(block,sizeof(automat_t)))== NULL ) { SetBlockError(block,1); return; }'',char(10),''',char(9),char(9),char(9),'_pMode=_cMode=Minitial; '',char(10),''',char(9),char(9),'}'',char(10),''',char(9),char(9),'break;'',char(10),''',char(9),'case VssFlag_OutputUpdate:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'{ '',char(10),''',char(9),char(9),char(9),'y0=GetRealOutPortPtrs(block,1);'',char(10),''',char(9),char(9),char(9),'y1=GetRealOutPortPtrs(block,2);'',char(10),''',char(9),char(9),char(9),''',char(10),''',char(9),char(9),char(9),'y0[0]=(double) _cMode;'',char(10),'' '',char(10),''            memcpy(y1,x,sizeof(double)*NX);',char(9),'y1+=NX;'',char(10),char(10),''',char(9),char(9),'}'',char(10),''',char(9),char(9),'break;'',char(10),char(10),''',char(9),'case VssFlag_Derivatives:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'{  '',char(10),''',char(9),char(9),char(9),'ui=GetRealInPortPtrs(block,_cMode);'',char(10),''',char(9),char(9),char(9),'memcpy(xd,ui,sizeof(double)*NX);',char(9),char(9),char(9),char(9),''',char(10),''',char(9),char(9),'}'',char(10),''',char(9),char(9),'break;'',char(10),''',char(9),'case VssFlag_ZeroCrossings:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'{ '',char(10),''',char(9),char(9),char(9),'ui=GetRealInPortPtrs(block,_cMode);'',char(10),''',char(9),char(9),char(9),'for (j=0;j<ng;j++) g[j]=0;'',char(10),''',char(9),char(9),char(9),'for (j=0;j<GetInPortRows(block,_cMode)-2*NX;j++) {'',char(10),''',char(9),char(9),char(9),char(9),'g[j]=ui[j+2*NX];'',char(10),''',char(9),char(9),char(9),'}'',char(10),''',char(9),char(9),'}'',char(10),''',char(9),char(9),'break;'',char(10),char(10),''',char(9),'case VssFlag_StateUpdate:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'{',char(9),char(9),char(9),''',char(10),''',char(9),char(9),char(9),'if (!( isZeroCrossing(block)  || GetNevIn(block)==1 || GetSimulationPhase(block)==PHASE_DISCRETE || GetSimulationPhase(block)==PHASE_MESHPOINT )) return;'',char(10),''',char(9),char(9),char(9),'tmodev=Getint32OparPtrs(block,_cMode);'',char(10),''',char(9),char(9),char(9),'ui=GetRealInPortPtrs(block,_cMode);'',char(10),''            '',char(10),''',char(9),char(9),char(9),'for (k=0;k<GetInPortRows(block,_cMode)-2*NX;k++){'',char(10),''',char(9),char(9),char(9),char(9),'ui=GetRealInPortPtrs(block,_cMode);'',char(10),''',char(9),char(9),char(9),char(9),'if( (isZeroCrossing(block) && jroot[k]==1) ||'',char(10),''',char(9),char(9),char(9),char(9),char(9),'(GetNevIn(block)==1 && ui[k+2*NX]>0 )  ||'',char(10),''',char(9),char(9),char(9),char(9),char(9),'(GetSimulationPhase(block)==PHASE_DISCRETE  && ui[k+2*NX]>0) || '',char(10),''',char(9),char(9),char(9),char(9),char(9),'(GetSimulationPhase(block)==PHASE_MESHPOINT && ui[k+2*NX]>0)'',char(10),''',char(9),char(9),char(9),char(9),char(9),') {'',char(10),''',char(9),char(9),char(9),char(9),char(9),char(9),'_pMode=_cMode;'',char(10),''',char(9),char(9),char(9),char(9),char(9),char(9),'_cMode=tmodev[k];',char(9),''',char(10),''            ',char(9),char(9),char(9),'ui=GetRealInPortPtrs(block,_cMode);ui+=NX;'',char(10),''',char(9),char(9),char(9),char(9),char(9),char(9),'memcpy(x,ui,sizeof(double)*NX);'',char(10),''',char(9),char(9),char(9),char(9),char(9),char(9),'DoColdRestart(block);'',char(10),''',char(9),char(9),char(9),char(9),char(9),char(9),'break;'',char(10),''',char(9),char(9),char(9),char(9),'}'',char(10),''',char(9),char(9),char(9),'}'',char(10),''',char(9),char(9),'}'',char(10),''',char(9),char(9),'break;'',char(10),''',char(9),'default:/*----------------------------------------------------------*/'',char(10),''',char(9),char(9),'break;'',char(10),''',char(9),'}'',char(10),''}'',char(10),char(10)]'];
params.fcn=struct('slib',{{''''''}},'epoint',{{''''''}});
params.impl='0';
params.nincludepath='0';
params.includepath=struct('path',{{}});
params.ndefine='0';
params.define=struct('path',{{}});
params.ncompileflags='0';
params.compileflags=struct('path',{{}});
params.nlibpath='0';
params.libpath=struct('path',{{}});
params.nlibs='0';
params.libs=struct('path',{{}});
params.nmode='0';
params.nzcr='1';
params.dept='''Always Active mode''';
blk = set_block_parameters(blk,params);
[scsm, block_tag41] = add_block(scsm, blk, 'CCustomBlock_stickyballs');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[865.946730,-1027.356633]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag42] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[974.261353,-1000.998210]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag43] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[960.677490,-1034.856633]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag44] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1000.011353,-910.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag45] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[1210.536255,-863.855042]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag46] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[892.295044,-940.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag47] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[986.870911,-940.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag48] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[986.870911,-1014.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag49] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[1150.709717,-902.331543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag50] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[654.777710,-1331.663943]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag51] = add_block(scsm, blk, 'Block_8');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[654.777710,-1355.612793]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag52] = add_block(scsm, blk, 'Block_9');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[866.075768,-826.831543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag53] = add_block(scsm, blk, 'Block_10');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[696.978149,-826.831543]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag54] = add_block(scsm, blk, 'Block_11');
scsm=add_explicit_link(scsm,{block_tag41, '2', 'output'},{block_tag26, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag3, '1', 'input'}, [866.075768,-640.243164], false);
scsm=add_explicit_link(scsm,{block_tag20, '2', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '2', 'output'},{block_tag5, '1', 'input'}, [866.074569,-723.906394;866.074569,-723.831543], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '2', 'output'},{block_tag6, '1', 'input'}, [866.074569,-765.245668;866.074569,-765.331543], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag53, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag23, '2', 'output'},{block_tag8, '1', 'input'}, [866.075768,-871.831543], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '2', 'output'},{block_tag9, '1', 'input'}, [866.075768,-920.062461], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [700.511353,-640.243164;700.511353,-693.831543], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag0, '2', 'input'}, [711.400513,-680.331543;711.400513,-708.831543], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag0, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag0, '4', 'input'}, [711.352051,-765.331543;711.352051,-738.831543], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag25, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag1, '2', 'input'}, [717.384796,-841.831543], false);
scsm=add_explicit_link(scsm,{block_tag25, '2', 'output'},{block_tag1, '4', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag2, '1', 'input'}, [613.011353,-716.331543;613.011353,-776.331543], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '2', 'input'}, [652.511353,-796.331543], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag2, '3', 'input'}, [607.011353,-920.062461;607.011353,-816.331543], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag10, '2', 'input'}, [692.511353,-1152.331543;692.511353,-1132.663943], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag10, '3', 'input'}, [684.932434,-1197.331543;684.932434,-1147.663943], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag10, '4', 'input'}, [675.397461,-1244.534668;675.397461,-1162.663943], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag12, '1', 'input'}, [600.511353,-1140.163943;600.511353,-1200.163943], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag42, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag26, '2', 'output'},{block_tag29, '1', 'input'}, [865.946730,-1117.681396], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag30, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag27, '2', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag27, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '2', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag29, '1', 'output'},{block_tag28, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag29, '2', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag30, '1', 'output'},{block_tag19, '1', 'input'}, [848.074219,-1244.591329], false);
scsm=add_explicit_link(scsm,{block_tag30, '2', 'output'},{block_tag32, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag12, '2', 'input'}, [601.968323,-1309.163943;601.968323,-1220.163943], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag11, '2', 'input'}, [684.074219,-1301.663943], false);
scsm=add_explicit_link(scsm,{block_tag32, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag32, '2', 'output'},{block_tag33, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag33, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag33, '2', 'output'},{block_tag17, '1', 'input'}, [865.860925,-1419.982422], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag12, '3', 'input'}, [576.653870,-1419.982422;576.653870,-1240.163943], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag41, '2', 'input'}, [529.511353,-1028.011543;609.006775,-1028.011543], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag41, '1', 'input'}, [526.022353,-796.331543;526.022353,-1007.356633], false);
scsm=add_explicit_link(scsm,{block_tag37, '1', 'output'},{block_tag35, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag38, '1', 'output'},{block_tag36, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag34, '3', 'output'},{block_tag44, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag36, '1', 'output'},{block_tag40, '3', 'input'}, [1174.761353,-999.331543;1174.761353,-912.331543], false);
scsm=add_explicit_link(scsm,{block_tag39, '1', 'output'},{block_tag40, '4', 'input'}, [1186.011353,-1082.331543;1186.011353,-922.331543], false);
scsm=add_explicit_link(scsm,{block_tag42, '2', 'output'},{block_tag34, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag42, '1', 'output'},{block_tag24, '1', 'input'}, [865.946730,-920.090599], false);
scsm=add_explicit_link(scsm,{block_tag34, '4', 'output'},{block_tag38, '3', 'input'}, [1002.090027,-1049.856633;1002.090027,-1027.664876], false);
scsm=add_explicit_link(scsm,{block_tag34, '2', 'output'},{block_tag43, '1', 'input'}, [974.261353,-1019.856633], false);
scsm=add_explicit_link(scsm,{block_tag43, '2', 'output'},{block_tag36, '1', 'input'}, [974.261353,-984.331543], false);
scsm=add_explicit_link(scsm,{block_tag43, '1', 'output'},{block_tag38, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag44, '2', 'output'},{block_tag37, '3', 'input'}, [960.675615,-953.664876], false);
scsm=add_explicit_link(scsm,{block_tag44, '1', 'output'},{block_tag39, '1', 'input'}, [960.677490,-1068.998210], false);
scsm=add_explicit_link(scsm,{block_tag34, '1', 'output'},{block_tag45, '1', 'input'}, [945.492371,-1004.856633;945.492371,-910.331543], false);
scsm=add_explicit_link(scsm,{block_tag45, '2', 'output'},{block_tag37, '1', 'input'}, [1000.011353,-926.998210], false);
scsm=add_explicit_link(scsm,{block_tag45, '1', 'output'},{block_tag35, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag41, '1', 'output'},{block_tag47, '1', 'input'}, [892.295044,-1007.356633], false);
scsm=add_explicit_link(scsm,{block_tag47, '2', 'output'},{block_tag48, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag47, '1', 'output'},{block_tag40, '1', 'input'}, [892.295044,-892.331543], false);
scsm=add_explicit_link(scsm,{block_tag48, '2', 'output'},{block_tag49, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag48, '1', 'output'},{block_tag37, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag49, '2', 'output'},{block_tag39, '2', 'input'}, [986.870911,-1082.331543], false);
scsm=add_explicit_link(scsm,{block_tag49, '1', 'output'},{block_tag38, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag35, '1', 'output'},{block_tag50, '1', 'input'}, [1150.709717,-925.331543], false);
scsm=add_explicit_link(scsm,{block_tag50, '2', 'output'},{block_tag46, '1', 'input'}, [1150.709717,-843.855042], false);
scsm=add_explicit_link(scsm,{block_tag50, '1', 'output'},{block_tag40, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag31, '1', 'output'},{block_tag52, '1', 'input'}, [654.777710,-1378.748047], false);
scsm=add_explicit_link(scsm,{block_tag51, '2', 'output'},{block_tag11, '4', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag51, '1', 'output'},{block_tag11, '3', 'input'}, [654.777710,-1316.663943], false);
scsm=add_explicit_link(scsm,{block_tag52, '2', 'output'},{block_tag39, '3', 'input'}, [943.690613,-1355.612793;943.690613,-1095.664876], false);
scsm=add_explicit_link(scsm,{block_tag52, '1', 'output'},{block_tag51, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag54, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag53, '2', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag53, '1', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag54, '2', 'output'},{block_tag1, '3', 'input'}, [696.978149,-856.831543], false);
scsm=add_explicit_link(scsm,{block_tag54, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[985.975037,-1142.495178]);
blk = set_block_size(blk,[346.000000,28.000000]);
params=struct();
  params.txt='Automat_StickyMasses_decay_ccustomblk_exp.scm';
blk = set_block_parameters (blk, params);
[scsm, block_tag55] = add_block(scsm, blk, 'Annotation_1');
out_1 = scsm;
end

Automat_StickyMasses_decay_ccustomblk_exp = subsystem_1();
Automat_StickyMasses_decay_ccustomblk_exp = set_model_workspace (Automat_StickyMasses_decay_ccustomblk_exp, {''});
Automat_StickyMasses_decay_ccustomblk_exp = set_initial_time (Automat_StickyMasses_decay_ccustomblk_exp, '0');
Automat_StickyMasses_decay_ccustomblk_exp = set_final_time (Automat_StickyMasses_decay_ccustomblk_exp, '30');
tol = {'0.000001', '0.000001', '1e-10', '0' , '0', 'daskr', '0'};
Automat_StickyMasses_decay_ccustomblk_exp = set_solver_parameters( Automat_StickyMasses_decay_ccustomblk_exp, tol);
Automat_StickyMasses_decay_ccustomblk_exp = evaluate_model (Automat_StickyMasses_decay_ccustomblk_exp);
scsm = Automat_StickyMasses_decay_ccustomblk_exp;
