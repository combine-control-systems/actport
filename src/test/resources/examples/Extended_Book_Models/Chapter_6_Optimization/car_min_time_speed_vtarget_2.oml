function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'car');
scsm = set_diagram_context(scsm, {['a=engine_par(1);',char(10),'b=engine_par(2);',char(10),'c=engine_par(3);',char(10),'q=engine_par(4);',char(10)]});
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-251.255829,58.706207]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Block_15');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[-315.142670,-232.934891]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SelectInput');
blk = instantiate_block('system/Routing/SelectInput');
blk = set_block_origin(blk,[-305.255829,-143.405510]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,5);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,5);
blk = set_block_evtnout (blk,0);
params=struct();
params.typ='''double''';
params.nin='5';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'SelectInput_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-332.255829,-143.405510]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,5);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='5';
params.outports=struct('size',{{'1','1','1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'initial speed');
blk = set_block_origin(blk,[-386.071136,-214.934891]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='v0';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'initial speed');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[173.645088,-169.116310]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.576471,0.807843,0.862745,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Integral_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-299.255829,35.678490]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[-22.908403,-154.116310]);
blk = set_block_size(blk,[36.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='1';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Integral_2');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-162.418427,-136.041924]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.in_ports=struct('sgn',{{'''*''','''*''','''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Product');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-221.247482,-113.369698]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-168.005905,-227.934891]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Product_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-187.602844,-128.404648]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[113.484985,-175.116310]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''/'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Product_1_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[69.484985,-142.116310]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='c';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Gain_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-178.005905,-160.116310]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-114.522324,-142.041924]);
blk = set_block_size(blk,[12.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-18.910268,-263.330978]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[29.768024,-202.330978]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,90.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='a';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Gain_1_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[-235.142670,-232.934891]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='1/c';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Gain_1_2');
blk = instantiate_block('system/Hybrid/LastInput');
blk = set_block_origin(blk,[-99.177139,-289.350174]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'LastInput');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[-40.908403,1.409893]);
blk = set_block_size(blk,[72.000000,6.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.658824,0.003922,0.039216,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,5);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='5';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'EventUnion');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-4.908403,-92.820896]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Block_17');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[144.256157,-145.116310]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-286.823808,41.590257]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Block_8');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[144.050529,-193.398026]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Block_13');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[47.768013,-130.116310]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_origin(blk,[-0.231987,-84.630594]);
blk = set_block_size(blk,[96.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,270.000000);
blk = set_block_bg_color(blk,[0.858824,0.760784,0.835294,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','0','Acceleration','0','Force','0','Energy','0','Power','0','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','0','Rotational_Speed','1','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''m/s''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''Watt''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''radians''';
params.PI_Rotational_Speed='''rad/sec''';
params.PO_Rotational_Speed='''RPM''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'UnitConversion_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[47.768013,-8.630594]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Block_11');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[24.652702,-260.330978]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='b';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Gain_1_1_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-275.232025,47.469444]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-263.255829,54.140167]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-235.331589,-59.409327]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='q/c';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag31] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-177.832047,-40.304575]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag32] = add_block(scsm, blk, 'Block_19');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_origin(blk,[154.050529,-211.398026]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.858824,0.760784,0.835294,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','1','Acceleration','0','Force','0','Energy','0','Power','0','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','0','Rotational_Speed','0','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''km/hr''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''Watt''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''radians''';
params.PI_Rotational_Speed='''rad/sec''';
params.PO_Rotational_Speed='''rad/sec''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag33] = add_block(scsm, blk, 'UnitConversion');
blk = instantiate_block('system/LookupTables/LookupTable');
blk = set_block_origin(blk,[-133.068035,-76.304575]);
blk = set_block_size(blk,[72.000000,72.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='Torque(1,:)';
params.yy='Torque(2,:)';
params.Method='''Not_a_knot''';
params.typ='''double''';
params.EventGen='1';
params.externalActivation='0';
params.Leftside='''Zero''';
params.Rightside='''Zero''';
blk = set_block_parameters(blk,params);
[scsm, block_tag34] = add_block(scsm, blk, 'LookupTable');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'5');
blk = set_block_origin(blk,[-329.232025,78.706207]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='5';
blk = set_block_parameters(blk,params);
[scsm, block_tag35] = add_block(scsm, blk, '5');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'distance');
blk = set_block_origin(blk,[248.004623,-155.116310]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag36] = add_block(scsm, blk, 'distance');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'1');
blk = set_block_origin(blk,[-388.922162,55.678490]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag37] = add_block(scsm, blk, '1');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'2');
blk = set_block_origin(blk,[-376.823808,61.590257]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag38] = add_block(scsm, blk, '2');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'RPM');
blk = set_block_origin(blk,[149.058022,-18.630594]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='3';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag39] = add_block(scsm, blk, 'RPM');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'3');
blk = set_block_origin(blk,[-361.431122,67.469444]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='3';
blk = set_block_parameters(blk,params);
[scsm, block_tag40] = add_block(scsm, blk, '3');
blk = instantiate_block('system/Ports/EventInput');
blk = set_block_ident (blk,'4');
blk = set_block_origin(blk,[-347.232025,74.140167]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.portNumber='4';
blk = set_block_parameters(blk,params);
[scsm, block_tag41] = add_block(scsm, blk, '4');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'Torque');
blk = set_block_origin(blk,[-162.159821,5.541002]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='4';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag42] = add_block(scsm, blk, 'Torque');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'speed');
blk = set_block_origin(blk,[246.050529,-203.398026]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag43] = add_block(scsm, blk, 'speed');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'Constant_gear');
blk = set_block_origin(blk,[-393.297333,-125.405510]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='gear';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag44] = add_block(scsm, blk, 'Constant_gear');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[85.228733,-260.330978]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='2';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag45] = add_block(scsm, blk, 'Power');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[144.050518,-248.330978]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag46] = add_block(scsm, blk, 'Block_2');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag2, '5', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag0, '2', 'output'},{block_tag20, '5', 'input'}, [23.891597,58.706207], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag1, '2', 'input'}, [-336.050476,-269.350174;-336.050476,-222.934891], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'output'},{block_tag2, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '3', 'output'},{block_tag2, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '4', 'output'},{block_tag2, '4', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '5', 'output'},{block_tag2, '5', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag9, '1', 'input'}, [-235.255829,-113.369705], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag23, '1', 'output'},{block_tag2, '2', 'input'}, [-287.255829,41.590257], false);
scsm=add_event_link(scsm,{block_tag29, '1', 'output'},{block_tag2, '3', 'input'}, [-275.256128,-73.405510], false);
scsm=add_event_link(scsm,{block_tag30, '1', 'output'},{block_tag2, '4', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '2', 'output'},{block_tag20, '1', 'input'}, [-33.708403,35.678490], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag25, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag7, '1', 'input'}, [-32.908403,-118.041924], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag7, '2', 'input'}, [-95.699478,-197.934891;-95.699478,-142.116310], false);
scsm=add_event_link(scsm,{block_tag21, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag32, '1', 'output'},{block_tag8, '1', 'input'}, [-177.832047,-83.541924], false);
scsm=add_explicit_link(scsm,{block_tag31, '1', 'output'},{block_tag8, '2', 'input'}, [-189.331589,-98.541924], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag8, '3', 'input'}, [-172.418427,-113.369698], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag8, '4', 'input'}, [-187.602844,-128.541924], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag11, '1', 'input'}, [-221.247482,-128.404648], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag10, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag14, '1', 'input'}, [-187.602844,-160.116310], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag12, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag15, '2', 'input'}, [-133.966400,-233.330978;-133.966400,-130.041924], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag21, '2', 'output'},{block_tag19, '1', 'input'}, [-79.177139,-92.820896], false);
scsm=add_event_link(scsm,{block_tag20, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag23, '2', 'output'},{block_tag20, '2', 'input'}, [-19.308403,41.531429], false);
scsm=add_event_link(scsm,{block_tag29, '2', 'output'},{block_tag20, '3', 'input'}, [-4.908403,47.469444], false);
scsm=add_event_link(scsm,{block_tag30, '2', 'output'},{block_tag20, '4', 'input'}, [9.491597,54.140167], false);
scsm=add_explicit_link(scsm,{block_tag22, '2', 'output'},{block_tag24, '1', 'input'}, [144.050529,-145.116310], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag46, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '2', 'output'},{block_tag33, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '3', 'output'},{block_tag26, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag27, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag34, '1', 'input'}, [-19.185154,-8.630594;-19.185154,-40.304575], false);
scsm=add_explicit_link(scsm,{block_tag34, '1', 'output'},{block_tag32, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag35, '1', 'output'},{block_tag0, '1', 'input'}, [-319.232025,58.706207], false);
scsm=add_explicit_link(scsm,{block_tag44, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag36, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag37, '1', 'output'},{block_tag6, '1', 'input'}, [-378.922162,35.678490], false);
scsm=add_event_link(scsm,{block_tag38, '1', 'output'},{block_tag23, '1', 'input'}, [-366.823808,41.590257], false);
scsm=add_explicit_link(scsm,{block_tag27, '2', 'output'},{block_tag39, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag40, '1', 'output'},{block_tag29, '1', 'input'}, [-351.431122,47.469444], false);
scsm=add_event_link(scsm,{block_tag41, '1', 'output'},{block_tag30, '1', 'input'}, [-337.232025,54.140167], false);
scsm=add_explicit_link(scsm,{block_tag32, '2', 'output'},{block_tag42, '1', 'input'}, [-177.832047,15.541002], false);
scsm=add_explicit_link(scsm,{block_tag33, '1', 'output'},{block_tag43, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag16, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag45, '1', 'output'},{block_tag28, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag46, '2', 'output'},{block_tag45, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag46, '1', 'output'},{block_tag19, '1', 'input'}, [144.050514,-268.943207;-49.177139,-268.943207], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[217.342133,-135.737457]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='x';
blk = set_block_parameters (blk, params);
[scsm, block_tag47] = add_block(scsm, blk, 'Annotation_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_4');
blk = set_block_origin(blk,[232.598801,-184.155045]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='v';
blk = set_block_parameters (blk, params);
[scsm, block_tag48] = add_block(scsm, blk, 'Annotation_4');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[22.961470,-119.635651]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='w';
blk = set_block_parameters (blk, params);
[scsm, block_tag49] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[-234.192871,-96.165092]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='g_i';
blk = set_block_parameters (blk, params);
[scsm, block_tag50] = add_block(scsm, blk, 'Annotation_2');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_3');
blk = set_block_origin(blk,[-141.215820,-28.479839]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='T';
blk = set_block_parameters (blk, params);
[scsm, block_tag51] = add_block(scsm, blk, 'Annotation_3');
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'HP-torque-rpm-curves');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[94.498421,-67.418882]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Product_1_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[50.595615,9.576796]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_origin(blk,[162.643585,-57.418882]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','0','Acceleration','0','Force','0','Energy','0','Power','1','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','0','Rotational_Speed','0','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''m/s''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''horsepower''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''radians''';
params.PI_Rotational_Speed='''rad/sec''';
params.PO_Rotational_Speed='''RPM''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'UnitConversion');
blk = instantiate_block('system/SignalConversions/UnitConversion');
blk = set_block_origin(blk,[-35.428997,-72.418882]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.ucategory=struct('Temperature','0','Volume','0','Pressure','0','Distance','0','Speed','0','Acceleration','0','Force','0','Energy','0','Power','0','Mass','0','Flow','0','Area','0','Charge','0','Volt','0','Current','0','Resistance','0','Capacitance','0','Magnetic_Flux','0','Inductance','0','Torque','0','Rotary_Inertia','0','Rotation','0','Rotational_Speed','1','Density','0','Enthalpy','0');;
params.PI_Temperature='''celsius''';
params.PO_Temperature='''celsius''';
params.PI_Volume='''m^3''';
params.PO_Volume='''m^3''';
params.PI_Pressure='''N/m^2 (Pascal)''';
params.PO_Pressure='''N/m^2 (Pascal)''';
params.PI_Distance='''m''';
params.PO_Distance='''m''';
params.PI_Speed='''m/s''';
params.PO_Speed='''m/s''';
params.PI_Acceleration='''m/s^2''';
params.PO_Acceleration='''m/s^2''';
params.PI_Force='''N''';
params.PO_Force='''N''';
params.PI_Energy='''Joule''';
params.PO_Energy='''Joule''';
params.PI_Power='''Watt''';
params.PO_Power='''horsepower''';
params.PI_Mass='''kg''';
params.PO_Mass='''kg''';
params.PI_Flow='''m^3/s''';
params.PO_Flow='''m^3/s''';
params.PI_Area='''m^2''';
params.PO_Area='''m^2''';
params.PI_Charge='''coulomb''';
params.PO_Charge='''coulomb''';
params.PI_Volt='''volt''';
params.PO_Volt='''volt''';
params.PI_Current='''ampere''';
params.PO_Current='''ampere''';
params.PI_Resistance='''ohm''';
params.PO_Resistance='''ohm''';
params.PI_Capacitance='''farad''';
params.PO_Capacitance='''farad''';
params.PI_Magnetic_Flux='''weber''';
params.PO_Magnetic_Flux='''weber''';
params.PI_Inductance='''henry''';
params.PO_Inductance='''henry''';
params.PI_Torque='''kg.m''';
params.PO_Torque='''kg.m''';
params.PI_Rotary_Inertia='''kg.cm.s^2''';
params.PO_Rotary_Inertia='''kg.cm.s^2''';
params.PI_Rotation='''radians''';
params.PO_Rotation='''radians''';
params.PI_Rotational_Speed='''RPM''';
params.PO_Rotational_Speed='''rad/sec''';
params.PI_Density='''g/cm^3''';
params.PO_Density='''g/cm^3''';
params.PI_Enthalpy='''kJ/kg''';
params.PO_Enthalpy='''kJ/kg''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'UnitConversion_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-61.541565,9.576796]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[70.595615,-9.840012]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-61.541565,-52.418882]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-179.501579,-0.423204]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-178.726719,-19.840012]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Input_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[120.070999,-193.340012]);
blk = set_block_size(blk,[72.000000,96.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='1';
params.option='''Reuse''';
params.useSubplot='0';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='20';
params.yScale='''linear''';
params.yInterval='[2500,6500]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalViewers/ScopeXY');
blk = set_block_origin(blk,[40.595615,120.323021]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xInterval='[NaN,NaN]';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.curvesStyle='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'ScopeXY_2');
blk = instantiate_block('system/SignalViewers/ScopeXY');
blk = set_block_origin(blk,[202.436401,127.738861]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='1';
params.option='''Reuse''';
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xInterval='[2500,6500]';
params.yScale='''linear''';
params.yInterval='[80,260]';
params.curvesStyle='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'ScopeXY_2_1');
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '2', 'output'},{block_tag10, '1', 'input'}, [50.595615,82.492252;11.541954,82.492252;11.541954,150.323021], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag11, '1', 'input'}, [112.013893,9.576796;112.013893,157.738861], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag11, '2', 'input'}, [293.643585,-37.418882;293.643585,15.159988;132.013893,15.159988;132.013893,137.738861], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag0, '1', 'input'}, [70.595615,-22.418882], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag10, '2', 'input'}, [70.595615,62.783848;24.253662,62.783848;24.253662,130.323021], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag9, '1', 'input'}, [-61.541565,-145.340012], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'car_min_time_speed_vtarget_2');
scsm = set_diagram_context(scsm, {['engine_par=[a,b,c,q];',char(10),'T2=T(1);',char(10),'T3=T2+T(2);',char(10),'T4=T3+T(3);',char(10),'T5=T4+T(4);',char(10)]});
blk = instantiate_block('system/ActivationOperations/InitialEvent');
blk = set_block_origin(blk,[-113.738710,205.588125]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.749020,0.705882,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
[scsm, block_tag0] = add_block(scsm, blk, 'InitialEvent');
blk = instantiate_block('system/ActivationOperations/End');
blk = set_block_origin(blk,[281.098785,154.971330]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.job='''Stop''';
params.bmessage='''Request a stop.''';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'End_1');
blk = instantiate_block('system/SignalExporters/ToBase');
blk = set_block_origin(blk,[409.661148,202.881790]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.varname='''gear''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ToBase');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[207.477371,241.689522]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Mux');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[376.098785,223.689522]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'4','5'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Demux_2');
blk = instantiate_block('system/SignalExporters/ToBase');
blk = set_block_origin(blk,[409.661148,261.578367]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.varname='''T''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ToBase_1');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'car');
blk = set_block_origin(blk,[-104.138710,11.575218]);
blk = set_block_size(blk,[144.000000,144.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,4);
blk = set_block_evtnin (blk,5);
blk = set_block_evtnout (blk,0);
params=struct();
params.engine_par.rank=0;
params.engine_par.value='engine_par';
params.engine_par.prompt='Engine parameters';
params.engine_par.evaluate = 1;
params.engine_par.enable=1;
params.engine_par.visible=1;
params.engine_par.parameter_style= { 'entry', {}};
params.engine_par.callback= '';
params.engine_par.tabname= 'Parameters';
params.engine_par.tooltip= '';
params.engine_par.buttonimage= '';
params.engine_par.buttontext= '';
params.engine_par.buttontooltip= '';
params.engine_par.type= 'vector';
params.engine_par.dimensions= '[-1]';
params.engine_par.unit= '';
params.v0.rank=1;
params.v0.value='v0';
params.v0.prompt='Initial speed';
params.v0.evaluate = 1;
params.v0.enable=1;
params.v0.visible=1;
params.v0.parameter_style= { 'entry', {}};
params.v0.callback= '';
params.v0.tabname= 'Parameters';
params.v0.tooltip= '';
params.v0.buttonimage= '';
params.v0.buttontext= '';
params.v0.buttontooltip= '';
params.v0.type= 'scalar';
params.v0.dimensions= '[]';
params.v0.unit= '';
params.Torque.rank=2;
params.Torque.value='Torque';
params.Torque.prompt='Torque curve';
params.Torque.evaluate = 1;
params.Torque.enable=1;
params.Torque.visible=1;
params.Torque.parameter_style= { 'entry', {}};
params.Torque.callback= '';
params.Torque.tabname= 'Parameters';
params.Torque.tooltip= '';
params.Torque.buttonimage= '';
params.Torque.buttontext= '';
params.Torque.buttontooltip= '';
params.Torque.type= 'matrix';
params.Torque.dimensions= '[-1,-2]';
params.Torque.unit= '';
params.gear.rank=3;
params.gear.value='gear';
params.gear.prompt='Gear ratios';
params.gear.evaluate = 1;
params.gear.enable=1;
params.gear.visible=1;
params.gear.parameter_style= { 'entry', {}};
params.gear.callback= '';
params.gear.tabname= 'Parameters';
params.gear.tooltip= '';
params.gear.buttonimage= '';
params.gear.buttontext= '';
params.gear.buttontooltip= '';
params.gear.type= 'vector';
params.gear.dimensions= '[-1]';
params.gear.unit= '';
blk = set_block_mask(blk,params,'Simple car model');
blk = set_atomic_property(blk,0);
[scsm, block_tag6] = add_block(scsm, blk, 'car');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'HP-torque-rpm-curves');
blk = set_block_origin(blk,[130.803152,11.575218]);
blk = set_block_size(blk,[84.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag7] = add_block(scsm, blk, 'HP-torque-rpm-curves');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[399.177917,13.684875]);
blk = set_block_size(blk,[48.000000,96.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%3.2f''';
params.dt='1';
params.externalActivation='0';
params.showatend='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Display');
blk = instantiate_block('system/SignalGenerators/Time');
blk = set_block_origin(blk,[173.185379,175.023468]);
blk = set_block_size(blk,[36.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Time');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[203.098785,341.694702]);
blk = set_block_size(blk,[48.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='-vtarget';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Bias');
blk = instantiate_block('system/ActivationOperations/ZeroCrossUp');
blk = set_block_origin(blk,[271.098785,339.694702]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'ZeroCrossUp');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_ident (blk,'time');
blk = set_block_origin(blk,[393.177917,145.015678]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%g''';
params.dt='1';
params.externalActivation='0';
params.showatend='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'time');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[88.563858,101.575218]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/ActivationOperations/EventUnion');
blk = set_block_origin(blk,[281.098785,303.689522]);
blk = set_block_size(blk,[40.000000,10.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevin='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'EventUnion');
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[328.899719,339.694702]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevout='1';
params.etimes=struct('time',{{'100'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'EventGenerate');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'Constant_gear');
blk = set_block_origin(blk,[126.271576,244.689522]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='gear';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Constant_gear');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'constant_T');
blk = set_block_origin(blk,[132.271576,292.468460]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='T';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'constant_T');
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[-44.538710,203.588125]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.972549,0.803922,0.760784,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,4);
params=struct();
params.nevout='4';
params.etimes=struct('time',{{'T2','T3','T4','T5'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'EventGenerate_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'constant_gear');
blk = set_block_origin(blk,[314.980331,49.684875]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='gear';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'constant_gear');
blk = instantiate_block('system/Optimization/BobyqaOpt');
blk = set_block_origin(blk,[253.098785,217.689522]);
blk = set_block_size(blk,[96.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.847059,0.847059,0.847059,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.xL='.001*ones(9,1)';
params.xU='20*ones(9,1)';
params.RhoBeg='1e-1';
params.RhoEnd='1e-8';
params.Npt='-1';
params.MaxIter='500';
params.minmax='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'BobyqaOpt_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[130.803152,83.575218]);
blk = set_block_size(blk,[84.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'20','20'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[0,300]','[20,110]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Scope');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag20, '1', 'output'},{block_tag1, '1', 'input'}, [301.098785,204.971330], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag4, '1', 'input'}, [362.598785,271.689522;362.598785,253.689522], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag2, '1', 'input'}, [399.661148,238.689522], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [399.661148,268.689522], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag20, '2', 'input'}, [230.355438,193.023468;230.355438,235.689522], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '3', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '4', 'output'},{block_tag7, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '2', 'output'},{block_tag10, '1', 'input'}, [88.563858,359.694702], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag21, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag11, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag15, '1', 'output'},{block_tag14, '2', 'input'}, [311.098785,329.694702], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag3, '1', 'input'}, [187.689270,304.468460;187.689270,286.689522], false);
scsm=add_event_link(scsm,{block_tag18, '4', 'output'},{block_tag6, '5', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag18, '3', 'output'},{block_tag6, '4', 'input'}, [5.461290,172.023819;-3.338710,172.023819], false);
scsm=add_event_link(scsm,{block_tag18, '2', 'output'},{block_tag6, '3', 'input'}, [-14.538710,179.453022;-32.138710,179.453022], false);
scsm=add_event_link(scsm,{block_tag18, '1', 'output'},{block_tag6, '2', 'input'}, [-34.538710,186.389786;-60.938710,186.389786], false);
scsm=add_explicit_link(scsm,{block_tag20, '2', 'output'},{block_tag12, '1', 'input'}, [359.098785,163.015678], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[149.855225,380.933136]);
blk = set_block_size(blk,[60.000000,28.000000]);
params=struct();
  params.txt='speed';
blk = set_block_parameters (blk, params);
[scsm, block_tag22] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

car_min_time_speed_vtarget_2 = subsystem_1();
car_min_time_speed_vtarget_2 = set_model_workspace (car_min_time_speed_vtarget_2, {['v0=10/3.6;',char(10),'a=.004;',char(10),'b=0.005^2;',char(10),'c=.05;',char(10),'q=.003;',char(10),'Torque=[0,600,800,1000,2000,3000,4000,5000,6000,8000;0,10,40,100,200,280,360,350,200,0];',char(10),'vtarget=100;',char(10),'T=GetFromBase(''T'',ones(4,1)*4);',char(10),'gear=GetFromBase(''gear'',[3;2;1.5;1;.8]);',char(10)]});
car_min_time_speed_vtarget_2 = set_initial_time (car_min_time_speed_vtarget_2, '0');
car_min_time_speed_vtarget_2 = set_final_time (car_min_time_speed_vtarget_2, '100');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
car_min_time_speed_vtarget_2 = set_solver_parameters( car_min_time_speed_vtarget_2, tol);
car_min_time_speed_vtarget_2 = evaluate_model (car_min_time_speed_vtarget_2);
scsm = car_min_time_speed_vtarget_2;
