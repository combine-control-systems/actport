function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Crystallization model');
scsm = set_diagram_context(scsm, {['k1=(Hv*C_sat/(Hv-Hl))*(rho_c/rho_l-1+(rho_l*Hl-rho_c*Hc)/(rho_l*Hv))-rho_c/rho_l;',char(10),'k2=C_sat/(V*rho_l*(Hv-Hl));',char(10)]});
blk = instantiate_block('system/MatrixOperations/MatrixConcatenation');
blk = set_block_origin(blk,[-318.085693,46.500000]);
blk = set_block_size(blk,[84.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.method='''Vertical''';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'MatrixConcatenation');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-470.696381,43.500000]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1;2;3;4]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[-348.915184,-51.104958]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='1';
params.extractor=struct('index',{{'3'}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Extractor_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[35.066872,22.215663]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-390.696381,19.500000]);
blk = set_block_size(blk,[12.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.in_ports=struct('sgn',{{'''*''','''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Product_1_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[-204.498695,-51.104958]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='kv';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Gain_2');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'Concentration');
blk = set_block_origin(blk,[-8.676323,-58.104958]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='C0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Concentration');
blk = instantiate_block('system/Routing/Extractor');
blk = set_block_origin(blk,[-2.962734,154.519867]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.extractor=struct('index',{{'4','[1:4]'''}});
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Extractor');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[159.112030,137.519867]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='kb';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Gain_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_ident (blk,'B0');
blk = set_block_origin(blk,[235.750229,136.519867]);
blk = set_block_size(blk,[12.000000,84.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'B0');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_ident (blk,'moments');
blk = set_block_origin(blk,[-80.894871,160.519867]);
blk = set_block_size(blk,[24.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='mu0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'moments');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-31.490379,184.519867]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_11');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'Q');
blk = set_block_origin(blk,[-392.414482,-110.644493]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Q');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'C');
blk = set_block_origin(blk,[109.746124,71.642128]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'C');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'mu');
blk = set_block_origin(blk,[166.525238,236.511444]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'mu');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-363.928001,55.500000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-124.696396,148.519867]);
blk = set_block_size(blk,[12.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-226.921890,178.519867]);
blk = set_block_size(blk,[12.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Product_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-31.490379,246.511444]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Block_14');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-306.921890,178.519867]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='Fp/V';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Constant_2_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-149.687004,-57.104958]);
blk = set_block_size(blk,[12.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Product_2_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[80.173531,-22.784337]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'S');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[-283.242584,-21.104958]);
blk = set_block_size(blk,[36.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='k1';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Bias_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[-328.209236,-112.644493]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='k2';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Gain_2_3');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-99.475651,-91.104958]);
blk = set_block_size(blk,[12.000000,84.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.in_ports=struct('sgn',{{'''+''','''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Sum_4');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[-38.374327,-126.557472]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='-Fp/V';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Gain_2_4');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[-44.356634,-64.104958]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''/''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'Product_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[-178.406975,33.382088]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='kv';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Gain_2_5');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-89.928982,30.828491]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Sum_5');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-148.482430,63.828491]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[81.196815,-82.532349]);
blk = set_block_size(blk,[48.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='C_sat';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[106.601181,199.519867]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag31] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[295.518570,27.906505]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag32] = add_block(scsm, blk, 'Block_13');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[169.180285,7.906505]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='g';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag33] = add_block(scsm, blk, 'Gpower');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[229.180285,7.906505]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='kg';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag34] = add_block(scsm, blk, 'Gain');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[148.214920,7.215663]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag35] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'G');
blk = set_block_origin(blk,[369.746109,17.906505]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='3';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag36] = add_block(scsm, blk, 'G');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag0, '1', 'input'}, [283.092041,178.519867;283.092041,266.434387;-364.319824,266.434387;-364.319824,73.500000], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '1', 'input'}, [35.066872,-34.104958], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'output'},{block_tag13, '1', 'input'}, [35.066872,81.642128], false);
scsm=add_explicit_link(scsm,{block_tag3, '3', 'output'},{block_tag22, '1', 'input'}, [-324.572937,22.215663;-324.572937,-3.104958], false);
scsm=add_explicit_link(scsm,{block_tag7, '2', 'output'},{block_tag4, '1', 'input'}, [70.613365,169.519867;70.613365,124.142906;-437.821167,124.142906;-437.821167,79.500000], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag31, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag35, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag18, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '2', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag2, '1', 'input'}, [-363.928001,-39.104958], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag16, '2', 'input'}, [-218.271179,64.500000;-218.271179,166.519867], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '2', 'output'},{block_tag17, '1', 'input'}, [-292.054687,246.511444;-292.054688,214.519867], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag17, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag24, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag24, '2', 'input'}, [-132.587128,-100.644493;-132.587128,-49.104958], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag24, '3', 'input'}, [-113.546219,-108.557472;-113.546219,-77.104958], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag28, '2', 'input'}, [-99.928982,45.382088], false);
scsm=add_explicit_link(scsm,{block_tag29, '1', 'output'},{block_tag28, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag26, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag26, '1', 'input'}, [-54.356634,60.828491], false);
scsm=add_explicit_link(scsm,{block_tag30, '1', 'output'},{block_tag21, '2', 'input'}, [70.173531,-70.532349], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag9, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag31, '2', 'output'},{block_tag27, '1', 'input'}, [106.601181,111.518799;-192.844604,111.518799;-192.844604,45.382088], false);
scsm=add_explicit_link(scsm,{block_tag31, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag20, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag34, '1', 'output'},{block_tag32, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag32, '1', 'output'},{block_tag4, '3', 'input'}, [295.518570,-137.100906;-423.030823,-137.100906;-423.030823,31.500000], false);
scsm=add_explicit_link(scsm,{block_tag32, '2', 'output'},{block_tag8, '1', 'input'}, [295.518570,79.289406;149.112030,79.289406], false);
scsm=add_explicit_link(scsm,{block_tag33, '1', 'output'},{block_tag34, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag35, '2', 'output'},{block_tag33, '1', 'input'}, [148.214920,27.906505], false);
scsm=add_explicit_link(scsm,{block_tag35, '1', 'output'},{block_tag25, '1', 'input'}, [148.214920,-108.557472], false);
scsm=add_explicit_link(scsm,{block_tag32, '3', 'output'},{block_tag36, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[47.530930,51.227116]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='C';
blk = set_block_parameters (blk, params);
[scsm, block_tag37] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[37.012314,16.643497]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='C_sat';
blk = set_block_parameters (blk, params);
[scsm, block_tag38] = add_block(scsm, blk, 'Annotation_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[-409.142822,32.427746]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='G';
blk = set_block_parameters (blk, params);
[scsm, block_tag39] = add_block(scsm, blk, 'Annotation_2');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_4');
blk = set_block_origin(blk,[-439.786682,108.099831]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='mu_0:3';
blk = set_block_parameters (blk, params);
[scsm, block_tag40] = add_block(scsm, blk, 'Annotation_4');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_5');
blk = set_block_origin(blk,[192.594147,222.181137]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='mu_3';
blk = set_block_parameters (blk, params);
[scsm, block_tag41] = add_block(scsm, blk, 'Annotation_5');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2_1');
blk = set_block_origin(blk,[-338.363770,105.827354]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='B0';
blk = set_block_parameters (blk, params);
[scsm, block_tag42] = add_block(scsm, blk, 'Annotation_2_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_5_1');
blk = set_block_origin(blk,[-24.658651,116.691605]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='mu_3';
blk = set_block_parameters (blk, params);
[scsm, block_tag43] = add_block(scsm, blk, 'Annotation_5_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_3');
blk = set_block_origin(blk,[15.052994,-6.064026]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='C';
blk = set_block_parameters (blk, params);
[scsm, block_tag44] = add_block(scsm, blk, 'Annotation_3');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_5_1_1');
blk = set_block_origin(blk,[-273.298531,-32.242630]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='3G.mu_2';
blk = set_block_parameters (blk, params);
[scsm, block_tag45] = add_block(scsm, blk, 'Annotation_5_1_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_6');
blk = set_block_origin(blk,[275.948853,55.969261]);
blk = set_block_size(blk,[0.000000,0.000000]);
params=struct();
  params.txt='G';
blk = set_block_parameters (blk, params);
[scsm, block_tag46] = add_block(scsm, blk, 'Annotation_6');
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'batch_cryst_mesbah_opt_simp');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-251.429337,-298.499481]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='G_max';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Constant_3');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Crystallization model');
blk = set_block_origin(blk,[-295.496147,-178.891907]);
blk = set_block_size(blk,[120.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,0.752941,0.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag1] = add_block(scsm, blk, 'Crystallization model');
blk = instantiate_block('system/SignalGenerators/SignalGenerator');
blk = set_block_origin(blk,[-439.482788,-162.891907]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.572549,0.815686,0.313725,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xx='T_ind';
params.yy='Q_ind''';
params.typ='''double''';
params.outevent='0';
params.externalActivation='0';
params.Method='''Not_a_knot''';
params.Leftside='''Extrapolation''';
params.Rightside='''Extrapolation''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'SignalGenerator');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-135.217743,-295.499481]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[-59.267174,-285.499481]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='2';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Power');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[27.227913,-264.820663]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='Q_ind';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Constant_3_1');
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[127.145203,-247.540314]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.749020,0.749020,0.749020,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.nevout='1';
params.etimes=struct('time',{{'Tf'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'EventGenerate');
blk = instantiate_block('system/Dynamical/Integral');
blk = set_block_origin(blk,[20.382057,-354.769073]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.reinit='0';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}},'zcross',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Integral');
blk = instantiate_block('system/SignalExporters/ToBase');
blk = set_block_origin(blk,[237.063568,-314.769073]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,0.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.varname='''Q_ind''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'ToBase');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[167.145203,-260.805603]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/ActivationOperations/End');
blk = set_block_origin(blk,[147.145203,-415.888809]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.749020,0.749020,0.749020,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.job='''Stop''';
params.bmessage='''Request a stop.''';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'End_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-347.796539,-142.891907]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-155.356945,-166.891907]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Optimization/BobyqaOpt');
blk = set_block_origin(blk,[127.145203,-339.769073]);
blk = set_block_size(blk,[80.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.749020,0.749020,0.749020,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.xL='9';
params.xU='13';
params.RhoBeg='1e-1';
params.RhoEnd='1e-8';
params.Npt='-1';
params.MaxIter='5000';
params.minmax='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'BobyqaOpt_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Heat Input');
blk = set_block_origin(blk,[-329.752472,-279.374756]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[8,14]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Heat Input');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Growth Rate');
blk = set_block_origin(blk,[-77.307568,-186.891907]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[1e-8,6e-8]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Growth Rate');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '3', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag4, '1', 'input'}, [-69.267174,-265.499481], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag13, '1', 'input'}, [97.227913,-294.769073], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag13, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '1', 'input'}, [7.557442,-265.499481;7.557442,-324.769073], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag9, '2', 'output'},{block_tag8, '1', 'input'}, [267.063568,-260.805603], false);
scsm=add_event_link(scsm,{block_tag9, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag10, '1', 'input'}, [167.145203,-365.888809], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag14, '1', 'input'}, [-347.796539,-259.374756], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '2', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag3, '1', 'input'}, [-155.356945,-250.499481], false);
out_1 = scsm;
end

batch_cryst_mesbah_opt_simp = subsystem_1();
batch_cryst_mesbah_opt_simp = set_model_workspace (batch_cryst_mesbah_opt_simp, {['C_sat=0.46;',char(10),'g=1;',char(10),'Hc=60.75;',char(10),'Hl=69.86;',char(10),'Hv=2.59e3;',char(10),'kv=0.43;',char(10),'kb=1.02e14;',char(10),'kg=7.5e-5;',char(10),'Fp=1.73e-6;',char(10),'V=7.5e-2;',char(10),'rho_c=1767.35;',char(10),'rho_l=1248.93;',char(10),char(10),'C0=C_sat+4.8e-8/kg;',char(10),'mu0=[.1e11;.3e6;400;0.1;.2e-4];',char(10),'Q=9;',char(10),char(10),'Tf=10000;',char(10),'T_ind=[0:20:Tf];',char(10),'Q_ind=GetFromBase(''Q_ind'',ones(size(T_ind))''*9.5);',char(10),'G_max=2.5e-8;',char(10)]});
batch_cryst_mesbah_opt_simp = set_initial_time (batch_cryst_mesbah_opt_simp, '0');
batch_cryst_mesbah_opt_simp = set_final_time (batch_cryst_mesbah_opt_simp, 'Tf');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
batch_cryst_mesbah_opt_simp = set_solver_parameters( batch_cryst_mesbah_opt_simp, tol);
batch_cryst_mesbah_opt_simp = evaluate_model (batch_cryst_mesbah_opt_simp);
scsm = batch_cryst_mesbah_opt_simp;
