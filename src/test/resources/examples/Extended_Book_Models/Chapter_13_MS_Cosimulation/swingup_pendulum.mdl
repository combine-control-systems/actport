//////////////////////////////////////////////////////////////////////
 Altair HyperWorks

 Version : HWVERSION_11.0.0.120-HWDesktop_Mar  2 2012_12:53:03

 Model : Pendulum Model

 Customer ID : 

 Date : 07/12/12 16:46:52
//////////////////////////////////////////////////////////////////////

*BeginMDL( pendulum, "Pendulum Model", "11.0.0.120-HWDesktop" )

  *StandardInclude(FILE)
  *SetCurrentSolverMode(MotionSolve)
  *Point( p_cart_cm, "Cart_pendumlum pivot Point" )
  *Point( p_pendu_cm, "Pendulum CM" )
  *Point( p_palt_cm, "Platform center" )
  *Point( p_cart_1, "Cart point 1" )
  *Point( p_cart_2, "Cart point 2" )
  *Body( b_link, "Ball", p_pendu_cm, , , ,  )
  *Body( b_cart, "Cart", p_cart_cm, , , ,  )
  *Body( b_plat, "Platform", p_palt_cm, , , ,  )
  *Point( p_plat_1, "Platform point 1" )
  *Point( p_plat_2, "Platform point 2" )
  *Graphic( gr_sphere, "pendulum sphere graphic", SPHERE, b_link, p_pendu_cm, 1 )
  *Graphic( gr_link, "pendulum link graphic", CYLINDER, b_link, p_cart_cm, POINT, p_pendu_cm, 0.5, gr_link.r1, , 0.0, CAPBOTH )
  *Graphic( gr_cart, "Cart graphic", BOX, b_cart, CENTER, p_cart_cm, YZ, POINT, p_cart_1, POINT, p_cart_2, 4, 4, 4 )
  *Graphic( gr_plat, "Platform graphic", BOX, b_plat, CENTER, p_palt_cm, YZ, POINT, p_plat_1, POINT, p_plat_2, 20, 40, 3.9 )
  *RevJoint( j_joint, "Mass-Cart-Joint", b_cart, b_link, p_cart_cm, VECTOR, V_Global_X )
  *Output( o_pendu, "Disp Output", DISP, BODY, b_link, Global_Frame, BOTH_MARKERS )
  *Output( o_cart, "Disp cart", DISP, BODY, b_cart, Global_Frame, BOTH_MARKERS )
  *FixedJoint( j_ground_paltfprm, "Platform fixing", b_plat, B_Ground, p_plat_1 )
  *TransJoint( j_plat_cart, "Joint platform_cart", b_plat, b_cart, p_palt_cm, VECTOR, V_Global_Y )
  *ActionOnlyForce( frc_cart, "Force 0", TRANS, MODEL.b_cart, p_cart_cm, m_plat )
  *SolverArray( sa_out, "SolverArray output", PLANT_OUTPUT, USE_IN_STATEMATRIX, MODEL.sv_theta, MODEL.sv_omega, MODEL.sv_cy )
  *SolverArray( sa_in, "SolverArray input", PLANT_INPUT, USE_IN_STATEMATRIX, MODEL.sv_fy )
  *SolverVariable( sv_fy, "force y" )
  *SolverVariable( sv_cy, "cart y" )
  *SolverVariable( sv_theta, "angle_ball_globalz" )
  *Marker( m_plat, "Platform coordinate", b_cart, p_palt_cm )
  *Template( tmplt_0, "Template 0", SOLVER_INPUT, def_tmplt_0 )
  *Output( o_theta, "Theta", EXPR, `{j_joint.AZ}`, `DY({b_cart.cm.idstring},{b_plat.cm.idstring})`, 0, 0, 0, `0` )
  *SolverVariable( sv_omega, "omega_ball_globalz" )
  *SetSolverArray( sa_out,                     0, false, 0, false, 0 )
  *SetPoint( p_palt_cm,                  0, 5, 1 )
  *SetBodyInertia( b_plat,                     1000000, 100000, 100000, 100000, 0, 0, 0 )
  *SetGraphicAttributes( gr_sphere,                  TRANSPARENT )
  *SetGraphicAttributes( gr_link,                    TRANSPARENT )
  *SetGraphicAttributes( gr_cart,                    TRANSPARENT )
  *SetGraphicAttributes( gr_plat,                    TRANSPARENT )
  *SetEntityId2( o_cart,                     70000003 )
  *SetEntityId( o_pendu,                    70000000 )
  *SetEntityId2( o_pendu,                    70000001 )
  *SetEntityId( o_cart,                     70000002 )
  *SetSolverArray( sa_in,                      0, false, 0, false, 0 )
  *SetForce( frc_cart,                   LIN, , EXPR, `pinval({sa_in.idstring},2)`, EXPR, `pinval({sa_in.idstring},1)` )
  *SetPoint( p_cart_2,                   0, 7, 5+2*tan(0) )
  *SetPoint( p_cart_1,                   0, 3, 5-2*tan(0) )
  *SetPoint( p_plat_2,                   0, 20, 1+15*tan(0) )
  *SetPoint( p_plat_1,                   0, 0, 1-5*tan(0) )
  *SetOrientation( m_plat,                     TWOAXES, ZX, DXDYDZ, 0, -sin(0), cos(0), DXDYDZ, cos(0) )
  *SetJointIC( j_joint,                    ROT, 0.36 )
  *SetOption( DS_Units.op_length,         "METER" )
  *SetReal( DS_Gravity.kgrav,           -9.81 )
  *SetReal( DS_MotionSolve_Transient_Simopts.h_max,       0.01 )
  *SetReal( DS_MotionSolve_Transient_Simopts.integr_tol,       0.0001 )
  *SetJointICFlag( j_joint,                    ROT, false )
  *SetForce( frc_cart,                   LIN, , LIN, 0.0, LIN )
  *SetSolverVariable( sv_cy,                      EXPR, `DY({b_cart.cm.idstring},{b_plat.cm.idstring})`, OFF )
  *SetSolverVariable( sv_fy,                      EXPR, `pinval({sa_in.idstring},1)`, OFF )
  *SetOption( DS_MotionSolve_Simopts.analysis_type,       "Transient" )
  *SetReal( DS_MotionSolve_Simopts.end_time,       25 )
  *SetBodyInertia( b_cart,                     10, 0, 0, 0, 0, 0, 0 )
  *SetBodyInertia( b_link,                     3, 226, 226, 226, 0, 0, 0 )
  *SetForce( frc_cart,                   LIN, , EXPR, `varval({sv_fy.idstring})`, LIN )
  *SetSolverVariable( sv_fy,                      LIN, , OFF )
  *SetPoint( p_cart_cm,                  0, 5, 5 )
  *SetActiveAnalysis( NONE )
  *SetSolverVariable( sv_omega,                   EXPR, `{j_joint.WZ}`, OFF )
  *SetSolverVariable( sv_theta,                   EXPR, `{j_joint.AZ}+3.1416`, OFF )
  *SetPoint( p_pendu_cm,                 0, 5.00001, -10 )
  *DefineTemplate( def_tmplt_0 )

  *EndDefine()
*EndMDL()

