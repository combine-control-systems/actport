function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Controller');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[519.425501,-157.551865]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.760784,0.835294,0.603922,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='1';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ConditionalSelect');
blk = instantiate_block('system/Hybrid/Saturation');
blk = set_block_origin(blk,[488.460231,-272.733079]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.upper='um';
params.lower='-um';
params.zc='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Saturation');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[252.539980,-172.453033]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.592157,0.713725,0.847059,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='-1';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Switch2_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'Mode 3: Maximum input force');
blk = set_block_origin(blk,[407.891478,-109.296094]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='um';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Mode 3: Maximum input force');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'Mode 4 force');
blk = set_block_origin(blk,[-173.421997,-276.733079]);
blk = set_block_size(blk,[636.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.925490,0.874510,0.913725,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''-( (-sin(u1)-u2)*( (J+m*l^2)*(M+m)- m*l*cos(u1)*m*l*cos(u1) )- (m+M)*m*l*g*sin(u1))/m/l/cos(u1)-m*l*u2*u2*sin(u1)''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Mode 4 force');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[620.868046,-286.066412]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.980392,0.792157,0.639216,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='0.5';
params.nzz='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Switch2_1_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_ident (blk,'Mode 2 force');
blk = set_block_origin(blk,[167.720932,-124.461701]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='um';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Mode 2 force');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_ident (blk,'Mode 1: Maximum input (negative)');
blk = set_block_origin(blk,[76.677724,-190.127499]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='-um';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mode 1: Maximum input (negative)');
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_ident (blk,'k*Beta');
blk = set_block_origin(blk,[-167.219210,-128.449410]);
blk = set_block_size(blk,[276.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.749020,0.749020,0.749020,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.work='getcurrentenv()';
params.exx='''(J*u2*u2/2+m*g*l*(cos(u1)-1))*u2*cos(u1)*k''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'k*Beta');
blk = instantiate_block('system/Hybrid/Hysteresis');
blk = set_block_origin(blk,[183.323233,-351.917489]);
blk = set_block_size(blk,[65.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.high_lim='0.997';
params.low_lim='0.9166';
params.out_high='1';
params.out_low='-1';
params.initout='1';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Hysteresis_1');
blk = instantiate_block('system/MathOperations/TrigFunc');
blk = set_block_origin(blk,[55.418837,-351.917489]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''cos''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'TrigFun');
blk = instantiate_block('system/Ports/Input');
blk = set_block_ident (blk,'System States');
blk = set_block_origin(blk,[-257.839600,-262.733079]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'System States');
blk = instantiate_block('system/Ports/Output');
blk = set_block_ident (blk,'Control Force');
blk = set_block_origin(blk,[763.931446,-276.066412]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Control Force');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-182.369080,-252.733079]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[125.050789,-104.461701]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[125.582067,-109.227982]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Split_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-171.788025,-381.917489]);
blk = set_block_size(blk,[10.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-183.421997,-252.733079]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_1');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [509.425504,-89.296094], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '3', 'input'}, [322.539980,-150.885194], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag5, '3', 'input'}, [589.425501,-279.399745], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag2, '1', 'input'}, [230.797624,-104.461695;230.797624,-122.453055], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag2, '3', 'input'}, [242.539980,-170.127499], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '2', 'input'}, [557.251160,-331.917489;557.251160,-266.066412], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag14, '1', 'input'}, [118.780787,-104.460281], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '2', 'output'},{block_tag8, '1', 'input'}, [-182.369080,-104.449410], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag15, '1', 'input'}, [125.582067,-104.461701], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag0, '2', 'input'}, [125.582067,-56.517212;346.434784,-56.517212;346.434784,-137.551865], false);
scsm=add_explicit_link(scsm,{block_tag15, '2', 'output'},{block_tag2, '2', 'input'}, [125.582067,-142.453033], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag16, '1', 'input'}, [-181.788025,-252.733079], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_1');
blk = set_block_origin(blk,[577.742416,-288.847275]);
blk = set_block_size(blk,[186.000000,28.000000]);
params=struct();
  params.txt='Check control modes 2 and 4';
blk = set_block_parameters (blk, params);
[scsm, block_tag18] = add_block(scsm, blk, 'Annotation_1');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[205.785019,-174.530548]);
blk = set_block_size(blk,[178.000000,28.000000]);
params=struct();
  params.txt='Check control modes 1 vs 2';
blk = set_block_parameters (blk, params);
[scsm, block_tag19] = add_block(scsm, blk, 'Annotation');
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation_2');
blk = set_block_origin(blk,[469.337311,-160.648575]);
blk = set_block_size(blk,[178.000000,28.000000]);
params=struct();
  params.txt='Check control modes 2 vs 3';
blk = set_block_parameters (blk, params);
[scsm, block_tag20] = add_block(scsm, blk, 'Annotation_2');
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'swingup_pendulum');
scsm = set_diagram_context(scsm, {['x0=[0;0;0;0];',char(10),'A=[-4.,1.,0.,0.;-12.631899,-12.154944,-0.1019368,-0.4077472;-0.8213023,0.,-5.,1.;170.99537,243.09888,-3.961264,8.1549439];',char(10),'B=[4.,0.;4.5931628,0.;0.8213023,5.;-0.4106512,6.];',char(10),'C=[1855.8582,2613.3129,21.916412,87.665647];',char(10),'D=[0.,0.];',char(10),char(10),'M=10;',char(10),'m=3;',char(10),'L=30;',char(10),'g=9.81;',char(10),'ph=0.0;',char(10),'um=40;',char(10),'k=80;',char(10),'z0=0;',char(10),'ThetaSw=10*pi/180;',char(10),char(10),char(10),'J=m*L*L/12;',char(10),'l=L/2;',char(10)]});
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[735.395783,-295.669237]);
blk = set_block_size(blk,[22.871399,48.212589]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[713.461474,-251.712164]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Split_5');
blk = instantiate_block('system/ActivationOperations/EventClock');
blk = set_block_origin(blk,[799.378408,-199.026631]);
blk = set_block_size(blk,[50.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.period='0.1';
params.init='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventClock_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[804.450639,-290.492079]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.392157,0.301961,0.501961,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='4';
params.externalActivation='1';
params.winSize='[500,600]';
params.winPos='[300,200]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''Pendulum angle''','''Pendulum Angular Velocity''','''Cart Position''','''Applied Force'''}},'reverseColor',{{'0','0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]','[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''','''''',''''''}},'color',{{'0','0','0','0'}},'marker',{{'0','0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[478.629517,-251.712164]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/CoSimulation/MotionSolve');
blk = set_block_ident (blk,'MotionSolve');
blk = set_block_origin(blk,[552.062531,-271.712164]);
blk = set_block_size(blk,[75.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.xml='''swingup_pendulum.mdl''';
params.mrf='''swingup_pendulum.mrf''';
params.usub='''''';
params.nin='1';
params.inports=struct('label',{{'''SolverArray input'''}},'rowsize',{{'1'}});
params.nout='1';
params.outports=struct('label',{{'''SolverArray output'''}},'rowsize',{{'3'}});
params.depu='0';
params.msip='''''';
params.msport='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MotionSolve');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'Controller');
blk = set_block_origin(blk,[240.329863,-341.712164]);
blk = set_block_size(blk,[204.000000,180.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag6] = add_block(scsm, blk, 'Controller');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '1', 'input'}, [781.403856,-255.492079], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'output'},{block_tag3, '2', 'input'}, [774.748993,-271.562942;774.748993,-265.492079], false);
scsm=add_explicit_link(scsm,{block_tag0, '3', 'output'},{block_tag3, '3', 'input'}, [788.733246,-287.633804;788.733246,-275.492079], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '1', 'input'}, [824.378408,-224.759355;824.450639,-224.759355], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [724.482360,-251.712164;724.482360,-271.562942], false);
scsm=add_explicit_link(scsm,{block_tag1, '2', 'output'},{block_tag6, '1', 'input'}, [713.461474,-366.663574;223.746780,-366.663574;223.746780,-251.712164], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'output'},{block_tag3, '4', 'input'}, [478.629517,-313.062042;794.450639,-313.062042], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
out_1 = scsm;
end

swingup_pendulum = subsystem_1();
swingup_pendulum = set_model_workspace (swingup_pendulum, {''});
swingup_pendulum = set_initial_time (swingup_pendulum, '0');
swingup_pendulum = set_final_time (swingup_pendulum, '40');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0.01'};
swingup_pendulum = set_solver_parameters( swingup_pendulum, tol);
swingup_pendulum = evaluate_model (swingup_pendulum);
scsm = swingup_pendulum;
