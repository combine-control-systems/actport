function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'PSD');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MatrixOperations/FFT');
blk = set_block_origin(blk,[119.500015,-55.500000]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.algo='''FFTW''';
params.direction='''FFT''';
params.nonpow2='''Zero-padding''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'FFT');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[331.500000,-50.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='2';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Power');
blk = instantiate_block('system/MathOperations/Abs');
blk = set_block_origin(blk,[235.500015,-50.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.zcross='1';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Abs');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[431.500000,-48.500000]);
blk = set_block_size(blk,[72.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='2/(Fs*N)';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Gain');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-0.499985,-40.500000]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[603.500000,-40.500000]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Output');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'filterPSD');
scsm = set_diagram_context(scsm, {['Fs=10000;',char(10),'[num,den]=cheby2(3,20, 2000/5000);',char(10),'N=1024;',char(10)]});
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-340.500000,-50.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='2*pi*1000';
params.P='0';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SineWaveGenerator');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-340.500000,11.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='0';
params.B='1';
params.seed='21148';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-350.500000,102.500000]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='1/Fs';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-242.500000,-60.500000]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.in_ports=struct('sgn',{{'''+''','''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-340.500000,-117.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='2*pi*3000';
params.P='0';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'SineWaveGenerator_1');
blk = instantiate_block('system/Dynamical/DiscrTransFunc');
blk = set_block_origin(blk,[-168.891579,-60.500000]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.num='num';
params.den='den';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'DiscrTransFunc');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-320.500000,77.500015]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Buffers/Buffer');
blk = set_block_origin(blk,[-69.728562,-55.500000]);
blk = set_block_size(blk,[50.000000,50.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,1);
params=struct();
params.bufferlength='N';
params.reverseBuffer='0';
params.circularBuffer='0';
params.initialoutput='0';
params.feedthrough='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Buffer');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-138.891579,77.500015]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/MatrixOperations/MatrixExtractor');
blk = set_block_origin(blk,[83.932786,-50.500000]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.extractx=struct('x_selectall','1','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','0','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}},'x_osz',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}},'x_osz',{{}});
params.x_starting_index_port=struct('x_osz',{{}});
params.x_starting_index_portdecreasing=struct('x_osz',{{}});
params.extracty=struct('y_selectall','0','y_vectorindex','1','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','0','y_startingindexport','0','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{'[1:N/2+1]'}});
params.y_starting_index=struct('y_si',{{}},'y_osz',{{}});
params.y_starting_indexdecreasing=struct('y_si',{{}},'y_osz',{{}});
params.y_starting_index_port=struct('y_osz',{{}});
params.y_starting_index_portdecreasing=struct('y_osz',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'MatrixExtractor');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'PSD');
blk = set_block_origin(blk,[15.602540,-50.500000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag10] = add_block(scsm, blk, 'PSD');
blk = instantiate_block('system/MatrixOperations/Transpose');
blk = set_block_origin(blk,[205.040329,-50.500000]);
blk = set_block_size(blk,[70.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''Hermitian(Transpose-Conjugate)''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Transpose');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[192.040329,-105.223519]);
blk = set_block_size(blk,[96.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[0:Fs/N:Fs/2]''';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/ActivationOperations/ReSampleClock');
blk = set_block_origin(blk,[-20.978577,23.750008]);
blk = set_block_size(blk,[70.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,1);
params=struct();
params.up='1';
params.down='N';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'ReSampleClock');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-57.228562,77.500015]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/SignalViewers/VectorScope');
blk = set_block_origin(blk,[339.040298,-97.223519]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
params.externalX='1';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xInterval='[NaN,NaN]';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'VectorScope');
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [-271.500000,31.500000;-271.500000,-10.500000], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag3, '3', 'input'}, [-271.500000,-97.500000;-271.500000,-50.500000], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '2', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag6, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag8, '2', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag15, '1', 'input'}, [309.040313,-30.500000;309.040313,-67.223519], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag15, '2', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag13, '1', 'output'},{block_tag7, '2', 'input'}, [14.021423,9.125004;-32.228562,9.125004], false);
scsm=add_event_link(scsm,{block_tag14, '2', 'output'},{block_tag13, '1', 'input'}, [14.021423,77.500015], false);
scsm=add_event_link(scsm,{block_tag14, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
out_1 = scsm;
end

filterPSD = subsystem_1();
filterPSD = set_model_workspace (filterPSD, {''});
filterPSD = set_initial_time (filterPSD, '0');
filterPSD = set_final_time (filterPSD, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
filterPSD = set_solver_parameters( filterPSD, tol);
filterPSD = evaluate_model (filterPSD);
scsm = filterPSD;
