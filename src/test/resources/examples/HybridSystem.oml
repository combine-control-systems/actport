function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'HybridSystem');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[-223.803772,-41.508694]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='1';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'DiscreteDelay');
blk = instantiate_block('system/Dynamical/DiscreteDelay');
blk = set_block_origin(blk,[-83.803776,-41.508694]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.init_cond='0';
params.typ='''double''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'DiscreteDelay_1');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-233.803772,87.491302]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='1/2000';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-203.803772,58.491306]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/Dynamical/ContTransFunc');
blk = set_block_origin(blk,[-136.803772,-152.325135]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.num='1';
params.den='[0.2,1]';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ContTransFunc');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-254.200607,-67.325135]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[21.196224,-11.508694]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[82.333069,-41.508694]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='0';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag6, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '2', 'output'},{block_tag1, '1', 'input'}, [-63.803776,58.491306], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'output'},{block_tag4, '1', 'input'}, [-254.200607,-122.325135], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag0, '1', 'input'}, [-254.200607,-11.508694], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag5, '1', 'input'}, [21.196224,-67.325135], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag7, '2', 'input'}, [48.868706,-122.325135;48.868706,-31.508694], false);
out_1 = scsm;
end

HybridSystem = subsystem_1();
HybridSystem = set_model_workspace (HybridSystem, {''});
HybridSystem = set_initial_time (HybridSystem, '0');
HybridSystem = set_final_time (HybridSystem, '2');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
HybridSystem = set_solver_parameters( HybridSystem, tol);
HybridSystem = evaluate_model (HybridSystem);
scsm = HybridSystem;
