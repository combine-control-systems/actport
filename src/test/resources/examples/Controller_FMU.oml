function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'controller');
scsm = set_diagram_context(scsm, {['A=[-0.3,3,1;0,0,2;0,0,0];',char(10),'B=[1;2;3];',char(10),'C=[1,1,2;0,2,3];',char(10),'D=0;',char(10),'x0=[-2;1;2];',char(10),'K=[0.1834511,-0.0635571;0.0556004,0.5931633;0.0409687,0.0975615];',char(10),'L=[-0.0041585,-0.1489701,-0.4993004];',char(10)]});
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[309.918701,-275.734650]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='C';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'MatrixGain');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[292.415619,-255.734650]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[183.163330,-275.734650]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A';
params.B='B';
params.C='eye(size(A))';
params.D='zeros(size(B))';
params.x0='x0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ContStateSpace_1_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[122.938644,-265.734650]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'regular_in_port');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[431.918701,-265.734650]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'regular_out_port');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[317.304016,-332.797546]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'regular_out_port_1');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '2', 'output'},{block_tag5, '1', 'input'}, [292.416226,-322.798694], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_3 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'FMU ME');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-306.625183,104.534698]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-306.625183,36.534698]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Mux_2');
blk = instantiate_block('system/CoSimulation/FMU');
blk = set_block_origin(blk,[-687.625214,52.334698]);
blk = set_block_size(blk,[312.000000,96.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,5);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.FMUfilename='''sb_controller.fmu''';
params.NX='3';
params.NZ='0';
params.nin='1';
params.inports=struct('name',{{'''regular_in_port'''}},'description',{{'''index:48 ,input variable'''}},'it',{{'''fmiReal'''}},'dodependency',{{'0'}});
params.nout='5';
params.outports=struct('name',{{'''regular_out_port(1,1)''','''regular_out_port(2,1)''','''regular_out_port_1(1,1)''','''regular_out_port_1(2,1)''','''regular_out_port_1(3,1)'''}},'description',{{'''index:43 ,output variable(1,1)''','''index:44 ,output variable(2,1)''','''index:45 ,output variable(1,1)''','''index:46 ,output variable(2,1)''','''index:47 ,output variable(3,1)'''}},'ot',{{'''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal'''}});
params.nparam='39';
params.params=struct('name',{{'''(4,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,3)''','''(2,3)''','''(1,3)''','''(3,2)''','''(2,2)''','''(1,2)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,3)''','''(2,3)''','''(1,3)''','''(3,2)''','''(2,2)''','''(1,2)''','''(3,1)''','''(2,1)''','''(1,1)''','''Opar(3)''','''Opar(2)''','''(2,3)''','''(1,3)''','''(2,2)''','''(1,2)''','''(2,1)''','''(1,1)''','''state[2]''','''state[1]''','''state[0]'''}},'description',{{'''index:1 ,parameter variable''','''index:2 ,parameter variable''','''index:3 ,parameter variable''','''index:4 ,parameter variable''','''index:5 ,parameter variable''','''index:6 ,parameter variable''','''index:7 ,parameter variable''','''index:8 ,parameter variable''','''index:9 ,parameter variable''','''index:10 ,parameter variable''','''index:11 ,parameter variable''','''index:12 ,parameter variable''','''index:13 ,parameter variable''','''index:14 ,parameter variable''','''index:15 ,parameter variable''','''index:16 ,parameter variable''','''index:17 ,parameter variable''','''index:18 ,parameter variable''','''index:19 ,parameter variable''','''index:20 ,parameter variable''','''index:21 ,parameter variable''','''index:22 ,parameter variable''','''index:23 ,parameter variable''','''index:24 ,parameter variable''','''index:25 ,parameter variable''','''index:26 ,parameter variable''','''index:27 ,parameter variable''','''index:28 ,parameter variable''','''index:29 ,parameter variable''','''index:30 ,parameter variable''','''index:31 ,parameter variable''','''index:32 ,parameter variable''','''index:33 ,parameter variable''','''index:34 ,parameter variable''','''index:35 ,parameter variable''','''index:36 ,parameter variable''','''index:37 ,local variable''','''index:39 ,local variable''','''index:41 ,local variable'''}},'tp',{{'''fmiInteger''','''fmiInteger''','''fmiInteger''','''fmiInteger''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiInteger''','''fmiInteger''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal'''}},'unit',{{'''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''',''''''}},'value',{{'1','2','1','1','0.','0.','0.','1.','0.','0.','0.','1.','0.','0.','0.','1.','3.','2.','1.','0.','2.','1.','0.','0.','3.','0.','0.','-0.3','0','1','3.','2.','2.','1.','0.','1.','2.','1.','-2.'}},'defvalue',{{'1','2','1','1','0.','0.','0.','1.','0.','0.','0.','1.','0.','0.','0.','1.','3.','2.','1.','0.','2.','1.','0.','0.','3.','0.','0.','-0.3','0','1','3.','2.','2.','1.','0.','1.','2.','1.','-2.'}},'reference',{{'5','4','3','2','41','40','39','38','37','36','35','34','33','32','31','30','29','28','27','26','25','24','23','22','21','20','19','18','1','0','17','16','15','14','13','12','10','8','6'}});
params.run_as_me='1';
params.tolerancecontrolled='1';
params.deleteafteruse='1';
params.inevent='0';
params.outevent='0';
params.resources='''''';
params.tempdir='''''';
params.simloglevel='''Warning''';
params.enable_fmulogging='1';
params.fmulogging_cats='''''';
params.log_file_name='''''';
params.csv=''';''';
params.out_enum_as_int_flag='1';
params.log_only_outputs='1';
params.result_file='''''';
params.stepevent='1';
params.stateevent='1';
params.timeevent='1';
params.OutputOn='0';
params.meshpoints='1';
params.superdensetimes='1';
params.fixedComStepsize='0.0';
params.provideDerivative='0';
params.exploitOutDerivative='1';
params.visible='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'FMU');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-783.875244,90.334698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[-231.875214,124.534698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[-231.875214,56.534698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Output_1');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '1', 'input'}, [-341.125198,138.734698;-341.125198,149.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '3', 'output'},{block_tag1, '1', 'input'}, [-322.125183,100.334698;-322.125183,86.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '4', 'output'},{block_tag1, '2', 'input'}, [-337.125183,81.134698;-337.125183,66.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '5', 'output'},{block_tag1, '3', 'input'}, [-357.125183,61.934698;-357.125183,46.534698], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_4 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'FMU CS');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-306.625183,104.534698]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-306.625183,36.534698]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.inports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Mux_2');
blk = instantiate_block('system/CoSimulation/FMU');
blk = set_block_origin(blk,[-687.625214,52.334698]);
blk = set_block_size(blk,[312.000000,96.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,5);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.FMUfilename='''sb_controller.fmu''';
params.NX='0';
params.NZ='0';
params.nin='1';
params.inports=struct('name',{{'''regular_in_port'''}},'description',{{'''index:48 ,input variable'''}},'it',{{'''fmiReal'''}},'dodependency',{{'0'}});
params.nout='5';
params.outports=struct('name',{{'''regular_out_port(1,1)''','''regular_out_port(2,1)''','''regular_out_port_1(1,1)''','''regular_out_port_1(2,1)''','''regular_out_port_1(3,1)'''}},'description',{{'''index:43 ,output variable(1,1)''','''index:44 ,output variable(2,1)''','''index:45 ,output variable(1,1)''','''index:46 ,output variable(2,1)''','''index:47 ,output variable(3,1)'''}},'ot',{{'''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal'''}});
params.nparam='39';
params.params=struct('name',{{'''(4,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,3)''','''(2,3)''','''(1,3)''','''(3,2)''','''(2,2)''','''(1,2)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,1)''','''(2,1)''','''(1,1)''','''(3,3)''','''(2,3)''','''(1,3)''','''(3,2)''','''(2,2)''','''(1,2)''','''(3,1)''','''(2,1)''','''(1,1)''','''Opar(3)''','''Opar(2)''','''(2,3)''','''(1,3)''','''(2,2)''','''(1,2)''','''(2,1)''','''(1,1)''','''state[2]''','''state[1]''','''state[0]'''}},'description',{{'''index:1 ,parameter variable''','''index:2 ,parameter variable''','''index:3 ,parameter variable''','''index:4 ,parameter variable''','''index:5 ,parameter variable''','''index:6 ,parameter variable''','''index:7 ,parameter variable''','''index:8 ,parameter variable''','''index:9 ,parameter variable''','''index:10 ,parameter variable''','''index:11 ,parameter variable''','''index:12 ,parameter variable''','''index:13 ,parameter variable''','''index:14 ,parameter variable''','''index:15 ,parameter variable''','''index:16 ,parameter variable''','''index:17 ,parameter variable''','''index:18 ,parameter variable''','''index:19 ,parameter variable''','''index:20 ,parameter variable''','''index:21 ,parameter variable''','''index:22 ,parameter variable''','''index:23 ,parameter variable''','''index:24 ,parameter variable''','''index:25 ,parameter variable''','''index:26 ,parameter variable''','''index:27 ,parameter variable''','''index:28 ,parameter variable''','''index:29 ,parameter variable''','''index:30 ,parameter variable''','''index:31 ,parameter variable''','''index:32 ,parameter variable''','''index:33 ,parameter variable''','''index:34 ,parameter variable''','''index:35 ,parameter variable''','''index:36 ,parameter variable''','''index:37 ,local variable''','''index:39 ,local variable''','''index:41 ,local variable'''}},'tp',{{'''fmiInteger''','''fmiInteger''','''fmiInteger''','''fmiInteger''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiInteger''','''fmiInteger''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal''','''fmiReal'''}},'unit',{{'''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''','''''',''''''}},'value',{{'1','2','1','1','0.','0.','0.','1.','0.','0.','0.','1.','0.','0.','0.','1.','3.','2.','1.','0.','2.','1.','0.','0.','3.','0.','0.','-0.3','0','1','3.','2.','2.','1.','0.','1.','2.','1.','-2.'}},'defvalue',{{'1','2','1','1','0.','0.','0.','1.','0.','0.','0.','1.','0.','0.','0.','1.','3.','2.','1.','0.','2.','1.','0.','0.','3.','0.','0.','-0.3','0','1','3.','2.','2.','1.','0.','1.','2.','1.','-2.'}},'reference',{{'5','4','3','2','41','40','39','38','37','36','35','34','33','32','31','30','29','28','27','26','25','24','23','22','21','20','19','18','1','0','17','16','15','14','13','12','10','8','6'}});
params.run_as_me='0';
params.tolerancecontrolled='1';
params.deleteafteruse='1';
params.inevent='0';
params.outevent='0';
params.resources='''''';
params.tempdir='''''';
params.simloglevel='''Warning''';
params.enable_fmulogging='1';
params.fmulogging_cats='''''';
params.log_file_name='''''';
params.csv=''';''';
params.out_enum_as_int_flag='1';
params.log_only_outputs='1';
params.result_file='''''';
params.stepevent='1';
params.stateevent='1';
params.timeevent='1';
params.OutputOn='0';
params.meshpoints='1';
params.superdensetimes='1';
params.fixedComStepsize='0.0';
params.provideDerivative='0';
params.exploitOutDerivative='1';
params.visible='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'FMU');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[-783.875244,90.334698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Input');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[-231.875214,124.534698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Output');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[-231.875214,56.534698]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Output_1');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag0, '1', 'input'}, [-341.125198,138.734698;-341.125198,149.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '3', 'output'},{block_tag1, '1', 'input'}, [-322.125183,100.334698;-322.125183,86.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '4', 'output'},{block_tag1, '2', 'input'}, [-337.125183,81.134698;-337.125183,66.534698], false);
scsm=add_explicit_link(scsm,{block_tag2, '5', 'output'},{block_tag1, '3', 'input'}, [-357.125183,61.934698;-357.125183,46.534698], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'Controller_FMU');
scsm = set_diagram_context(scsm, {['A=[-0.3,3,1;0,0,2;0,0,0];',char(10),'B=[1;2;3];',char(10),'C=[1,1,2;0,2,3];',char(10),'D=0;',char(10),'x0=[-2;1;2];',char(10),'K=[0.1834511,-0.0635571;0.0556004,0.5931633;0.0409687,0.0975615];',char(10),'L=[-0.0041585,-0.1489701,-0.4993004];',char(10)]});
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-893.354111,293.715106]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='4';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-899.354111,230.214892]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='zeros(3,1)';
params.B='[0.1;0.1;0.1]';
params.seed='2113248';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Random');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-771.483475,220.214892]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Demux');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-525.841812,247.064395]);
blk = set_block_size(blk,[17.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-698.817947,250.214892]);
blk = set_block_size(blk,[15.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Sum_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-297.645889,197.295611]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Sum_2');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-668.993789,357.704389]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='L';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'MatrixGain_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-482.181004,262.063775]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Mux');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'controller');
blk = set_block_origin(blk,[-659.997801,256.214729]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.945098,0.854902,0.854902,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag8] = add_block(scsm, blk, 'controller');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[-432.610112,272.063775]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A-K*C';
params.B='[B,K]';
params.C='eye(size(A))';
params.D='zeros(size([B,K]))';
params.x0='zeros(size(x0))';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'ContStateSpace');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-310.228060,292.063775]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Split_6');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-723.470489,341.754366]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Split_7');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-896.302231,78.749805]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='4';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'SampleClock_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-528.789932,32.099093]);
blk = set_block_size(blk,[17.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Sum_3');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-300.594009,-17.669690]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Sum_2_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-485.129124,47.098474]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Mux_1');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[-435.558232,57.098474]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A-K*C';
params.B='[B,K]';
params.C='eye(size(A))';
params.D='zeros(size([B,K]))';
params.x0='zeros(size(x0))';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'ContStateSpace_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-671.941909,142.739087]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='L';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'MatrixGain_1_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-701.766067,35.249591]);
blk = set_block_size(blk,[15.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Sum_1_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-774.431595,5.249591]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Demux_1');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-902.302231,15.249591]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='zeros(3,1)';
params.B='[0.1;0.1;0.1]';
params.seed='2113248';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Random_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-313.176180,77.098474]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Split_6_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-726.418609,126.789065]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Split_7_1');
blk = instantiate_super_block();
scsm0 = subsystem_3();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'FMU ME');
blk = set_block_origin(blk,[-662.945921,41.249428]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag23] = add_block(scsm, blk, 'FMU ME');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-896.328171,-159.767545]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='4';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'SampleClock_1_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-528.815872,-206.418256]);
blk = set_block_size(blk,[17.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Sum_3_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-300.619949,-256.187040]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'Sum_2_1_1');
blk = instantiate_block('system/Routing/Mux');
blk = set_block_origin(blk,[-485.155064,-191.418876]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.inports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Mux_1_1');
blk = instantiate_block('system/Dynamical/ContStateSpace');
blk = set_block_origin(blk,[-435.584172,-181.418876]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.A='A-K*C';
params.B='[B,K]';
params.C='eye(size(A))';
params.D='zeros(size([B,K]))';
params.x0='zeros(size(x0))';
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'ContStateSpace_1_1');
blk = instantiate_block('system/MatrixOperations/MatrixGain');
blk = set_block_origin(blk,[-671.967849,-95.778262]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='L';
params.overflow='''Nothing''';
params.mulmethod='''Gain*u1''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'MatrixGain_1_1_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[-701.792007,-203.267759]);
blk = set_block_size(blk,[15.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Sum_1_1_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[-774.457535,-233.267759]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='2';
params.outports=struct('size',{{'-1','-2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag31] = add_block(scsm, blk, 'Demux_1_1');
blk = instantiate_block('system/SignalGenerators/Random');
blk = set_block_origin(blk,[-902.328171,-223.267759]);
blk = set_block_size(blk,[72.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.distribution='''Normal''';
params.A='zeros(3,1)';
params.B='[0.1;0.1;0.1]';
params.seed='2113248';
blk = set_block_parameters(blk,params);
[scsm, block_tag32] = add_block(scsm, blk, 'Random_1_1');
blk = instantiate_super_block();
scsm0 = subsystem_4();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'FMU CS');
blk = set_block_origin(blk,[-662.971861,-197.267921]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.988235,0.890196,0.811765,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag33] = add_block(scsm, blk, 'FMU CS');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-313.202120,-161.418876]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag34] = add_block(scsm, blk, 'Split_6_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-726.444549,-111.728285]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag35] = add_block(scsm, blk, 'Split_7_1_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[-219.000015,207.295611]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag36] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[-221.948135,-7.669690]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag37] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1_1');
blk = set_block_origin(blk,[-221.974075,-246.187040]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[-10,10]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag38] = add_block(scsm, blk, 'Scope_1_1');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag7, '2', 'input'}, [-498.841812,277.064078], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '2', 'output'},{block_tag3, '2', 'input'}, [-544.033371,235.215404;-544.033371,262.064508], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag6, '1', 'input'}, [-310.228234,377.704611], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag5, '1', 'input'}, [-310.228060,242.295611], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag11, '1', 'input'}, [-723.470489,377.704640], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag7, '1', 'input'}, [-500.851947,341.754366;-500.851947,307.063532], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag4, '1', 'input'}, [-723.470489,295.214971], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag3, '1', 'input'}, [-535.841811,292.214445], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag5, '2', 'input'}, [-557.684921,268.214449;-557.684921,212.295611], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag8, '1', 'input'}, [-669.997801,280.215195], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag36, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag18, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag15, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag21, '2', 'output'},{block_tag17, '1', 'input'}, [-313.176354,162.739310], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag14, '1', 'input'}, [-313.176180,27.330310], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag22, '1', 'input'}, [-726.418609,162.739338], false);
scsm=add_explicit_link(scsm,{block_tag22, '2', 'output'},{block_tag15, '1', 'input'}, [-503.800067,126.789065;-503.800067,92.098231], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag18, '1', 'input'}, [-726.418609,80.249670], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag37, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag23, '2', 'output'},{block_tag14, '2', 'input'}, [-560.633041,53.249147;-560.633041,-2.669690], false);
scsm=add_explicit_link(scsm,{block_tag19, '2', 'output'},{block_tag13, '2', 'input'}, [-546.981491,20.250102;-546.981491,47.099206], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag13, '1', 'input'}, [-538.789931,77.249143], false);
scsm=add_event_link(scsm,{block_tag24, '1', 'output'},{block_tag32, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag31, '1', 'output'},{block_tag30, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag27, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag28, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag34, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag34, '2', 'output'},{block_tag29, '1', 'input'}, [-313.202294,-75.778040], false);
scsm=add_explicit_link(scsm,{block_tag34, '1', 'output'},{block_tag26, '1', 'input'}, [-313.202120,-211.187040], false);
scsm=add_explicit_link(scsm,{block_tag29, '1', 'output'},{block_tag35, '1', 'input'}, [-726.444549,-75.778011], false);
scsm=add_explicit_link(scsm,{block_tag35, '2', 'output'},{block_tag27, '1', 'input'}, [-503.826007,-111.728285;-503.826007,-146.419119], false);
scsm=add_explicit_link(scsm,{block_tag35, '1', 'output'},{block_tag30, '1', 'input'}, [-726.444549,-158.267680], false);
scsm=add_explicit_link(scsm,{block_tag32, '1', 'output'},{block_tag31, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag38, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag30, '1', 'output'},{block_tag33, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag33, '2', 'output'},{block_tag26, '2', 'input'}, [-560.658981,-185.268202;-560.658981,-241.187040], false);
scsm=add_explicit_link(scsm,{block_tag31, '2', 'output'},{block_tag25, '2', 'input'}, [-547.007431,-218.267247;-547.007431,-191.418143], false);
scsm=add_explicit_link(scsm,{block_tag33, '1', 'output'},{block_tag25, '1', 'input'}, [-538.815871,-161.268206], false);
out_1 = scsm;
end

Controller_FMU = subsystem_1();
Controller_FMU = set_model_workspace (Controller_FMU, {''});
Controller_FMU = set_initial_time (Controller_FMU, '0');
Controller_FMU = set_final_time (Controller_FMU, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
Controller_FMU = set_solver_parameters( Controller_FMU, tol);
Controller_FMU = evaluate_model (Controller_FMU);
scsm = Controller_FMU;
