function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'set_clear_bit');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/BitOperations/ClearBit');
blk = set_block_origin(blk,[42.000000,-118.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int32''';
params.bit='2';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ClearBit');
blk = instantiate_block('system/BitOperations/SetBit');
blk = set_block_origin(blk,[15.000000,-4.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int32''';
params.bit='4';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SetBit');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-172.000000,-10.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Ramp');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[130.000000,-6.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-103.000000,-10.000000]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int32''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'DatatypeConversion');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_2');
blk = set_block_origin(blk,[127.000000,-117.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Scope_2');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-175.000000,-121.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Ramp_2');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-106.000000,-121.000000]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int32''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'DatatypeConversion_1');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag3, '1', 'input'}, [92.500000,16.000000;92.500000,14.000000], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag1, '1', 'input'}, [1.000000,10.000000;1.000000,16.000000], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'input'},{block_tag2, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'input'},{block_tag6, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'input'},{block_tag0, '1', 'output'}, [104.500000,-97.000000;104.500000,-98.000000], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'input'},{block_tag7, '1', 'output'}, [13.000000,-98.000000;13.000000,-101.000000], false);
out_1 = scsm;
end

set_clear_bit = subsystem_1();
set_clear_bit = set_model_workspace (set_clear_bit, {''});
set_clear_bit = set_initial_time (set_clear_bit, '0');
set_clear_bit = set_final_time (set_clear_bit, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0.05'};
set_clear_bit = set_solver_parameters( set_clear_bit, tol);
set_clear_bit = evaluate_model (set_clear_bit);
scsm = set_clear_bit;
