function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'controlled_rate_limiter');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[127.082920,-2.064092]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-110.917080,52.102575]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='5';
params.iniv='-0.5';
params.finv='-1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Step Generator');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-105.917080,-53.064092]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='20';
params.iniv='0.5';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Step Generator_1');
blk = instantiate_block('system/Hybrid/ControlledRateLimiter');
blk = set_block_origin(blk,[-8.917080,1.519241]);
blk = set_block_size(blk,[84.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
[scsm, block_tag3] = add_block(scsm, blk, 'ControlledRateLimiter');
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-113.917084,-0.480759]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='0.8';
params.P='0';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'SineWaveGenerator');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [101.082920,21.519241;101.082920,17.935908], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag3, '2', 'input'}, [-41.417082,19.519241;-41.417082,21.519241], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '3', 'input'}, [-37.417080,-33.064092;-37.417080,8.185908], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag1, '1', 'output'}, [-39.917080,34.852575;-39.917080,72.102575], false);
out_1 = scsm;
end

controlled_rate_limiter = subsystem_1();
controlled_rate_limiter = set_model_workspace (controlled_rate_limiter, {''});
controlled_rate_limiter = set_initial_time (controlled_rate_limiter, '0');
controlled_rate_limiter = set_final_time (controlled_rate_limiter, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0.05'};
controlled_rate_limiter = set_solver_parameters( controlled_rate_limiter, tol);
controlled_rate_limiter = evaluate_model (controlled_rate_limiter);
scsm = controlled_rate_limiter;
