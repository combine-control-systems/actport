function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'truth_table');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/LogicalOperations/TruthTable');
blk = set_block_origin(blk,[-17.000000,14.000000]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,2);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.nout='2';
params.mat='[0 1; 0 0; 1 1; 0 1]';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'TruthTable');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-94.000000,49.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='5';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Step Generator');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-113.000000,-18.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='15';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Step Generator_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[108.000000,15.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/LogicalOperations/TruthTable');
blk = set_block_origin(blk,[1.953412,-124.801239]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.nout='1';
params.mat='[1; 0; 0; 0; 1; 1; 0; 1]';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'TruthTable_1');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-117.046588,-124.801239]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='15';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Step Generator_1_1');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-118.046588,-78.801239]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='5';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Step Generator_2');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[118.327637,-124.801239]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-116.046588,-172.801239]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='1';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Step Generator_1_1_1');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [-35.500000,69.000000;-35.500000,44.000000], false);
scsm=add_explicit_link(scsm,{block_tag0, '2', 'input'},{block_tag2, '1', 'output'}, [-45.000000,24.000000;-45.000000,2.000000], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag0, '1', 'output'}, [75.500000,45.000000;75.500000,44.000000], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'input'},{block_tag0, '2', 'output'}, [75.500000,25.000000;75.500000,24.000000], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag4, '1', 'input'}, [-36.046588,-58.801239;-36.046588,-91.467906], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'input'},{block_tag4, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'input'},{block_tag5, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '3', 'input'},{block_tag8, '1', 'output'}, [-37.046588,-118.134572;-37.046588,-152.801239], false);
out_1 = scsm;
end

truth_table = subsystem_1();
truth_table = set_model_workspace (truth_table, {''});
truth_table = set_initial_time (truth_table, '0');
truth_table = set_final_time (truth_table, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
truth_table = set_solver_parameters( truth_table, tol);
truth_table = evaluate_model (truth_table);
scsm = truth_table;
