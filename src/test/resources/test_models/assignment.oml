function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'assignment');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,'Assign all - all');
blk = set_block_origin(blk,[-363.147705,317.659210]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','1','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','0','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','1','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','0','y_startingindexport','0','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Assign all - all');
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,'Assign Defined as parameter - all');
blk = set_block_origin(blk,[-363.147705,218.659210]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','0','x_vectorindex','1','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','0','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{'[2,3]'}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','1','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','0','y_startingindexport','0','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Assign Defined as parameter - all');
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,['Assign',char(10),'Defined by input',char(10),'Defined by input']);
blk = set_block_origin(blk,[-365.147705,-56.984879]);
blk = set_block_size(blk,[84.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','0','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','1','x_startingindexport','0','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','0','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','1','y_startingindexport','0','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, ['Assign',char(10),'Defined by input',char(10),'Defined by input']);
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,['Assign',char(10),'i=I(1) defined by input (decreasing)',char(10),' j=J(1) defined by input (decreasing)']);
blk = set_block_origin(blk,[-365.147705,-335.622610]);
blk = set_block_size(blk,[84.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','0','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','0','x_startingindexportdecreasing','1');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','0','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','0','y_startingindexport','0','y_startingindexportdecreasing','1');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, ['Assign',char(10),'i=I(1) defined by input (decreasing)',char(10),' j=J(1) defined by input (decreasing)']);
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,['Assign',char(10),'i=I(1) defined by input',char(10),'j=J(1) defined by input']);
blk = set_block_origin(blk,[-365.147705,-211.804876]);
blk = set_block_size(blk,[84.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','0','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','1','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','0','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','0','y_startingindexport','1','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, ['Assign',char(10),'i=I(1) defined by input',char(10),'j=J(1) defined by input']);
blk = instantiate_block('system/MatrixOperations/Assignment');
blk = set_block_ident (blk,['Assign',char(10),'Defined by input',char(10),'All']);
blk = set_block_origin(blk,[-365.147705,85.746695]);
blk = set_block_size(blk,[84.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.assignx=struct('x_selectall','1','x_vectorindex','0','x_startingindex','0','x_startingindexdecreasing','0','x_vectorindexport','0','x_startingindexport','0','x_startingindexportdecreasing','0');;
params.x_vector_index=struct('x_vi',{{}});
params.x_starting_index=struct('x_si',{{}});
params.x_starting_indexdecreasing=struct('x_si',{{}});
params.assigny=struct('y_selectall','0','y_vectorindex','0','y_startingindex','0','y_startingindexdecreasing','0','y_vectorindexport','1','y_startingindexport','0','y_startingindexportdecreasing','0');;
params.y_vector_index=struct('y_vi',{{}});
params.y_starting_index=struct('y_si',{{}});
params.y_starting_index_portdecreasing=struct('y_si',{{}});
params.onebased='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, ['Assign',char(10),'Defined by input',char(10),'All']);
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,-295.122610]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-505.950525,-326.002188]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-362.321524]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='2';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Constant_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-396.719872]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='2';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Constant_1_2');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,-329.622610]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Display');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-226.354261]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='2';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Constant_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,-159.155348]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Constant_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-260.752609]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='2';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Constant_1_2_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-505.950525,-190.034925]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Constant_1_3');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,-205.804876]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Display_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-505.950525,-29.259131]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Constant_1_3_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-65.578467]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,3]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Constant_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,1.620446]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Constant_2_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,-44.984879]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Display_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,-103.711077]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,3]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Constant_1_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,131.295418]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Constant_2_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-493.950525,64.096504]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Constant_1_1_1_1_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-505.950525,96.184898]);
blk = set_block_size(blk,[60.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Constant_1_3_1_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,97.746695]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Display_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,306.469025]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101,102]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Constant_1_3_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,341.579544]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'Constant_2_1_1_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,313.659210]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Display_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,207.068947]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[100,101,102]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Constant_1_3_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-523.950525,242.179466]);
blk = set_block_size(blk,[96.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'Constant_2_1_1_1_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-225.147400,213.929871]);
blk = set_block_size(blk,[96.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Display_1_1_1_1_1');
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag3, '2', 'input'}, [-424.355293,-314.002188;-424.355293,-298.122610], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag3, '3', 'input'}, [-420.124352,-350.321524;-420.124352,-313.122610], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag3, '4', 'input'}, [-413.554836,-384.719872;-413.554836,-328.122610], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag4, '1', 'input'}, [-403.035215,-147.155348;-403.035215,-159.304876], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag4, '2', 'input'}, [-425.371706,-178.034925;-425.371706,-174.304876], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag4, '3', 'input'}, [-415.673914,-214.354261;-415.673914,-189.304876], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag4, '4', 'input'}, [-401.991743,-248.752609;-401.991743,-204.304876], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag2, '1', 'input'}, [-412.101519,13.620446;-412.101519,6.015121], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag2, '2', 'input'}, [-434.438009,-17.259131;-434.438009,-11.984879], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag2, '3', 'input'}, [-424.740217,-53.578467;-424.740217,-29.984879], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag2, '4', 'input'}, [-419.273371,-91.711077;-419.273371,-47.984879], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag5, '1', 'input'}, [-409.590469,143.295418;-409.590469,145.746695], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag5, '2', 'input'}, [-431.926960,108.184898;-431.926960,121.746695], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag24, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag5, '3', 'input'}, [-417.184961,76.096504;-417.184961,97.746695], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag0, '1', 'input'}, [-385.065122,353.579544;-385.065122,347.659210], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag0, '2', 'input'}, [-394.065122,318.469025;-394.065122,327.659210], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag27, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag29, '1', 'output'},{block_tag1, '1', 'input'}, [-393.048737,254.179466;-393.048737,248.659210], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag1, '2', 'input'}, [-393.048737,219.068947;-393.048737,228.659210], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag30, '1', 'input'}, [-252.663559,238.659210;-252.663559,237.929871], false);
out_1 = scsm;
end

assignment = subsystem_1();
assignment = set_model_workspace (assignment, {''});
assignment = set_initial_time (assignment, '0');
assignment = set_final_time (assignment, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
assignment = set_solver_parameters( assignment, tol);
assignment = evaluate_model (assignment);
scsm = assignment;
