function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'discrete_integral');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Dynamical/DiscreteIntegral');
blk = set_block_origin(blk,[78.000000,-164.500000]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.method='''Forward Euler''';
params.typ='''double''';
params.reinit='0';
params.satur='1';
params.limit=struct('max',{{'[12]'}},'min',{{'[-1]'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'DiscreteIntegral');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-9.000000,-124.198853]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='5';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Step Generator');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[163.000000,-152.118149]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[53.358849,-34.180314]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='1';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/Dynamical/DiscreteIntegral');
blk = set_block_origin(blk,[90.873199,-364.525162]);
blk = set_block_size(blk,[60.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,2);
blk = set_block_evtnout (blk,0);
params=struct();
params.x0='0';
params.method='''Forward Euler''';
params.typ='''double''';
params.reinit='1';
params.satur='0';
params.limit=struct('max',{{}},'min',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'DiscreteIntegral_1');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[3.873199,-324.224014]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='5';
params.iniv='0';
params.finv='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Step Generator_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[175.873199,-352.143311]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[66.232048,-234.205476]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='1';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'SampleClock_1');
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[165.804550,-238.473953]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='15';
params.offset='10';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'SampleClock_2');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-5.238533,-394.811615]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='7';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Constant');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [51.000000,-104.198853;51.000000,-134.500000], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'input'},{block_tag0, '1', 'output'}, [150.500000,-132.118149;150.500000,-134.500000], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [73.358849,-55.519453;108.000000,-55.519453], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'input'},{block_tag4, '1', 'output'}, [163.373199,-332.143311;163.373199,-334.525162], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag4, '1', 'input'}, [63.873199,-304.224014;63.873199,-319.525162], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'output'},{block_tag4, '1', 'input'}, [86.232048,-255.544614;105.873199,-255.544614], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag4, '2', 'input'}, [62.817333,-374.811615;62.817333,-349.525162], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'output'},{block_tag4, '2', 'input'}, [185.804550,-271.499557;135.873199,-271.499557], false);
out_1 = scsm;
end

discrete_integral = subsystem_1();
discrete_integral = set_model_workspace (discrete_integral, {''});
discrete_integral = set_initial_time (discrete_integral, '0');
discrete_integral = set_final_time (discrete_integral, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
discrete_integral = set_solver_parameters( discrete_integral, tol);
discrete_integral = evaluate_model (discrete_integral);
scsm = discrete_integral;
