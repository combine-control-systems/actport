function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'signal_out');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalExporters/SignalOut');
blk = set_block_origin(blk,[-34.500000,380.000000]);
blk = set_block_size(blk,[100.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.varname='''A''';
params.externalActivation='0';
params.subsample='1';
params.increasingTime='0';
params.buffsize='Inf';
params.R_MP='1';
params.R_DE='1';
params.R_MPLL='0';
params.R_ZCLL='0';
params.R_TRY='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SignalOut');
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-152.500000,380.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='1';
params.P='0';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SineWaveGenerator');
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
out_1 = scsm;
end

signal_out = subsystem_1();
signal_out = set_model_workspace (signal_out, {''});
signal_out = set_initial_time (signal_out, '0');
signal_out = set_final_time (signal_out, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
signal_out = set_solver_parameters( signal_out, tol);
signal_out = evaluate_model (signal_out);
scsm = signal_out;
