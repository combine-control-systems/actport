function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'math_operations');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[256.546417,-219.422028]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='2';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Bias');
blk = instantiate_block('system/MathOperations/RoundProduct');
blk = set_block_origin(blk,[469.788513,-118.412476]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.overflow='''Nothing''';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'RoundProduct');
blk = instantiate_block('system/MathOperations/MaxMin');
blk = set_block_origin(blk,[363.327698,-174.199783]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mm='''Min''';
params.nin='2';
params.zc='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'MaxMin');
blk = instantiate_block('system/MathOperations/Negate');
blk = set_block_origin(blk,[357.067963,-99.914536]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Negate');
blk = instantiate_block('system/Hybrid/Saturation');
blk = set_block_origin(blk,[519.817001,-204.484604]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.upper='6';
params.lower='-2';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Saturation');
blk = instantiate_block('system/MathOperations/Pow');
blk = set_block_origin(blk,[229.069351,-162.735809]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Pow');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[153.888306,-139.588844]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='4';
params.iniv='-1';
params.finv='6';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Step Generator');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[157.104004,-223.196594]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='3';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[213.086678,-199.422028]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[317.652130,-142.735809]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[622.982056,-152.373558]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''',''''''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/MathOperations/Exponential');
blk = set_block_origin(blk,[482.829071,-56.337646]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.base='3';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Exponential');
blk = instantiate_block('system/MathOperations/Constraint');
blk = set_block_origin(blk,[799.814163,-267.693680]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.dae='0';
params.x0='0';
params.xdf=struct('xd',{{}});
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Constraint');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[569.817001,-142.581024]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/MathOperations/Log');
blk = set_block_origin(blk,[588.160889,-261.223663]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.base='exp (1)';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Log');
blk = instantiate_block('system/MathOperations/Abs');
blk = set_block_origin(blk,[498.802246,-268.186691]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.zcross='1';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Abs');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[499.788513,-178.556580]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/MathOperations/Hypot');
blk = set_block_origin(blk,[243.956360,-343.195801]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Hypot');
blk = instantiate_block('system/MathOperations/Horner');
blk = set_block_origin(blk,[318.029816,-343.971741]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.mode='1';
params.coeffs='[3, -5, 2]';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Horner');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_2');
blk = set_block_origin(blk,[906.496765,-267.693680]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Scope_2');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[725.229492,-326.349167]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='5';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'Gain');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[714.942017,-272.262115]);
blk = set_block_size(blk,[40.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Bias');
blk = set_block_origin(blk,[789.416931,-326.349167]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.b='1';
params.over='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'Bias_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[879.117615,-247.693680]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/MathOperations/Power');
blk = set_block_origin(blk,[653.285339,-246.832901]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.power='3';
params.ptype='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Power');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[638.160889,-226.832916]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[165.077652,-308.363850]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='4';
params.iniv='-3';
params.finv='2';
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'Step Generator_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[168.293350,-391.971600]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='3';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_3');
blk = set_block_origin(blk,[480.612488,-346.781372]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Scope_3');
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag8, '1', 'input'}, [213.086678,-203.196594], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag5, '1', 'input'}, [211.478828,-119.588844;211.478828,-132.735809], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'input'},{block_tag8, '2', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag5, '2', 'input'}, [213.086678,-152.735809], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag2, '2', 'input'}, [338.296616,-199.422028;338.296616,-164.199783], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag9, '2', 'output'}, [317.652130,-79.914536], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag2, '1', 'input'}, [353.327698,-142.735809], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag1, '1', 'input'}, [423.814728,-79.914536;423.814728,-108.412476], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '2', 'input'}, [479.788513,-154.199783], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag10, '1', 'input'}, [472.829071,7.123688;612.982056,7.123688], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'input'},{block_tag13, '2', 'output'}, [569.817001,-36.337646], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag10, '2', 'input'}, [569.817001,-132.373558], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'input'},{block_tag16, '2', 'output'}, [488.802246,-178.556580], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag4, '1', 'input'}, [499.788513,-175.075073;509.817001,-175.075073], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag14, '1', 'input'}, [563.481567,-248.186691;563.481567,-241.223663], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag25, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag21, '2', 'input'}, [704.942017,-306.349167], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'output'},{block_tag20, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag22, '1', 'input'},{block_tag23, '2', 'output'}, [879.117615,-306.349167], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag19, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag21, '1', 'input'}, [704.113678,-226.832901;704.113678,-227.262115], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'input'},{block_tag25, '2', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag10, '3', 'input'}, [638.160889,-193.465277;612.982056,-193.465277], false);
scsm=add_explicit_link(scsm,{block_tag21, '1', 'output'},{block_tag12, '1', 'input'}, [777.378090,-242.262115;777.378090,-247.693680], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag17, '1', 'input'}, [224.517006,-288.363850;224.517006,-313.195801], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag17, '2', 'input'}, [226.124855,-371.971600;226.124855,-333.195801], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag18, '1', 'input'}, [300.993088,-323.195801;300.993088,-323.971741], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'input'},{block_tag18, '1', 'output'}, [444.321152,-326.781372;444.321152,-323.971741], false);
out_1 = scsm;
end

math_operations = subsystem_1();
math_operations = set_model_workspace (math_operations, {''});
math_operations = set_initial_time (math_operations, '0');
math_operations = set_final_time (math_operations, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
math_operations = set_solver_parameters( math_operations, tol);
math_operations = evaluate_model (math_operations);
scsm = math_operations;
