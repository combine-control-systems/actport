function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'conditional_n_select');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-276.958374,-37.822163]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='5';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-261.662964,14.324234]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-253.255814,67.183792]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='0.1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Ramp');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[35.558018,-70.028145]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''',''''''}},'reverseColor',{{'0','0'}},'grid',{{'''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear'''}},'xRefresh',{{'-1','-1'}},'yScale',{{'''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''',''''''}},'color',{{'0','0'}},'marker',{{'0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-278.431412,-83.891224]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='3';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Constant_1_1');
blk = instantiate_block('system/Routing/ConditionalNSelect');
blk = set_block_origin(blk,[-121.459358,1.464790]);
blk = set_block_size(blk,[96.000000,84.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.base='0';
params.rule='''floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ConditionalNSelect');
blk = instantiate_block('system/Routing/ConditionalNSelect');
blk = set_block_origin(blk,[-113.062065,-147.990051]);
blk = set_block_size(blk,[96.000000,84.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,4);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.base='1';
params.rule='''int''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ConditionalNSelect_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-182.617275,76.263840]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-204.463348,-17.822163]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-224.300949,-63.891224]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-189.203659,34.324234]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag7, '1', 'input'}, [-182.617275,87.183792], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag3, '1', 'input'}, [-2.950670,43.464790;-2.950670,-40.028145], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'input'},{block_tag7, '2', 'output'}, [-141.898621,-74.490051;-141.898621,76.263840], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag5, '1', 'input'}, [-182.617275,74.964790], false);
scsm=add_explicit_link(scsm,{block_tag6, '3', 'input'},{block_tag8, '2', 'output'}, [-204.463348,-116.490051], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag5, '3', 'input'}, [-164.417725,-17.822163;-164.417725,32.964790], false);
scsm=add_explicit_link(scsm,{block_tag6, '4', 'input'},{block_tag9, '2', 'output'}, [-224.300949,-137.490051], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '4', 'input'}, [-155.529327,-63.891224;-155.529327,11.964790], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag3, '2', 'input'}, [9.247976,-105.990051;9.247976,-60.028145], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'input'},{block_tag10, '2', 'output'}, [-189.203659,-95.490051], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag5, '2', 'input'}, [-171.561161,34.324234;-171.561161,53.964790], false);
out_1 = scsm;
end

conditional_n_select = subsystem_1();
conditional_n_select = set_model_workspace (conditional_n_select, {''});
conditional_n_select = set_initial_time (conditional_n_select, '0');
conditional_n_select = set_final_time (conditional_n_select, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
conditional_n_select = set_solver_parameters( conditional_n_select, tol);
conditional_n_select = evaluate_model (conditional_n_select);
scsm = conditional_n_select;
