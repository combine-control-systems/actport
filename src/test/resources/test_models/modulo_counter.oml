function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'modulo_counter');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/SampleClock');
blk = set_block_origin(blk,[-42.000000,84.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,0.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
params.frequ='1';
params.offset='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SampleClock');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[88.000000,13.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalGenerators/ModuloCounter');
blk = set_block_origin(blk,[-47.000000,-7.000000]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.ini_state='0';
params.base='3.66';
params.step='0.5';
params.typ='''double''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'ModuloCounter');
blk = instantiate_block('system/SignalGenerators/ModuloCounter');
blk = set_block_origin(blk,[-53.000000,-103.250000]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.ini_state='2';
params.base='5';
params.step='1';
params.typ='''uint32''';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'ModuloCounter_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-22.000000,72.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'ActivationSplit');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[92.000000,-83.250000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1_1');
blk = set_block_origin(blk,[93.000000,-161.250000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Scope_1_1');
blk = instantiate_block('system/SignalGenerators/ModuloCounter');
blk = set_block_origin(blk,[-52.000000,-181.250000]);
blk = set_block_size(blk,[60.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.ini_state='-1';
params.base='5';
params.step='0.4';
params.typ='''double''';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'ModuloCounter_1_1');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[-71.000000,-45.250000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Block');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag1, '1', 'input'}, [23.000000,33.000000], false);
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag3, '1', 'input'},{block_tag8, '1', 'output'}, [], false);
scsm=add_event_link(scsm,{block_tag4, '1', 'output'},{block_tag2, '1', 'input'}, [-22.000000,62.500000;-17.000000,62.500000], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag5, '1', 'input'}, [17.000000,-63.250000], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag6, '1', 'input'}, [18.000000,-141.250000], false);
scsm=add_event_link(scsm,{block_tag7, '1', 'input'},{block_tag8, '2', 'output'}, [-71.000000,-123.250000], false);
scsm=add_event_link(scsm,{block_tag8, '1', 'input'},{block_tag4, '2', 'output'}, [-74.000000,-45.250000;-74.000000,72.000000], false);
out_1 = scsm;
end

modulo_counter = subsystem_1();
modulo_counter = set_model_workspace (modulo_counter, {''});
modulo_counter = set_initial_time (modulo_counter, '0');
modulo_counter = set_final_time (modulo_counter, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
modulo_counter = set_solver_parameters( modulo_counter, tol);
modulo_counter = evaluate_model (modulo_counter);
scsm = modulo_counter;
