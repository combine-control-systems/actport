function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'relational_op');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,522.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''<''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'RelationalOp');
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,455.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''==''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'RelationalOp_1');
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,389.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''~=''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'RelationalOp_1_1');
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,324.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''<=''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'RelationalOp_1_1_1');
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,246.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''>''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'RelationalOp_1_1_1_1');
blk = instantiate_block('system/LogicalOperations/RelationalOp');
blk = set_block_origin(blk,[-366.566010,178.744995]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.rule='''>=''';
params.typei='''inherit''';
params.typeo='''inherit''';
params.zcr='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'RelationalOp_1_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-590.566040,532.744995]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='1';
params.P='0';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'SineWaveGenerator');
blk = instantiate_block('system/SignalGenerators/SineWaveGenerator');
blk = set_block_origin(blk,[-592.566040,449.744965]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.M='1';
params.F='1';
params.P='1';
params.offs='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'SineWaveGenerator_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-423.566010,552.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-423.566010,485.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-423.566010,419.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-423.566010,354.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-423.566010,276.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-458.566025,469.744965]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-458.566025,465.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-458.566025,399.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Block_6');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-458.566025,334.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-458.566025,256.744995]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_8');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[-229.566010,164.744995]);
blk = set_block_size(blk,[144.000000,420.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,6);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='6';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''','''''','''''','''''',''''''}},'reverseColor',{{'0','0','0','0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse''','''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear''','''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1','-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear''','''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]','[NaN,NaN]','[NaN,NaN]','[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''','''''','''''','''''',''''''}},'color',{{'0','0','0','0','0','0'}},'marker',{{'0','0','0','0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'Scope');
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag8, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag2, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '2', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '2', 'output'},{block_tag5, '1', 'input'}, [-423.566010,208.744995], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag0, '2', 'input'}, [-458.566025,532.744995], false);
scsm=add_explicit_link(scsm,{block_tag13, '2', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag1, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag2, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '2', 'output'},{block_tag16, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'output'},{block_tag3, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag16, '2', 'output'},{block_tag17, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '2', 'output'},{block_tag5, '2', 'input'}, [-458.566025,188.744995], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag18, '1', 'input'}, [-239.566010,542.744995], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag18, '2', 'input'}, [-239.566010,475.744995], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag18, '3', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag18, '4', 'input'}, [-259.066010,344.744995;-259.066010,339.744995], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag18, '5', 'input'}, [-259.066010,266.744995;-259.066010,269.744995], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag18, '6', 'input'}, [-259.066010,198.744995;-259.066010,199.744995], false);
out_1 = scsm;
end

relational_op = subsystem_1();
relational_op = set_model_workspace (relational_op, {''});
relational_op = set_initial_time (relational_op, '0');
relational_op = set_final_time (relational_op, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
relational_op = set_solver_parameters( relational_op, tol);
relational_op = evaluate_model (relational_op);
scsm = relational_op;
