function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'bits_extraction');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/BitOperations/BitsExtraction');
blk = set_block_origin(blk,[10.000000,-20.000000]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int8''';
params.rule='''UpperHalf''';
params.bit='0';
params.scal='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'BitsExtraction');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-115.000000,-18.000000]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int8''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'DatatypeConversion');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-184.000000,-18.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='2';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Ramp');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[129.000000,-22.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-106.006866,-80.455057]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int8''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'DatatypeConversion_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-175.006866,-80.455057]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='2';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Ramp_1');
blk = instantiate_block('system/BitOperations/BitsExtraction');
blk = set_block_origin(blk,[18.993134,-82.455057]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int8''';
params.rule='''LowerHalf''';
params.bit='0';
params.scal='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'BitsExtraction_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[137.993134,-84.455057]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-106.448189,-141.337702]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int8''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'DatatypeConversion_1_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-175.448189,-141.337702]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='2';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Ramp_1_1');
blk = instantiate_block('system/BitOperations/BitsExtraction');
blk = set_block_origin(blk,[18.551811,-143.337702]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int8''';
params.rule='''RangeFromMSB''';
params.bit='4';
params.scal='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'BitsExtraction_1_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1_1');
blk = set_block_origin(blk,[137.551811,-145.337702]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Scope_1_1');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-103.999969,-213.993052]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int8''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'DatatypeConversion_1_1_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-172.999969,-213.993052]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='2';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Ramp_1_1_1');
blk = instantiate_block('system/BitOperations/BitsExtraction');
blk = set_block_origin(blk,[21.000031,-215.993052]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int8''';
params.rule='''RangeToLSB''';
params.bit='5';
params.scal='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'BitsExtraction_1_1_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1_1_1');
blk = set_block_origin(blk,[140.000031,-217.993052]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Scope_1_1_1');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-108.133682,-284.454432]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''double''';
params.ot='''int8''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'DatatypeConversion_1_1_1_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-177.133682,-284.454432]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='2';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Ramp_1_1_1_1');
blk = instantiate_block('system/BitOperations/BitsExtraction');
blk = set_block_origin(blk,[16.866318,-286.454432]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int8''';
params.rule='''RangeOfBits''';
params.bit='[3 5]';
params.scal='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'BitsExtraction_1_1_1_1');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1_1_1_1');
blk = set_block_origin(blk,[135.866318,-288.454432]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'Scope_1_1_1_1');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag0, '1', 'output'}, [109.500000,-2.000000;109.500000,-0.000000], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'input'},{block_tag1, '1', 'output'}, [-7.500000,-0.000000;-7.500000,2.000000], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'input'},{block_tag2, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'input'},{block_tag6, '1', 'output'}, [118.493134,-64.455057;118.493134,-62.455057], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'input'},{block_tag4, '1', 'output'}, [1.493134,-62.455057;1.493134,-60.455057], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'input'},{block_tag5, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'input'},{block_tag10, '1', 'output'}, [118.051811,-125.337702;118.051811,-123.337702], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'input'},{block_tag8, '1', 'output'}, [1.051811,-123.337702;1.051811,-121.337702], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'input'},{block_tag9, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'input'},{block_tag14, '1', 'output'}, [120.500031,-197.993052;120.500031,-195.993052], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'input'},{block_tag12, '1', 'output'}, [3.500031,-195.993052;3.500031,-193.993052], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'input'},{block_tag13, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'input'},{block_tag18, '1', 'output'}, [116.366318,-268.454432;116.366318,-266.454432], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'input'},{block_tag16, '1', 'output'}, [-0.633682,-266.454432;-0.633682,-264.454432], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'input'},{block_tag17, '1', 'output'}, [], false);
out_1 = scsm;
end

bits_extraction = subsystem_1();
bits_extraction = set_model_workspace (bits_extraction, {''});
bits_extraction = set_initial_time (bits_extraction, '0');
bits_extraction = set_final_time (bits_extraction, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0.05'};
bits_extraction = set_solver_parameters( bits_extraction, tol);
bits_extraction = evaluate_model (bits_extraction);
scsm = bits_extraction;
