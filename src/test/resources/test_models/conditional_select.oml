function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'conditional_select');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[-68.000000,38.000000]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2>=a''';
params.thra='12';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ConditionalSelect');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-194.000000,82.171181]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='5';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-195.000000,0.991642]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='1';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Constant_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-276.958206,42.000000]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Ramp');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[80.000000,-35.966567]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{'''''','''''',''''''}},'reverseColor',{{'0','0','0'}},'grid',{{'''Coarse''','''Coarse''','''Coarse'''}},'xScale',{{'''linear''','''linear''','''linear'''}},'xRefresh',{{'-1','-1','-1'}},'yScale',{{'''linear''','''linear''','''linear'''}},'yInterval',{{'[NaN,NaN]','[NaN,NaN]','[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{'''''','''''',''''''}},'color',{{'0','0','0'}},'marker',{{'0','0','0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[-68.000000,-36.000000]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2<a''';
params.thra='5';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ConditionalSelect_1');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[-66.000000,-105.000000]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2~=a''';
params.thra='12';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'ConditionalSelect_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-107.000000,20.991641]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-193.991638,-69.077233]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='3';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Constant_1_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-114.993645,-49.077233]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-144.000000,78.043793]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'Block_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-133.295517,62.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Block_2');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-131.813126,-12.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[67.605721,-172.291595]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/Routing/ConditionalSelect');
blk = set_block_origin(blk,[-80.072186,-178.330383]);
blk = set_block_size(blk,[84.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.u2typ='''double''';
params.rule='''u2==true''';
params.thra='12';
params.nzz='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'ConditionalSelect_1_1_1');
blk = instantiate_block('system/SignalGenerators/StepGenerator');
blk = set_block_origin(blk,[-237.748093,-174.143921]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.steptime='15';
params.iniv='true';
params.finv='false';
blk = set_block_parameters(blk,params);
[scsm, block_tag15] = add_block(scsm, blk, 'Step Generator');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-130.345535,-81.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-143.678131,-97.000000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'Block_5');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag10, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'input'},{block_tag7, '2', 'output'}, [-107.000000,4.000000], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag0, '3', 'input'}, [-107.000000,46.000000], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'input'},{block_tag9, '2', 'output'}, [-114.993645,-65.000000], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag5, '3', 'input'}, [-110.995819,-49.077233;-110.995819,-28.000000], false);
scsm=add_explicit_link(scsm,{block_tag6, '3', 'input'},{block_tag17, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag0, '1', 'input'}, [-144.000000,78.000000], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [48.000000,62.000000;48.000000,-2.633234], false);
scsm=add_explicit_link(scsm,{block_tag4, '2', 'input'},{block_tag5, '1', 'output'}, [48.000000,-15.966567;48.000000,-12.000000], false);
scsm=add_explicit_link(scsm,{block_tag4, '3', 'input'},{block_tag6, '1', 'output'}, [49.000000,-29.299900;49.000000,-81.000000], false);
scsm=add_explicit_link(scsm,{block_tag5, '2', 'input'},{block_tag12, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag0, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '2', 'input'},{block_tag16, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'input'},{block_tag11, '2', 'output'}, [-133.295517,-12.000000], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag13, '1', 'input'}, [35.766767,-154.330383;35.766767,-152.291595], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'input'},{block_tag15, '1', 'output'}, [-138.910140,-154.330383;-138.910140,-154.143921], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'input'},{block_tag16, '2', 'output'}, [-130.345535,-138.330383], false);
scsm=add_explicit_link(scsm,{block_tag16, '1', 'input'},{block_tag12, '2', 'output'}, [-131.813126,-81.000000], false);
scsm=add_explicit_link(scsm,{block_tag14, '3', 'input'},{block_tag17, '2', 'output'}, [-143.678131,-170.330383], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'input'},{block_tag10, '2', 'output'}, [-144.000000,-97.000000], false);
out_1 = scsm;
end

conditional_select = subsystem_1();
conditional_select = set_model_workspace (conditional_select, {''});
conditional_select = set_initial_time (conditional_select, '0');
conditional_select = set_final_time (conditional_select, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
conditional_select = set_solver_parameters( conditional_select, tol);
conditional_select = evaluate_model (conditional_select);
scsm = conditional_select;
