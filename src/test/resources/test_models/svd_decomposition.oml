function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'svd_decomposition');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MatrixOperations/SVDdecomposition');
blk = set_block_origin(blk,[-590.048950,-10.070175]);
blk = set_block_size(blk,[72.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.decomptyp='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'SVDdecomposition');
blk = instantiate_block('system/MatrixOperations/SVDdecomposition');
blk = set_block_origin(blk,[-590.048950,-118.070175]);
blk = set_block_size(blk,[72.000000,72.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.decomptyp='1';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'SVDdecomposition_1');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[-902.048950,9.929825]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='[1,2,3;4,5,6;7,8,9]';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[-669.048950,25.929825]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-358.048950,13.929825]);
blk = set_block_size(blk,[156.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Display');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-358.048950,-81.070175]);
blk = set_block_size(blk,[192.000000,48.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'Display_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-358.048950,-186.070175]);
blk = set_block_size(blk,[192.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Display_1_1');
blk = instantiate_block('system/SignalViewers/Display');
blk = set_block_origin(blk,[-358.048950,-275.070175]);
blk = set_block_size(blk,[204.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.fmt='''%6g''';
params.dt='1';
params.showatend='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Display_1_1_1');
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag3, '1', 'input'}, [-669.048950,29.929825], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '2', 'output'},{block_tag1, '1', 'input'}, [-669.048950,-82.070175], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag4, '1', 'input'}, [-434.548950,25.929825;-434.548950,43.929825], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag5, '1', 'input'}, [-438.048950,-58.070175;-438.048950,-57.070175], false);
scsm=add_explicit_link(scsm,{block_tag1, '2', 'output'},{block_tag6, '1', 'input'}, [-410.048950,-82.070175;-410.048950,-156.070175], false);
scsm=add_explicit_link(scsm,{block_tag1, '3', 'output'},{block_tag7, '1', 'input'}, [-438.048950,-106.070175;-438.048950,-245.070175], false);
out_1 = scsm;
end

svd_decomposition = subsystem_1();
svd_decomposition = set_model_workspace (svd_decomposition, {''});
svd_decomposition = set_initial_time (svd_decomposition, '0');
svd_decomposition = set_final_time (svd_decomposition, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
svd_decomposition = set_solver_parameters( svd_decomposition, tol);
svd_decomposition = evaluate_model (svd_decomposition);
scsm = svd_decomposition;
