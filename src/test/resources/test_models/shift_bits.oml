function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'shift_bits');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/BitOperations/ShiftBits');
blk = set_block_origin(blk,[-56.308986,-98.971436]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int16''';
params.nb='3';
params.np='''Arithmetic''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'ShiftBits');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope');
blk = set_block_origin(blk,[64.626862,-98.971436]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Scope');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-261.040070,-98.971436]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Ramp');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-184.847626,-98.971436]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''inherit''';
params.ot='''int16''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'DatatypeConversion');
blk = instantiate_block('system/SignalViewers/Scope');
blk = set_block_ident (blk,'Scope_1');
blk = set_block_origin(blk,[66.867043,-159.424362]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.externalActivation='0';
params.winSize='[400,400]';
params.winPos='[300,300]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
params.useSubplot='1';
params.win_s=struct('title',{{''''''}},'reverseColor',{{'0'}},'grid',{{'''Coarse'''}},'xScale',{{'''linear'''}},'xRefresh',{{'-1'}},'yScale',{{'''linear'''}},'yInterval',{{'[NaN,NaN]'}});
params.plotTitle='''''';
params.plotColor='0';
params.plotGrid='''Coarse''';
params.xScale='''linear''';
params.xRefresh='-1';
params.yScale='''linear''';
params.yInterval='[NaN,NaN]';
params.signals=struct('name',{{''''''}},'color',{{'0'}},'marker',{{'0'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Scope_1');
blk = instantiate_block('system/BitOperations/ShiftBits');
blk = set_block_origin(blk,[-54.068805,-159.424362]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.Datatype='''int16''';
params.nb='-3';
params.np='''Arithmetic''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'ShiftBits_1');
blk = instantiate_block('system/SignalGenerators/Ramp');
blk = set_block_origin(blk,[-258.799889,-159.424362]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.slope='1';
params.startt='0';
params.initout='0';
params.zc='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'Ramp_1');
blk = instantiate_block('system/SignalConversions/DatatypeConversion');
blk = set_block_origin(blk,[-182.607445,-159.424362]);
blk = set_block_size(blk,[90.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.it='''inherit''';
params.ot='''int16''';
params.satur='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'DatatypeConversion_1');
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'input'},{block_tag2, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'input'},{block_tag6, '1', 'output'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag5, '1', 'input'}, [], false);
out_1 = scsm;
end

shift_bits = subsystem_1();
shift_bits = set_model_workspace (shift_bits, {''});
shift_bits = set_initial_time (shift_bits, '0');
shift_bits = set_final_time (shift_bits, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '0.05'};
shift_bits = set_solver_parameters( shift_bits, tol);
shift_bits = evaluate_model (shift_bits);
scsm = shift_bits;
