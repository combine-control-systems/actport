function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'event_generate');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/ActivationOperations/EventGenerate');
blk = set_block_origin(blk,[292.945923,-100.915993]);
blk = set_block_size(blk,[80.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,2);
params=struct();
params.nevout='2';
params.etimes=struct('time',{{'1','2'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'EventGenerate');
blk = instantiate_block('system/SignalViewers/EventScope');
blk = set_block_origin(blk,[292.945923,-254.915985]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'EventScope');
blk = instantiate_block('system/SignalViewers/EventScope');
blk = set_block_origin(blk,[332.945923,-324.915985]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='1';
params.winSize='[-1,-1]';
params.winPos='[-1,-1]';
params.winNam='''''';
params.winHidden='1';
params.showAtEnd='0';
params.option='''Reuse''';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'EventScope_1');
scsm=add_event_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag0, '2', 'output'},{block_tag2, '1', 'input'}, [], false);
out_1 = scsm;
end

event_generate = subsystem_1();
event_generate = set_model_workspace (event_generate, {''});
event_generate = set_initial_time (event_generate, '0');
event_generate = set_final_time (event_generate, '4');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
event_generate = set_solver_parameters( event_generate, tol);
event_generate = evaluate_model (event_generate);
scsm = event_generate;
