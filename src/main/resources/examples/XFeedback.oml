function [out_1] = subsystem_2 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'modulo');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/Modulo');
blk = set_block_origin(blk,[497.818573,-414.136173]);
blk = set_block_size(blk,[60.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.op='''Modulo''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'Modulo');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[578.496175,-411.425284]);
blk = set_block_size(blk,[12.000000,48.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.in_ports=struct('sgn',{{'''+''','''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Sum_3');
blk = instantiate_block('system/SignalGenerators/Constant');
blk = set_block_origin(blk,[661.782044,-435.858887]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.C='pi';
params.typ='''double''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Constant');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[447.083000,-423.136241]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''-'''}});
params.satur='''Nothing''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum_1_1');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[599.811310,-451.784118]);
blk = set_block_size(blk,[24.000000,24.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='2';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Gain_2');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[673.502015,-381.425284]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'regular_in_port');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[642.388306,-397.425284]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'regular_in_port_1');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[402.732208,-415.136241]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'regular_out_port');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[641.803170,-423.858889]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Block_7');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[641.803103,-423.858887]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Block_8');
blk = instantiate_block('system/ActivationOperations/ExtractActivation');
blk = set_block_origin(blk,[497.818604,-353.843933]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,1);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'ExtractActivation');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[632.374633,-371.425284]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[527.818604,-363.844000]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'ActivationSplit');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag3, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag0, '1', 'input'}, [567.818568,-387.425273], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag0, '2', 'input'}, [571.095642,-439.784118;571.095642,-405.136235], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag1, '3', 'input'}, [641.803058,-403.424765], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag9, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '2', 'output'},{block_tag3, '2', 'input'}, [641.803170,-422.721741;469.083000,-422.721741], false);
scsm=add_explicit_link(scsm,{block_tag9, '2', 'output'},{block_tag4, '1', 'input'}, [641.803042,-439.784331], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag8, '1', 'input'}, [641.803103,-423.858889], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag11, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag1, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag10, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag11, '2', 'output'},{block_tag10, '1', 'input'}, [632.374834,-333.844002], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag1, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag12, '2', 'output'},{block_tag3, '1', 'input'}, [453.083380,-363.844067], false);
scsm=add_event_link(scsm,{block_tag12, '1', 'output'},{block_tag0, '1', 'input'}, [], false);
out_1 = scsm;
end

function [out_1] = subsystem_1 ()
scsm = instantiate_diagram();
scsm = set_diagram_bg_color (scsm, [1, 1, 1]);
scsm = set_diagram_3d (scsm, 1);
scsm = set_diagram_zoom (scsm, 1);
scsm = set_diagram_name (scsm, 'XFeedback');
scsm = set_diagram_context(scsm, {''});
blk = instantiate_block('system/MathOperations/MathExpression');
blk = set_block_origin(blk,[316.332519,-213.405105]);
blk = set_block_size(blk,[300.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,3);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='3';
params.work='getcurrentenv()';
params.exx='''(sqrt(v*v*(u1*cos(u3)+u2*sin(u3))^2+(u1^2+u2^2)*(w*w-v*v))+v*(u1*cos(u3)+u2*sin(u3)))/((w*w-v*v))''';
params.zc='0';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag0] = add_block(scsm, blk, 'MathExpression');
blk = instantiate_block('system/MathOperations/Gain');
blk = set_block_origin(blk,[630.093105,-213.403786]);
blk = set_block_size(blk,[24.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.gain='v';
params.overflow='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag1] = add_block(scsm, blk, 'Gain_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[760.356081,-210.459957]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag2] = add_block(scsm, blk, 'Sum_2_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[759.229121,-137.204128]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag3] = add_block(scsm, blk, 'Sum_2');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[757.390910,-291.047237]);
blk = set_block_size(blk,[12.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''+''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag4] = add_block(scsm, blk, 'Sum_2_2');
blk = instantiate_block('system/MathOperations/MathFunc');
blk = set_block_origin(blk,[691.766664,-258.047237]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''u^2''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag5] = add_block(scsm, blk, 'MathFunc');
blk = instantiate_block('system/MathOperations/MathFunc');
blk = set_block_origin(blk,[694.294543,-288.047368]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''u^2''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag6] = add_block(scsm, blk, 'MathFunc_1');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[240.142168,-191.301184]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag7] = add_block(scsm, blk, 'Sum');
blk = instantiate_block('system/MathOperations/Sum');
blk = set_block_origin(blk,[243.943246,-258.645033]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''-''','''+'''}});
params.satur='''Nothing''';
params.externalActivation='1';
blk = set_block_parameters(blk,params);
[scsm, block_tag8] = add_block(scsm, blk, 'Sum_4');
blk = instantiate_block('system/MathOperations/Atan2');
blk = set_block_origin(blk,[795.276698,-129.203891]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag9] = add_block(scsm, blk, 'Atan2');
blk = instantiate_block('system/MathOperations/TrigFunc');
blk = set_block_origin(blk,[488.971402,-76.574878]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''cos''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag10] = add_block(scsm, blk, 'TrigFunc_2');
blk = instantiate_block('system/MathOperations/TrigFunc');
blk = set_block_origin(blk,[488.971402,-137.434137]);
blk = set_block_size(blk,[36.000000,24.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.func='''sin''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag11] = add_block(scsm, blk, 'TrigFunc_1_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[703.903506,-152.434143]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag12] = add_block(scsm, blk, 'Product_1');
blk = instantiate_block('system/MathOperations/Product');
blk = set_block_origin(blk,[705.127407,-91.575031]);
blk = set_block_size(blk,[12.000000,36.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nin='2';
params.in_ports=struct('sgn',{{'''*''','''*'''}});
params.overflow='''Nothing''';
params.rmethod='''Floor''';
params.externalActivation='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag13] = add_block(scsm, blk, 'Product_1_1');
blk = instantiate_block('system/Routing/Demux');
blk = set_block_origin(blk,[204.208788,-279.645152]);
blk = set_block_size(blk,[7.000000,60.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.nout='3';
params.outports=struct('size',{{'1','1','1'}});
blk = set_block_parameters(blk,params);
[scsm, block_tag14] = add_block(scsm, blk, 'Demux');
blk = instantiate_super_block();
scsm0 = subsystem_2();
blk = fill_super_block(blk,scsm0);
blk = set_block_ident (blk,'modulo');
blk = set_block_origin(blk,[855.276698,-139.203891]);
blk = set_block_size(blk,[40.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_fg_color(blk,[0.000000,0.000000,0.000000,1.000000]);
blk = set_block_icon_text(blk,'','text1');
blk = set_block_nin (blk,2);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
blk = set_atomic_property(blk,0);
[scsm, block_tag15] = add_block(scsm, blk, 'modulo');
blk = instantiate_block('system/ActivationOperations/ExtractActivation');
blk = set_block_origin(blk,[216.142168,-93.477759]);
blk = set_block_size(blk,[60.000000,40.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,1);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag16] = add_block(scsm, blk, 'ExtractActivation');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[157.664517,-174.301297]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag17] = add_block(scsm, blk, 'regular_in_port');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[157.664517,-223.699897]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag18] = add_block(scsm, blk, 'regular_in_port_1');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[157.664517,-259.645265]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='3';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag19] = add_block(scsm, blk, 'regular_in_port_2');
blk = instantiate_block('system/Ports/Input');
blk = set_block_origin(blk,[157.664559,-306.525820]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,1);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='4';
params.outsize='[-1;-2]';
params.outtyp='''inherit''';
params.dept='0';
blk = set_block_parameters(blk,params);
[scsm, block_tag20] = add_block(scsm, blk, 'regular_in_port_3');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[911.821840,-271.047237]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='1';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag21] = add_block(scsm, blk, 'regular_out_port');
blk = instantiate_block('system/Ports/Output');
blk = set_block_origin(blk,[915.276698,-129.203891]);
blk = set_block_size(blk,[20.000000,20.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[1.000000,1.000000,1.000000,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
params.portNumber='2';
params.insize='[-1;-2]';
params.intyp='''inherit''';
blk = set_block_parameters(blk,params);
[scsm, block_tag22] = add_block(scsm, blk, 'regular_out_port_1');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[288.340276,-173.301237]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag23] = add_block(scsm, blk, 'Block_4');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[288.826491,-221.869622]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag24] = add_block(scsm, blk, 'Block_5');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[659.658385,-221.868816]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag25] = add_block(scsm, blk, 'Block_10');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[302.009544,-207.466050]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag26] = add_block(scsm, blk, 'Block_3');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[302.009474,-125.368973]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag27] = add_block(scsm, blk, 'Block_11');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[688.954388,-143.433646]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag28] = add_block(scsm, blk, 'Block_12');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[672.428437,-37.414431]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag29] = add_block(scsm, blk, 'Block_9');
blk = instantiate_block('system/Links/Split');
blk = set_block_origin(blk,[194.208788,-249.645152]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.250980,0.250980,0.250980,1.000000]);
blk = set_block_nin (blk,1);
blk = set_block_nout (blk,3);
blk = set_block_evtnin (blk,0);
blk = set_block_evtnout (blk,0);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag30] = add_block(scsm, blk, 'Split');
blk = instantiate_block('system/Links/ActivationSplit');
blk = set_block_origin(blk,[246.142168,-121.299612]);
blk = set_block_size(blk,[0.000000,0.000000]);
blk = set_block_flip(blk,0);
blk = set_block_theta(blk,0.000000);
blk = set_block_bg_color(blk,[0.717647,0.058824,0.074510,1.000000]);
blk = set_block_nin (blk,0);
blk = set_block_nout (blk,0);
blk = set_block_evtnin (blk,1);
blk = set_block_evtnout (blk,3);
params=struct();
blk = set_block_parameters(blk,params);
[scsm, block_tag31] = add_block(scsm, blk, 'ActivationSplit');
scsm=add_explicit_link(scsm,{block_tag0, '1', 'output'},{block_tag1, '1', 'input'}, [626.332519,-195.403534], false);
scsm=add_explicit_link(scsm,{block_tag23, '1', 'output'},{block_tag0, '1', 'input'}, [288.339720,-183.404638], false);
scsm=add_explicit_link(scsm,{block_tag24, '1', 'output'},{block_tag0, '2', 'input'}, [288.825653,-195.405063], false);
scsm=add_explicit_link(scsm,{block_tag26, '1', 'output'},{block_tag0, '3', 'input'}, [306.332519,-207.466049], false);
scsm=add_explicit_link(scsm,{block_tag1, '1', 'output'},{block_tag28, '1', 'input'}, [688.953723,-195.403786], false);
scsm=add_explicit_link(scsm,{block_tag12, '1', 'output'},{block_tag2, '1', 'input'}, [736.487671,-134.434222;736.487671,-183.459969], false);
scsm=add_explicit_link(scsm,{block_tag25, '1', 'output'},{block_tag2, '2', 'input'}, [735.137723,-221.868444;735.137723,-201.460008], false);
scsm=add_explicit_link(scsm,{block_tag2, '1', 'output'},{block_tag9, '1', 'input'}, [782.364973,-99.203922], false);
scsm=add_explicit_link(scsm,{block_tag13, '1', 'output'},{block_tag3, '2', 'input'}, [729.205323,-73.575020;729.205323,-128.204068], false);
scsm=add_explicit_link(scsm,{block_tag3, '1', 'output'},{block_tag9, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag5, '1', 'output'},{block_tag4, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag6, '1', 'output'},{block_tag4, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag29, '2', 'output'},{block_tag5, '1', 'input'}, [672.428157,-246.047220], false);
scsm=add_explicit_link(scsm,{block_tag25, '2', 'output'},{block_tag6, '1', 'input'}, [659.658294,-276.047216], false);
scsm=add_explicit_link(scsm,{block_tag14, '1', 'output'},{block_tag7, '2', 'input'}, [222.304352,-229.645152;222.304352,-182.300360], false);
scsm=add_explicit_link(scsm,{block_tag7, '1', 'output'},{block_tag23, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag14, '2', 'output'},{block_tag8, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag8, '1', 'output'},{block_tag24, '1', 'input'}, [288.826491,-240.645033], false);
scsm=add_explicit_link(scsm,{block_tag10, '1', 'output'},{block_tag13, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag27, '1', 'output'},{block_tag10, '1', 'input'}, [302.009269,-64.573233], false);
scsm=add_explicit_link(scsm,{block_tag27, '2', 'output'},{block_tag11, '1', 'input'}, [478.971408,-125.396847], false);
scsm=add_explicit_link(scsm,{block_tag28, '2', 'output'},{block_tag12, '2', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag28, '1', 'output'},{block_tag13, '2', 'input'}, [688.953723,-82.574965], false);
scsm=add_explicit_link(scsm,{block_tag14, '3', 'output'},{block_tag26, '1', 'input'}, [302.009289,-269.645152], false);
scsm=add_explicit_link(scsm,{block_tag23, '2', 'output'},{block_tag29, '1', 'input'}, [288.339820,-37.414526], false);
scsm=add_explicit_link(scsm,{block_tag26, '2', 'output'},{block_tag27, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag17, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag18, '1', 'output'},{block_tag8, '1', 'input'}, [233.943338,-213.700173], false);
scsm=add_explicit_link(scsm,{block_tag19, '1', 'output'},{block_tag30, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag30, '2', 'output'},{block_tag16, '1', 'input'}, [194.208330,-73.477465], false);
scsm=add_explicit_link(scsm,{block_tag30, '1', 'output'},{block_tag14, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag16, '1', 'output'},{block_tag31, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag31, '1', 'output'},{block_tag7, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag24, '2', 'output'},{block_tag25, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag29, '1', 'output'},{block_tag3, '1', 'input'}, [743.027723,-37.414456;743.027723,-110.204008], false);
scsm=add_explicit_link(scsm,{block_tag4, '1', 'output'},{block_tag21, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag15, '1', 'output'},{block_tag22, '1', 'input'}, [], false);
scsm=add_event_link(scsm,{block_tag31, '2', 'output'},{block_tag8, '1', 'input'}, [272.446182,-121.299548;272.446182,-212.644268], false);
scsm=add_explicit_link(scsm,{block_tag9, '1', 'output'},{block_tag15, '1', 'input'}, [], false);
scsm=add_explicit_link(scsm,{block_tag20, '1', 'output'},{block_tag15, '2', 'input'}, [845.276262,-296.528009], false);
scsm=add_explicit_link(scsm,{block_tag11, '1', 'output'},{block_tag12, '1', 'input'}, [], false);
blk = instantiate_block('TEXT_f');
blk = set_block_ident(blk, 'Annotation');
blk = set_block_origin(blk,[228.836411,6.759651]);
blk = set_block_size(blk,[494.000000,28.000000]);
params=struct();
  params.txt='This model is not made to run on its own.  It is included in the "plane_missiles" model';
blk = set_block_parameters (blk, params);
[scsm, block_tag32] = add_block(scsm, blk, 'Annotation');
out_1 = scsm;
end

XFeedback = subsystem_1();
XFeedback = set_model_workspace (XFeedback, {''});
XFeedback = set_initial_time (XFeedback, '0');
XFeedback = set_final_time (XFeedback, '30');
tol = {'0.000001', '0.000001', '-1', '0' , '0', 'lsodar', '-1'};
XFeedback = set_solver_parameters( XFeedback, tol);
XFeedback = evaluate_model (XFeedback);
scsm = XFeedback;
